{"version":3,"sources":["webpack://CheckoutJS/webpack/universalModuleDefinition","webpack://CheckoutJS/webpack/bootstrap","webpack://CheckoutJS/./src/keywords.js","webpack://CheckoutJS/external \"@babel/runtime/regenerator\"","webpack://CheckoutJS/external \"@babel/runtime/helpers/asyncToGenerator\"","webpack://CheckoutJS/./src/util.js","webpack://CheckoutJS/external \"@babel/runtime/helpers/getPrototypeOf\"","webpack://CheckoutJS/external \"@babel/runtime/helpers/classCallCheck\"","webpack://CheckoutJS/external \"@babel/runtime/helpers/inherits\"","webpack://CheckoutJS/external \"@babel/runtime/helpers/typeof\"","webpack://CheckoutJS/external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://CheckoutJS/external \"@babel/runtime/helpers/createClass\"","webpack://CheckoutJS/./src/browsers/globalCommerce.js","webpack://CheckoutJS/external \"@babel/runtime/helpers/assertThisInitialized\"","webpack://CheckoutJS/./src/payments/payment.js","webpack://CheckoutJS/./src/browsers/payment.js","webpack://CheckoutJS/./src/base.js","webpack://CheckoutJS/external \"@babel/runtime/helpers/defineProperty\"","webpack://CheckoutJS/external \"@babel/runtime/helpers/slicedToArray\"","webpack://CheckoutJS/./src/shopper.js","webpack://CheckoutJS/external \"@babel/runtime/helpers/toConsumableArray\"","webpack://CheckoutJS/./src/browsers/payments/payPal.js","webpack://CheckoutJS/./src/browsers/storefront.js","webpack://CheckoutJS/./src/browsers/payments/applePay.js","webpack://CheckoutJS/./src/browsers/payments/googlePay.js","webpack://CheckoutJS/./src/payments/payPal.js","webpack://CheckoutJS/./src/browsers/payments/klarnaCredit.js","webpack://CheckoutJS/./src/browsers/payments/alipay.js","webpack://CheckoutJS/./src/browsers/payments/msts.js","webpack://CheckoutJS/./src/browsers/payments/ccavenue.js","webpack://CheckoutJS/./src/browsers/payments/dropin.js","webpack://CheckoutJS/./src/config.js","webpack://CheckoutJS/./src/browsers/browserUtil.js","webpack://CheckoutJS/./src/shopperApi.js","webpack://CheckoutJS/external \"axios\"","webpack://CheckoutJS/external \"parseurl\"","webpack://CheckoutJS/./src/payments/klarnaCredit.js","webpack://CheckoutJS/./src/payments/alipay.js","webpack://CheckoutJS/./src/payments/msts.js","webpack://CheckoutJS/./src/payments/ccavenue.js","webpack://CheckoutJS/./src/payments/dropin.js","webpack://CheckoutJS/./src/browsers/compliance.js","webpack://CheckoutJS/./src/browsers/payments/creditCard.js","webpack://CheckoutJS/./src/browsers/offlinerefund.js","webpack://CheckoutJS/./src/paymentService.js","webpack://CheckoutJS/./src/node/payment.js","webpack://CheckoutJS/./src/payments/applePay.js","webpack://CheckoutJS/./src/payments/googlePay.js","webpack://CheckoutJS/./src/checkout.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_CHECKOUTJS","LOGGING","DRJS","GET","POST","SHOPPERAPI","UTIL","CONFIG","SHOPPER","CJS","UNDEFINED","PAYMENTS","REQUESTPAYLOAD","CARTDATA","PAYMENT","FAIL_TO_APPLY_SOURCE","REDIRECT_COMPLETED","PAYMENT_SERVICE","ELEMENT","NICKNAME","DISPLAYPOSTCLOUDPAYREDIRECTPAGE","SUBMITTHENREDIRECT","REQUISITIONID","require","Global","window","isBrowser","document","isWebWorker","self","constructor","isNode","process","versions","node","Util","parent","collection","session","_this","extend","excludeMethods","writableMethods","log","errorMessage","extractErrorMessage","encryptPayload","hasSpecialsCharacters","useRecurringPayment","getSourcePaymentType","getAutoRenewSubscriptionCount","axios","error","interceptors","response","use","config","runningTimes","status","skipError","refreshToken","request","Promise","reject","this","cache","setValue","_shopper","_cjs","siteId","getPrefix","prefix","JSON","stringify","ex","console","dir","getValue","_value","parse","removeValue","setCache","getCache","removeCache","url","originalUrl","match","_url","parseurl","pl","search","decode","decodeURIComponent","replace","queryParams","exec","query","txt","obj","replaceElement","prop","k","substr","length","innerObj","split","forEach","_error","debug","apply","arguments","Error","getOwnPropertyNames","html","emptyValueSelector","parser","DOMParser","doc","parseFromString","querySelectorAll","filter","a","innerHTML","remove","body","template","elem","createElement","innerText","cfg","_cfg","urlParam","parseURL","path","Shopper","apiKey","keys","updateConfig","refresh","_config","_util","drCheckoutJS","options","headers","responseType","timeout","method","data","locale","currency","withCredentials","applyHeaders","setShopper","gcCookies","callback","id","getTime","api","callby","requestParams","params","requestBody","type","emit","responseBody","callBackResponse","_log","consoleLog","trace","message","errors","code","labels","description","error_description","text","AESKey","encryptionKey","crypto","payload","original","AESSetting","stringPadding","str","blockSize","padder","format","bitLength","Buffer","from","toString","iv","alloc","iv_type","concat","randomBytes","cipher","createCipheriv","algorithm","setAutoPadding","count","byteLength","add","repeat","encrypted","update","final","cartData","cart","lineItems","lineItem","reduce","product","customAttributes","attribute","find","quantity","_shopperApi","getCart","_type","payment","recurringName","page","Date","now","performance","Math","random","floor","btoa","atob","userAgent","navigator","msie","indexOf","parseInt","substring","rv","edge","ranges","specialsCharacters","Array","isArray","item","join","state","includes","Base","out","desc","getOwnPropertyDescriptor","writable","set","$","GlobalCommerce","getBillingAddress","getShippingAddress","getAddressValues","getAddress","getCreditCard","getSelectedCloudPayPayment","createSourceToCloudPay","applyShippingCountry","applyShippingOption","applyAddress","submitCheckoutForm","initCart","initCheckout","initConfirmOrder","initThankYou","initOfflineRefund","checkTC","gC","lib","jQuery","disable","_jQuery","util","loadScript","then","noConflict","_payment","cloudPayPayload","details","result","source","clientSecret","overlay","backToCart","className","appendChild","createTextNode","BACK_TO_CART","onclick","append","close","getElementsByClassName","removeChild","cartPageLink","getCartPageLink","link","location","href","on","_getBasePaymentType","_paymentType","_name","storefront","validateSource","Payments","_gcPayments","_gcStorefront","_configPayment","liveInstrument","mountElement","disabled","CreditCardGC","ApplePayGC","GooglePayGC","PayPalGC","DropinGC","KlarnaCreditWeb","AlipayWeb","MstsWeb","CcavenueWeb","StorefrontPayment","configurable","defineProperties","_gC","enablePayments","createPaymentItems","push","supportedCurrency","supportedRecurringPayments","supportedGeography","billingAddress","country","supportedSettings","supportedThresholdAmount","supported","createPaymentInfo","show","all","index","initPaymentItems","_gCPayment","initPaymentBefore","initPayment","initPaymentAfter","completePaymentInfo","initTC","PaymentGC","createdType","_selector","selector","submitCartWithShopperApi","checkoutForm","submit","shippingAddress","convertPaymentRequestAddressToShopperApiAddress","address","applyAddressToCart","sourceId","cloudPaySourceId","val","applySourceToCart","getConfirmOrderPageLink","sourceData","createSource","PAYMENT_AUTHORIZATION_FAILED","applySourceToCloudPay","_drjs","getPayments","_payments","createObject","sourceArgs","element","_element","values","isReadySubmitState","source_id","amount","owner","gcStorefront","_selectorAddress","billingContainer","is","shippingDifferentThanBilling","shippingContainer","firstName","lastName","phone","phoneNumber","email","emailAddress","organization","companyName","line1","line2","city","countrySubdivision","postalCode","additionalAddressInfo","division","phoneticFirstName","phoneticLastName","$paymentMethod","attr","addressNames","shippingToGc","billingToGc","shippingCountry","_selectorShippingEstimator","shippingEstimator","container","$shippingCountry","shipCountry","shippingOptionId","$shippingOptionID","shippingOptionID","_changeEstimatedShipping","changeEstimatedShipping","zoneList","optionID","shippingForm","selectedIndex","trigger","first","refundToken","$form","prepend","cloudPayPayment","hide","retrieveSource","e","valid","_doneWithRTAV","preventDefault","stopPropagation","selectedPayment","loadingOverlay","syncShopperInfo","cloudPayPaymentMethodID","applySource","resolve","validateElements","validatePaymentElements","updateCartInfoByApi","_cart","updateCart","applySourceId","createPaymentOptionToShopper","paymentOption","billingOptionSelector","nickName","catch","removeAttr","prevPayment","changePaymentMethod","$paymentSection","select","saveAsPaymentOption","closest","toggle","init","billingCountry","disableNotSupportedPayment","each","supportedCurrencyAndGeography","selectAddressEntry","$this","applySelectedStyle","createShopperPaymentOptionSelector","_cloudPayPayload","$confirmForm","confirmOrder","confirmOrderForm","originalButtonLockDown","ready","_buttonLockDown","buttonLockDown","once","paymentElement","$replacement","replacement","replaceWith","paymentContainer","$termsOfSaleAcceptance","termsOfSaleAcceptance","getActiveAcceptance","CHECKOUT","activeAcceptance","redirectInfoPage","skipPaymentTypeCheck","currentSource","submitBtnProcessing","getInfoPageLink","infoLink","getSelectedSource","pendingFundsRedirectFlow","pendingFundsReceiver","$delayedPaymentRefund","delayedPaymentRefund","elements","offlineRefund","elementId","_offlinerefund","OfflineRefund","cloudPayTermsAcceptance","$cloudPayBtn","cloudPayBtn","cloudPayTCError","css","unwrap","$overlay","click","wrap","showTC","cloudPayTC","entityData","entity","parseHTML","cloudPayTCContainer","$cloudPayTCContainer","$cloudPayTCContainerAll","empty","insertBefore","CREDITCARD","isAuthenticated","$billingOption","$paymentContainer","billingNickNameContainer","billingOptionContainer","getPaymentOptions","paymentOptions","$input","billingNickName","onPaymentChange","paymentType","paymentList","elm","paymentOptionID","creditCard","cardNumber","displayName","brand","displayableNumber","cardnumber","parentNode","textContent","cardexpiration","cardcvv","expirationMonth","expirationYear","classList","classes","complete","sourceClientSecret","billingOptionNickName","removeClass","errorClass","nickname","route","paymentMethod","submitCart","orderId","order","getThankYouPageLink","$paymentMethodID","threePgCheckoutBtn","_configGc","validated","$nickinput","addClass","Storefront","ShopperGC","shopper","getCookie","_id","prefixName","hidePaymentSection","resizeToMobilePayments","paymentId","DETAILS","paymentSection","payDetailsSize","section$","ConfigGC","payments","payPal","applePay","googlePay","codJapan","supportedGeographies","supportedCurrencies","payco","preventPopupClose","bankTransfer","msts","showEnrollButton","dropin","Payment","assign","createPaymentRequest","completeSourceId","shippingAddressChange","shippingOptionChange","validate","cancel","routing","getReturnUrl","getCancelUrl","getGeographiesErrorMsg","getCurrenciesErrorMsg","getAmountErrorMsg","PaymentRequestPayload","PaymentElement","paymentRequestData","paymentRequestResponseObject","contactInformation","flow","event","shopperApiShippingAddress","updateObject","errorObject","shippingOption","updateSelectedShippingMethodOnCart","_supportedCurrencies","_currentCurrency","_supportedGeographies","geographiesValidated","currenciesValidated","amountValidated","countries","geographiesErrorMsg","currenciesErrorMsg","amountErrorMsg","minAmount","pricing","orderTotal","maxAmount","singleSubscriptionForRecurring","totalItemsInCart","_storefront","_configLabels","INVALID_BILLING_COUNTRY","VALIDATOR_INVALID_TYPE","_data","ENTITY_NAME","getText","toUpperCase","submitThenRedirect","total","displayItems","shippingOptions","getOwner","returnUrl","cancelUrl","upstreamId","supportedPaymentSession","paymentSession","expressCheckout","label","TOTAL","salePriceWithQuantity","discount","DISCOUNT","salesTax","TAX","tax","shipping","ESTIMATED_SHIPPING_AND_HANDLING","shippingAndHandling","displayIncludeTax","shippingMethod","cartShippingValue","shippingOptionObject","cost","detail","selected","getShopper","neighborhood","createOption","style","required","requireFieldUpdate","destroy","createElements","_initPaymentMethod","elementsObj","elementPlacement","getElementById","mount","blur","focus","change","applyToCart","_source","updateSourceData","redirect","redirectFlow","replaceErrors","validateInfo","updateTC","_classList","contains","invalid","removeListener","_configUrl","paymentCallBack","startsWith","origin","_href","URL","_urlParams","searchParams","delete","_nextUrl","encodeURIComponent","autoBind","Reflect","proto","getPrototypeOf","propertyNames","getOwnPropertySymbols","isIncluded","methodName","getAccessToken","getSessionToken","checkoutJS","_cookie","part","cookieItem","toJSON","setting","sessionToken","access_token","authentication","drUrl","newUrl","domain","hostname","getShopperAccessToken","updateShopper","Cookie","cookies","entries","disableCache","tokenInfo","disableStorage","deep","x","PROTECTED_LIST","PayPalWeb","PayPalPaymentRequestPayload","payPalModuleName","_paypal","paypalElement","loading","Button","paypal","addToCart","payPayBtn","base","env","drjsApiKey","actions","paypalSourceData","token","onAuthorize","routed","onCancel","onError","err","button","render","setAttribute","sync","afterOverlay","liveInstrumentOverlay","createNewWindowRedirectOverlay","createIframeRedirectOverlay","_verifySettings","initDigitalRiverJS","cloudPayTermsAcceptanceInput","getElementsByName","checked","termsOfSalesAcceptance","drjs","toLowerCase","loadCss","DigitalRiver","_compliance","Compliance","validatedInfo","amountRemainingToBeContributed","amountsEstimated","parseFloat","redirectOverlay","_newWindowRedirectFlow","_iframeRedirectFlow","hasResolved","redirectUrl","iframeResize","padding","iframePadding","iframe","getElementsByTagName","innerHeight","addEventListener","urlParams","return","removeEventListener","inlineStyle","src","newWindowRedirectButton","timer","opener","open","checkOpener","isIE","isChargeable","cancelAnimationFrame","setTimeout","requestAnimationFrame","closed","clearInterval","title","redirectNotice","PMT_REDIRECT_NOTICE","buttonClass","CLICKHERE","oneTimeRedirect","getSelectedPayment","sessionId","getOrder","pendingFundsInstruction","getPendingFundsInstruction","pendingFunds","_textAttributeName","removeTag","applySourceToShopper","ApplePayWeb","GooglePayWeb","DropinWeb","getSiteInfo","siteData","site","defaultLocale","localOption","localeOptions","localeOption","primaryCurrency","applePayElement","applepay","ApplePaySession","_applePay","waitOnClick","applePaymentRequestData","paymentRequest","canMakePayment","isGCPage","updateWith","onkeydown","paymentSource","_promise","$elementBtn","$elementVisible","before","checkoutBtn","placeHolder$","googlePayElement","googlepay","_googlePay","googlePaymentRequestData","PayPal","recipient","unitAmount","salePrice","items","taxAmount","requestShipping","shippingAmount","trim","KlarnaCreditPaymentRequestPayload","AlipayPaymentRequestPayload","createFields","createEnrollButton","getMarketingName","getClientReferenceId","getPoNumber","getNotes","MstsPaymentRequestPayload","getTemplateValue","fieldsTemplate","_options","enrollBtnTemplate","getEnrollLink","enrollLink","enrollHTML","uuid","getUUID","marketingName","marketingNameList","clientReferenceId","getEcommerceUrl","ecommerceUrl","CcavenuePaymentRequestPayload","DropinPaymentRequestPayload","configuration","onSuccess","onReady","createDropin","updatePaymentContainer","isConfirmOrder","removePaymentContainer","paymentContainer$","paymentName","Config","authUserName","authPassword","apiRequestUrlBase","info","thankYou","errorModal","billingOption","compliance","webkitAutofill","buttonType","buttonColor","buttonLanguage","directDebit","directDebitGb","wireTransfer","layout","size","color","shape","tagline","funding","allowed","payPalCredit","bPay","onlineBanking","onlinebanking","konbini","klarnaCredit","alipay","poNumber","notes","enrollNowButton","bancontact","ccavenue","trustly","customerCredit","showSavePaymentAgreement","showComplianceSection","CLOSE","SHIPPING_AND_HANDLING","SUB_TOTAL","CHECKOUT_PAYMENT_COMPLETED","apiOption","maxRedirects","expand","gibberishAES","loadScriptPromise","BrowserUtil","excludeBindMethods","setCookie","sessionStorage","args","splice","days","expires","date","setTime","toUTCString","cookie","nameEQ","ca","charAt","msg","errorJson","extractErrorId","errorId","modal","alert","head","documentElement","script","done","onload","onreadystatechange","readyState","postMessage","currentScript","getCurrentScript","getAttribute","_src","_debug","form","action","hiddenField","GibberishAES","s2a","plaintext","Base64","encode","rawEncrypt","target","cleanup","clearTimeout","promise","scripts","res","stack","cb","ShopperApi","getAPIOption","_text","APIRequest","texts","array","requisitionId","authorization","_token","shippingMethodId","requestUrl","jsonp","grant_type","base64Encode","map","refresh_token","client_id","_params","_query","password","productID","y","externalReferenceId","lineItemId","promoCode","username","dr_limited_token","createOAuthToken","deleteToken","login","paymentOptionId","addressId","isDefault","uri","categoryId","offerId","popName","orderDetail","subscriptionId","prAddressObject","addressType","_undefined","_address","ShopperApiCredentials","dr_external_reference_id","dr_session_token","dr_user_id","sku","imageUrl","thumbnailImage","taxRate","custom","discountAmount","getShippingOwner","shippingOwner","getTokenInfo","userId","createdOn","lastAccessed","hasPaidBefore","getOrders","orders","totalResults","autoRenewal","subscriptionDescription","paymentMethodConfiguration","complianceElement","complianceOptions","remainElements","siblings","lastFourDigits","number","cvv","offlineRefundElement","offlineOptions","PaymentService","secret","NodePayments","_createPayments","ApplePay","GooglePay","CheckoutJS","DefaultConfig","customize","setEvent","businessEntityCode","legalUpdate","getEntity","logStr","post","_destroyPayments","_initPayments","_defineProperties","updateLocaleAndCurrency","_initConfig","initCompliance","globalCommerce","initPageLoad","getDisclosure","disclosure","confirmDisclosure","localizedText","autorenewalPlanTerms","getDetails","force","events","eventsObj","uniqueIds","listener","caller","idx","listeners","callers","slice","g"],"mappings":"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","file":"CheckoutJS.node.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"checkout-js\"] = factory();\n\telse\n\t\troot[\"CheckoutJS\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n","const _CHECKOUTJS = '_checkoutJS';\r\nconst LOGGING = 'logging';\r\nconst DRJS = 'drjs';\r\nconst GET = 'get';\r\nconst POST = 'post';\r\nconst SHOPPERAPI = 'shopperApi';\r\nconst UTIL = 'util';\r\nconst CONFIG = 'config';\r\nconst SHOPPER = 'shopper';\r\nconst CJS = 'CJS';\r\nconst UNDEFINED = 'undefined';\r\nconst PAYMENTS = 'payments';\r\nconst REQUESTPAYLOAD = 'requestPayload';\r\nconst CARTDATA = 'cartData';\r\nconst PAYMENT = 'payment';\r\nconst FAIL_TO_APPLY_SOURCE = 'fail to apply source';\r\nconst REDIRECT_COMPLETED = 'redirectCompleted';\r\nconst PAYMENT_SERVICE = 'paymentService';\r\nconst ELEMENT = 'element';\r\nconst NICKNAME = 'nickname';\r\nconst DISPLAYPOSTCLOUDPAYREDIRECTPAGE = 'DisplayPostCloudPayRedirectPage';\r\nconst SUBMITTHENREDIRECT = 'submitThenRedirect';\r\nconst REQUISITIONID = 'requisitionId';\r\n\r\nexport {\r\n    _CHECKOUTJS,\r\n    LOGGING,\r\n    DRJS,\r\n    GET,\r\n    POST,\r\n    SHOPPERAPI,\r\n    UTIL,\r\n    CONFIG,\r\n    SHOPPER,\r\n    CJS,\r\n    UNDEFINED,\r\n    PAYMENTS,\r\n    REQUESTPAYLOAD,\r\n    CARTDATA,\r\n    PAYMENT,\r\n    FAIL_TO_APPLY_SOURCE,\r\n    REDIRECT_COMPLETED,\r\n    PAYMENT_SERVICE,\r\n    ELEMENT,\r\n    NICKNAME,\r\n    DISPLAYPOSTCLOUDPAYREDIRECTPAGE,\r\n    SUBMITTHENREDIRECT,\r\n    REQUISITIONID\r\n};\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","import axios from 'axios';\r\nimport parseurl from 'parseurl';\r\nimport {Base} from './base';\r\nimport {Shopper} from \"./shopper\";\r\nimport {_CHECKOUTJS, LOGGING, SHOPPER, CONFIG, UTIL, SHOPPERAPI, UNDEFINED, PAYMENTS, CARTDATA} from \"./keywords\";\r\n\r\nconst Global = (typeof window !== UNDEFINED ? window : global);\r\n\r\nconst isBrowser = typeof window !== UNDEFINED && typeof window.document !== UNDEFINED;\r\n\r\n/* eslint-disable no-restricted-globals */\r\nconst isWebWorker =\r\n    typeof self === 'object' &&\r\n    self.constructor &&\r\n    self.constructor.name === 'DedicatedWorkerGlobalScope';\r\n\r\n/* eslint-enable no-restricted-globals */\r\nconst isNode =\r\n    typeof process !== UNDEFINED &&\r\n    process.versions != null &&\r\n    process.versions.node != null;\r\n/**\r\n * @class Util\r\n * @classdesc The base utility class.\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {Session} [session]\r\n * @category Utility\r\n */\r\nclass Util extends Base {\r\n\r\n    constructor(parent, collection, session) {\r\n        super(parent,extend({\r\n            excludeMethods:{ constructor:true },\r\n            writableMethods:{\r\n                log:true,\r\n                errorMessage:true,\r\n                extractErrorMessage:true,\r\n                encryptPayload:true,\r\n                hasSpecialsCharacters:true,\r\n                useRecurringPayment:true,\r\n                getSourcePaymentType:true,\r\n                getAutoRenewSubscriptionCount:true,\r\n                axios:true,\r\n                error:true\r\n            }\r\n        },collection));\r\n        const _this = this[_CHECKOUTJS];\r\n        this.extend = extend;\r\n        this.isBrowser = isBrowser;\r\n        this.isWebWorker = isWebWorker;\r\n        this.isNode = isNode;\r\n\r\n        /**\r\n         * The HTTP client library for API requests.\r\n         * @name axios\r\n         * @type Axios\r\n         * @memberof Util\r\n         * @instance\r\n         * @see https://github.com/axios/axios\r\n         */\r\n        this.axios = Global.axios?Global.axios:axios;\r\n\r\n        this.axios.interceptors.response.use((response) =>{\r\n            if(response) {\r\n                response.config.runningTimes = 1;\r\n            }\r\n            return response;\r\n        }, async (error) => {\r\n            if(error.config && !error.config.runningTimes) error.config.runningTimes = 1;\r\n            if (error.response && 401 === error.response.status && error.config.runningTimes<2) {\r\n                error.config.runningTimes++;\r\n                if(!error.config.skipError) {\r\n                    await parent[SHOPPERAPI].refreshToken();\r\n                    return _this[UTIL].axios.request(error.config);\r\n                }\r\n            }\r\n            return Promise.reject(error);\r\n        });\r\n\r\n        session = session || {};\r\n        const cache = {};\r\n\r\n        /**\r\n         * Stores the value for the specified key in the session.\r\n         * @param {string} name - The property name.\r\n         * @param {string} value - The property value.\r\n         * @returns {Promise<void>}\r\n         */\r\n        this.setValue = async (name, value) => {\r\n            const _cjs = parent;\r\n            const _shopper = _cjs[SHOPPER];\r\n            if(_shopper && _cjs[CONFIG].siteId) {\r\n                const prefix = await _shopper.getPrefix();\r\n                name = prefix + name;\r\n                if (value && typeof value === 'object') {\r\n                    try {\r\n                        session[name] = JSON.stringify(value);\r\n                    }catch(ex){\r\n                        console.error(ex);\r\n                        console.dir(value);\r\n                    }\r\n                } else if (!value) {\r\n                    delete session[name];\r\n                } else {\r\n                    session[name] = value;\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Returns the value of the specified key from the session.\r\n         * @param {string} name - The property name.\r\n         * @returns {Promise<Object|null>}\r\n         */\r\n        this.getValue = async (name) => {\r\n            const _cjs = parent;\r\n            const _shopper = _cjs[SHOPPER];\r\n            if(_shopper) {\r\n                const prefix = await _shopper.getPrefix();\r\n                name = prefix + name;\r\n                let _value = session[name];\r\n                if (_value) {\r\n                    try {\r\n                        _value = JSON.parse(session[name]);\r\n                        // eslint-disable-next-line no-empty\r\n                    } catch (ex) {\r\n                    }\r\n                    return (_value);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Deletes the specified key and its associated value from the session.\r\n         * @param {string} name - The property name.\r\n         * @returns {Promise<void>}\r\n         */\r\n        this.removeValue = async (name) => {\r\n            const _cjs = parent;\r\n            const prefix = await _cjs[SHOPPER].getPrefix();\r\n            name = prefix + name;\r\n            delete session[name];\r\n        };\r\n\r\n        /**\r\n         * Stores the value for the specified key in the internal cache object.\r\n         * @param {string} name - The property name.\r\n         * @param {string} value - The property value.\r\n         * @returns {Promise<void>}\r\n         */\r\n        this.setCache = async (name, value) => {\r\n            cache[name] = value;\r\n        };\r\n\r\n        /**\r\n         * Returns the value of the specified key from the internal cache object.\r\n         * @param {string} name - The property name.\r\n         * @returns {Promise<Object|null>}\r\n         */\r\n        this.getCache = async (name) => {\r\n            return (name?cache[name]:cache);\r\n        };\r\n\r\n        /**\r\n         * Deletes the specified key and its associated value from the internal cache object.\r\n         * @param {string} name - The property name.\r\n         * @returns {Promise<void>}\r\n         */\r\n        this.removeCache = async (name) => {\r\n            delete cache[name];\r\n        };\r\n\r\n    }\r\n\r\n    parseURL(url, originalUrl) {\r\n        const _url = parseurl({\r\n            originalUrl: originalUrl,\r\n            url: url\r\n        });\r\n\r\n        let match;\r\n        const pl     = /\\+/g,\r\n              search = /([^&=]+)=?([^&]*)/g,\r\n              decode = function (s) { return decodeURIComponent(s.replace(pl, \" \")); },\r\n              queryParams = {};\r\n        // eslint-disable-next-line no-cond-assign\r\n        while (match = search.exec(_url.query)) {\r\n            queryParams[decode(match[1])] = decode(match[2]);\r\n        }\r\n        _url.queryParams = queryParams;\r\n        return _url;\r\n    }\r\n\r\n    format(txt, obj, replaceElement = false) {\r\n        if (obj) {\r\n            txt = txt.replace(/{([\\w.]+)}/g, function (prop) {\r\n                const k = prop.substr(1, prop.length - 2);\r\n                let innerObj = obj;\r\n                k.split('.').forEach((n)=>{\r\n                    if (innerObj && innerObj.hasOwnProperty(n)) {\r\n                        innerObj = innerObj[n] || '';\r\n                    }else{\r\n                        innerObj = null;\r\n                    }\r\n                });\r\n                if (innerObj!==null)\r\n                    return innerObj || '';\r\n                else if(replaceElement)\r\n                    return '';\r\n                else\r\n                    return prop;\r\n            });\r\n        }\r\n        return txt;\r\n    }\r\n\r\n    error() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _error = _cjs[CONFIG].debug ? console.error.bind(Global.console) : Global.console.error;\r\n        _error.apply(_cjs, arguments);\r\n    }\r\n\r\n    replaceErrors(key, value) {\r\n        if (value instanceof Error) {\r\n            const error = {};\r\n            Object.getOwnPropertyNames(value).forEach(function (key) {\r\n                error[key] = value[key];\r\n            });\r\n            return error;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    removeTag(html, emptyValueSelector='*', match = /{([\\w.]+)}/g) {\r\n        let parser = new DOMParser();\r\n        let doc = parser.parseFromString(html, 'text/html');\r\n        if(emptyValueSelector && emptyValueSelector.length) {\r\n            [...doc.querySelectorAll(emptyValueSelector)]\r\n                .filter(a => a.innerHTML.match(match))\r\n                .forEach(a => a.remove());\r\n        }\r\n        return doc.body.innerHTML;\r\n    }\r\n\r\n    getTemplateValue(template) {\r\n        let elem = document.createElement('div');\r\n        elem.innerHTML = template;\r\n        return elem.innerText;\r\n    }\r\n\r\n    async _initConfig(cfg) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        let _cfg = {};\r\n        if(typeof cfg === 'string') {\r\n            try {\r\n                _cfg = JSON.parse(cfg);\r\n                return (_cfg);\r\n            } catch (e) {\r\n                const urlParam =_cjs[UTIL].parseURL(cfg).path.split('/');\r\n                if(urlParam && urlParam[1]===\"store\" && urlParam.length>=2) {\r\n                    _cjs[CONFIG].siteId = urlParam[2];\r\n                }\r\n            }\r\n        }\r\n        await new Shopper(_cjs);\r\n        if(cfg && (!_cfg.apiKey || _cfg.apiKey.length === 0)  && typeof cfg === \"string\" && _cjs[CONFIG].apiKey.length === 0 && Object.keys(_cfg).length === 0) {\r\n            _cfg = await _cjs[UTIL].updateConfig(cfg);\r\n        }\r\n        return (_cfg);\r\n    }\r\n\r\n    async updateConfig(url, refresh) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopper = _cjs[SHOPPER];\r\n        if(_config.drCheckoutJS !== false) {\r\n            const options = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                responseType: 'json',\r\n                timeout: 10000,\r\n                method: refresh ? 'post' : 'get',\r\n                data: `locale=${_config.locale}&currency=${_config.currency}`,\r\n                url: url,\r\n                withCredentials: true\r\n            };\r\n\r\n            await _shopper.applyHeaders(options);\r\n\r\n            const response = await _util.axios(options);\r\n\r\n            if (response.data) {\r\n                const _cfg = response.data;\r\n                if (_cfg && typeof _cfg.apiKey === 'object' && _cfg.apiKey.apiKey && typeof _cfg.apiKey.apiKey === 'string' ) {\r\n                    _util.extend(_cfg, _cfg.apiKey);\r\n                }\r\n                _util.log('UpdateConfig', _cfg);\r\n                await _shopper.setShopper({\r\n                    locale: _cfg.locale,\r\n                    currency: _cfg.currency,\r\n                    //isAuthenticated: _cfg.isAuthenticated,\r\n                    gcCookies: response.headers ? response.headers['set-cookie'] : null\r\n                });\r\n                return _cfg;\r\n            }\r\n            return response.data;\r\n        }\r\n    }\r\n\r\n    async APIRequest(options,callback) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const log = {\r\n            id: _util.getTime(),\r\n            api:options.api,\r\n            method:options.callby,\r\n            requestParams: options.params || {},\r\n            requestBody: options.data || {},\r\n            type:options.method,\r\n            url:options.url\r\n        };\r\n        _cjs.emit(LOGGING,log);\r\n        try {\r\n            const response = await _util.axios(options);\r\n            if (response) {\r\n                log.responseBody = response.data;\r\n                if(callback) {\r\n                    const callBackResponse = await callback(log, response);\r\n                    if (callBackResponse) {\r\n                        log.responseBody = callBackResponse;\r\n                    }\r\n                }\r\n                _cjs.emit(LOGGING, log);\r\n                return log.responseBody;\r\n            }\r\n        }catch(ex){\r\n            log.error = ex;\r\n            _cjs.emit(LOGGING,log);\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    async log() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _log = _config.debug ? console.log.bind(Global.console) : Global.console.log;\r\n        if(_config.consoleLog) {\r\n            _log.apply(_cjs, arguments);\r\n        }\r\n    }\r\n\r\n    async trace() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _trace = _cjs[CONFIG].debug ? console.trace.bind(Global.console) : Global.console.trace;\r\n        _trace.apply(_cjs, arguments);\r\n    }\r\n\r\n    async errorMessage() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _error = _cjs[CONFIG].debug ? console.error.bind(Global.console) : Global.console.error;\r\n        _error.apply(_cjs, arguments);\r\n    }\r\n\r\n    async extractErrorMessage(ex) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        let message;\r\n        if(ex) {\r\n            message = ex.message;\r\n            if (ex && ex.response && ex.response.data && ex.response.data.errors && ex.response.data.errors.error.code) {\r\n                message = ex.response.data.errors.error.code;\r\n                if (_cjs[CONFIG].labels.error[message]) {\r\n                    message = _cjs[CONFIG].labels.error[message];\r\n                }\r\n            } else if (ex.response && ex.response.data && ex.response.data.errors) {\r\n                message = ex.response.data.errors.error[0].code;\r\n                if (_cjs[CONFIG].labels.error[message]) {\r\n                    message = _cjs[CONFIG].labels.error[message];\r\n                } else {\r\n                    message = ex.response.data.errors.error[0].description;\r\n                }\r\n            } else if (ex.response && ex.response.data && ex.response.data.error && ex.response.data.error_description) {\r\n                message = ex.response.data.error_description;\r\n                if (_cjs[CONFIG].labels.error[ex.response.data.error]) {\r\n                    message = _cjs[CONFIG].labels.error[ex.response.data.error];\r\n                }\r\n            } else if (ex.error && ex.error.errors) {\r\n                message = ex.error.errors[0].message;\r\n            } else if (ex.errors) {\r\n                message = ex.errors[0].message;\r\n            } else if (ex.message) {\r\n                message = ex.message;\r\n            }\r\n        }\r\n        return (message);\r\n    }\r\n\r\n    async extractErrorId(ex) {\r\n        //const _cjs = this[_CHECKOUTJS];\r\n        let message = {};\r\n        if(ex) {\r\n            if (ex && ex.response && ex.response.headers) {\r\n                ['x_request_id','x-dr-requestid'].forEach(function(key){\r\n                    if(ex.response.headers[key]) {\r\n                        message[key] = ex.response.headers[key];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return (message);\r\n    }\r\n\r\n    async encryptPayload(text) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const AESKey = _cjs[CONFIG].encryptionKey;\r\n        const crypto = require('crypto');\r\n        const payload = {\r\n            original: text,\r\n            message: text\r\n        };\r\n        let AESSetting = {\r\n            'algorithm':'aes-128-cbc',\r\n            'iv_type':'NO_IV',\r\n            'iv':null\r\n        };\r\n\r\n        const stringPadding = function(str, blockSize, padder, format) {\r\n            str = Global.Buffer.from(str,'utf8').toString(format);\r\n            let bitLength = str.length*8;\r\n\r\n            if(bitLength < blockSize) {\r\n                for(let i=bitLength;i<blockSize;i+=8) {\r\n                    str += padder;\r\n                }\r\n            } else if(bitLength > blockSize) {\r\n                while((str.length*8)%blockSize !== 0) {\r\n                    str+= padder;\r\n                }\r\n            }\r\n            return Global.Buffer.from(str, format).toString('utf8');\r\n        };\r\n\r\n        if (AESKey && AESKey.length) {\r\n            let iv=Global.Buffer.alloc(16);\r\n            let key=Global.Buffer.alloc(16);\r\n\r\n            if(AESSetting.iv_type === 'NO_IV'){\r\n                iv = Global.Buffer.concat([Global.Buffer.from(AESKey )], iv.length);\r\n                key = Global.Buffer.concat([Global.Buffer.from(AESKey)], key.length);\r\n            }else if (AESSetting.iv_type === 'STATIC_IV'){\r\n                iv = Global.Buffer.from(stringPadding(AESSetting.iv,128,0x0,\"utf8\"));\r\n                key = Global.Buffer.concat([Global.Buffer.from(AESKey)], key.length);\r\n            }else if(AESSetting.iv_type === 'DYNAMIC_IV'){\r\n                iv = crypto.randomBytes(16);\r\n                key = Global.Buffer.concat([Global.Buffer.from(AESKey)], key.length);\r\n            }\r\n\r\n            const cipher = crypto.createCipheriv(AESSetting.algorithm, key, iv);\r\n            cipher.setAutoPadding(true);\r\n            if (AESSetting.iv_type === 'STATIC_IV') {\r\n                let count = Global.Buffer.byteLength(payload.original);\r\n                let add = Global.Buffer.byteLength(iv) - (count % Global.Buffer.byteLength(iv));\r\n                if (add > 0)\r\n                    payload.original += ' '.repeat(add) + payload.original;\r\n            }\r\n\r\n            let encrypted = cipher.update(payload.original, 'utf8', 'base64');\r\n            encrypted += cipher.final('base64');\r\n            payload.message = encrypted;\r\n        }\r\n        return (payload.message);\r\n    }\r\n\r\n    getAutoRenewSubscriptionCount(cartData) {\r\n        if (cartData && cartData.cart.lineItems && cartData.cart.lineItems.lineItem) {\r\n            return cartData.cart.lineItems.lineItem.reduce((count, lineItem) => {\r\n                const attributes = lineItem.product.customAttributes.attribute.find((attribute) => {\r\n                    return (\r\n                        //(attribute.name === \"subscriptionType\") ||\r\n                        (attribute.name === \"isAutomatic\" && attribute.value === \"true\")\r\n                        //(attribute.name === \"subscriptionSource\")\r\n                    );\r\n                });\r\n                if(attributes){\r\n                    count += lineItem.quantity;\r\n                }\r\n                return count;\r\n            },0);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    async useRecurringPayment(cartData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        //const _shopper = _cjs[SHOPPER];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _config = _cjs[CONFIG];\r\n        if(!cartData){\r\n            cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        }\r\n\r\n        let useRecurringPayment = false;\r\n        if(_config.useRecurringPayment){\r\n            useRecurringPayment = true;\r\n        } else {\r\n            if(_util.getAutoRenewSubscriptionCount(cartData)>0) {\r\n                useRecurringPayment = true;\r\n            }\r\n        }\r\n        return useRecurringPayment;\r\n    }\r\n\r\n    getSourcePaymentType(type){\r\n        let _type = type;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n\r\n        if(!_config[PAYMENTS][_type]) {\r\n            let keys = Object.keys(_config[PAYMENTS]);\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const payment = _config[PAYMENTS][keys[i]];\r\n                if(payment && _type === payment.recurringName) {\r\n                    _type = keys[i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return _type;\r\n    }\r\n\r\n    isGCPage(cfg) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        if(cfg && cfg.page){\r\n            return cfg.page && cfg.page.length !== 0;\r\n        }else {\r\n            return _cjs[CONFIG].page && _cjs[CONFIG].page.length !== 0;\r\n        }\r\n    }\r\n\r\n    getUUID() {\r\n        let d = Date.now();\r\n        if (typeof performance !== UNDEFINED && typeof performance.now === 'function'){\r\n            d += performance.now();\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            let r = (d + Math.random() * 16) % 16 | 0;\r\n            d = Math.floor(d / 16);\r\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n    }\r\n\r\n    base64Encode(text) {\r\n        if(isBrowser){\r\n            return Global.btoa(text);\r\n        }else if(isNode) {\r\n            //return Global.Buffer.from(text).toString('base64');\r\n        }\r\n    }\r\n\r\n    base64Decode(text) {\r\n        if(isBrowser){\r\n            return Global.atob(text);\r\n        }else if(isNode) {\r\n            //return Global.Buffer.from(text, 'base64').toString();\r\n        }\r\n    }\r\n\r\n    isIE() {\r\n        const userAgent = window.navigator.userAgent;\r\n        const msie = userAgent.indexOf('MSIE ');\r\n        if (msie > 0) {\r\n            return parseInt(userAgent.substring(msie + 5, userAgent.indexOf('.', msie)), 10);\r\n        }\r\n\r\n        const trident = userAgent.indexOf('Trident/');\r\n        if (trident > 0) {\r\n            const rv = userAgent.indexOf('rv:');\r\n            return parseInt(userAgent.substring(rv + 3, userAgent.indexOf('.', rv)), 10);\r\n        }\r\n\r\n        const edge = userAgent.indexOf('Edge/');\r\n        if (edge > 0) {\r\n            return parseInt(userAgent.substring(edge + 5, userAgent.indexOf('.', edge)), 10);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    hasSpecialsCharacters(value) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _this = this;\r\n        const ranges =_cjs[CONFIG].specialsCharacters;\r\n        if (!value || typeof value === UNDEFINED || ranges.length === 0)\r\n            return false;\r\n        if (Array.isArray(value)) {\r\n            let _value = false;\r\n            value.forEach(function(item){\r\n                if(_this.hasSpecialsCharacters(item)){\r\n                    _value = true;\r\n                }\r\n            });\r\n            return _value;\r\n        }else if(typeof value === 'object'){\r\n            let _value = false;\r\n            Object.getOwnPropertyNames(value).forEach(function (key) {\r\n                if(_this.hasSpecialsCharacters(value[key])){\r\n                    _value = true;\r\n                }\r\n            });\r\n            return _value;\r\n        }else {\r\n            return (typeof value === 'string' && value.match(ranges.join('|')) !== null);\r\n        }\r\n    }\r\n    \r\n    isReadySubmitState(state){\r\n        return ['chargeable','pending_funds','consumed'].includes(state);\r\n    }\r\n\r\n    isChargeable(state){\r\n        return ['chargeable'].includes(state);\r\n    }\r\n\r\n    getTime() {\r\n        return new Date().getTime();\r\n    }\r\n}\r\n\r\nexport function extend(out) {\r\n    out = out || {};\r\n    for (let i = 1; i < arguments.length; i++) {\r\n        let obj = arguments[i];\r\n        if (typeof obj === UNDEFINED)\r\n            continue;\r\n        if(typeof obj === 'object') {\r\n            for (let key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    const desc = Object.getOwnPropertyDescriptor(out, key);\r\n                    if (!desc || desc.writable || desc.set) {\r\n                        if (Array.isArray(obj[key])) {\r\n                            if (!out[key]) out[key] = [];\r\n                            out[key] = [...out[key], ...obj[key]];\r\n                        } else if (typeof obj[key] === 'object') {\r\n                            out[key] = extend(out[key], obj[key]);\r\n                        } else if (typeof obj === 'string') {\r\n                            out[key] = obj;\r\n                        } else {\r\n                            out[key] = obj[key];\r\n                        }\r\n                    } else {\r\n                        extend(out[key], obj[key]);\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            return obj;\r\n        }\r\n    }\r\n    return out;\r\n}\r\n\r\nexport {\r\n    Util,\r\n    Global,\r\n    isBrowser,\r\n    isNode,\r\n    isWebWorker,\r\n};\r\n","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","import {extend, Global} from \"../util\";\r\nimport {\r\n    LOGGING,\r\n    DRJS,\r\n    _CHECKOUTJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    CJS,\r\n    UNDEFINED,\r\n    FAIL_TO_APPLY_SOURCE,\r\n    PAYMENT,\r\n    CARTDATA,\r\n    REQUESTPAYLOAD,\r\n    SHOPPER,\r\n    NICKNAME\r\n} from \"../keywords\";\r\nimport {Storefront} from './storefront';\r\nimport {Shopper} from '../shopper';\r\nimport {ApplePayGC} from './payments/applePay';\r\nimport {GooglePayGC} from './payments/googlePay';\r\nimport {CreditCardGC} from './payments/creditCard';\r\nimport {PayPalGC} from './payments/payPal';\r\nimport {KlarnaCreditWeb} from './payments/klarnaCredit';\r\nimport {AlipayWeb} from './payments/alipay';\r\nimport {MstsWeb} from \"./payments/msts\";\r\nimport {CcavenueWeb} from \"./payments/ccavenue\";\r\nimport {DropinGC} from './payments/dropin';\r\nimport {Payments} from '../payments/payment';\r\nimport {StorefrontPayment} from './payment';\r\nimport {OfflineRefund} from './offlinerefund';\r\nimport {Base} from \"../base\";\r\n\r\n\r\nconst document = Global.document;\r\nconst GCSTOREFRONT = 'gcStorefront';\r\nlet $ = typeof Global.$ !== UNDEFINED ? Global.$ : null;\r\n\r\n/**\r\n * @class GlobalCommerce\r\n * @classdesc The GlobalCommerce class is the storefront module for Global Commerce (gC) hosted sites, including gC-specific payment methods.\r\n * @extends Storefront\r\n * @param {CheckoutJS} parent\r\n * @returns {Promise<GlobalCommerce>}\r\n * @category Browser\r\n */\r\nclass GlobalCommerce extends Storefront {\r\n\r\n    constructor(parent, collection) {\r\n        super(parent,extend( {\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                getBillingAddress: true,\r\n                getShippingAddress: true,\r\n                getAddressValues: true,\r\n                getAddress: true,\r\n                getCreditCard: true,\r\n                getSelectedCloudPayPayment: true,\r\n                createSourceToCloudPay: true,\r\n                applyShippingCountry: true,\r\n                applyShippingOption: true,\r\n                applyAddress: true,\r\n                submitCheckoutForm: true,\r\n                initCart: true,\r\n                initCheckout:true,\r\n                initConfirmOrder:true,\r\n                initThankYou:true,\r\n                initOfflineRefund:true,\r\n                checkTC: true\r\n            }\r\n        }, collection), false);\r\n        let _this = this;\r\n        return (async () => {\r\n            _this = await _this;\r\n            parent.gC = _this;\r\n            if (!parent[CONFIG].lib.jQuery.disable) {\r\n                const _jQuery = Global.jQuery;\r\n                await parent.util.loadScript(parent[CONFIG].lib.jQuery.url).then(() => {\r\n                    $ = Global.jQuery.noConflict();\r\n                    parent.$ = $;\r\n                    Global.jQuery = _jQuery;\r\n                });\r\n            }\r\n            return _this;\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Retrieves the selected payment.\r\n     * @returns {Promise<{name:type,result:drJsPayload}>}\r\n     * @example checkoutJS.gC.getSelectedPayment()\r\n     */\r\n    async getSelectedPayment() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        let _payment = (await _util.getValue(PAYMENT) || {});\r\n        if (Object.keys(_payment).length === 0) {\r\n            _payment = _config.cloudPayPayload || {};\r\n            if (_payment.type && _payment.details) {\r\n                _payment = {name: _payment.type, result: {\r\n                        source:{\r\n                            type: _payment.type,\r\n                            id: _payment.id,\r\n                            clientSecret: _payment.details.clientSecret\r\n                        }\r\n                }};\r\n            }\r\n        }\r\n        return _payment;\r\n    }\r\n\r\n    async getPayments() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        return _cjs.gC[PAYMENTS];\r\n    }\r\n\r\n    async liveInstrument(payment, overlay) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n\r\n        const backToCart = document.createElement('a');\r\n        backToCart.className = \"drjs_backToCart\";\r\n        backToCart.appendChild(document.createTextNode(_cjs[CONFIG].labels.BACK_TO_CART));\r\n        backToCart.onclick = async function () {\r\n            _cjs.emit('backToCart');\r\n        };\r\n        overlay.append(backToCart);\r\n\r\n        const close = overlay.getElementsByClassName('drjs_close');\r\n        if (close && close.length) {\r\n            overlay.removeChild(close[0]);\r\n        }\r\n\r\n        const cartPageLink = async function () {\r\n            const link = await _cjs[SHOPPERAPI].getCartPageLink();\r\n            Global.location.href = link;\r\n        };\r\n\r\n        _cjs.on('backToCart', cartPageLink);\r\n\r\n        return (overlay);\r\n    }\r\n\r\n    /**\r\n     * Validate the payment source\r\n     * @returns {Promise<PaymentSourceObject|false>}\r\n     * @example checkoutJS.gC.validateSource(source)\r\n     */\r\n    async validateSource(source) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        //const _gC = _cjs.gC;\r\n        if(!source){\r\n            const _payment = (await _util.getValue(PAYMENT) || {});\r\n            if (_payment && _payment.result && _payment.result.source) {\r\n                source = _payment.result.source;\r\n            }\r\n        }\r\n        let _paymentType = await _this._getBasePaymentType(source);\r\n        let _name = await _util.getSourcePaymentType(_paymentType);\r\n        if (source && source.type === GCSTOREFRONT && _config[PAYMENTS][_name][GCSTOREFRONT] === false )\r\n        {\r\n            return false;\r\n        }\r\n        source = _cjs.storefront.validateSource.call(_this,source);\r\n        return source;\r\n    }\r\n\r\n    async _createPayments(parent) {\r\n        const _cjs = parent;\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        /**\r\n         * All enabled payment instances for gC.\r\n         * @name payments\r\n         * @type Payments\r\n         * @memberof GlobalCommerce\r\n         * @override\r\n         * @see Payments\r\n         * @instance\r\n         * @readonly\r\n         * @example checkoutJS.gC.payments;\r\n         */\r\n        const _gcPayments = _cjs.gC[PAYMENTS] = await new Payments(parent);\r\n        let _gcStorefront = true;\r\n        if(_cjs[CONFIG].page && _cjs[CONFIG].page.indexOf('ConfirmOrderPage')!==-1) {\r\n             _gcStorefront = false;\r\n        }\r\n        for (let payment in _config[PAYMENTS]) {\r\n            let _configPayment = _config[PAYMENTS][payment];\r\n            if (_config[PAYMENTS].hasOwnProperty(payment) && !_configPayment.disable) {\r\n                if(_configPayment[GCSTOREFRONT]!==false) {\r\n                    _configPayment[GCSTOREFRONT] = _gcStorefront;\r\n                    _configPayment.liveInstrument = !_gcStorefront;\r\n                    if(_gcStorefront === true && _configPayment.mountElement){\r\n                        _configPayment.mountElement.disabled = true;\r\n                    }\r\n                }\r\n                try {\r\n                    switch (payment) {\r\n                        case 'creditCard':\r\n                            _gcPayments[payment] = new CreditCardGC(_cjs);\r\n                            break;\r\n                        case 'applePay':\r\n                            _gcPayments[payment] = new ApplePayGC(_cjs);\r\n                            break;\r\n                        case 'googlePay':\r\n                            _gcPayments[payment] = new GooglePayGC(_cjs);\r\n                            break;\r\n                        case 'payPal':\r\n                            _gcPayments[payment] = new PayPalGC(_cjs);\r\n                            break;\r\n                        case 'payPalCredit':\r\n                            _gcPayments[payment] = new PayPalGC(_cjs,{},'payPalCredit');\r\n                            break;\r\n                        case 'dropin':\r\n                            _gcPayments[payment] = new DropinGC(_cjs);\r\n                            break;\r\n                        case 'klarnaCredit':\r\n                            _gcPayments[payment] = new KlarnaCreditWeb(_cjs, {}, payment, 'gC');\r\n                            break;\r\n                        case 'alipay':\r\n                            _gcPayments[payment] = new AlipayWeb(_cjs, {}, payment, 'gC');\r\n                            break;\r\n                        case 'msts':\r\n                            _gcPayments[payment] = new MstsWeb(_cjs, {}, payment, 'gC');\r\n                            break;\r\n                        case 'ccavenue':\r\n                            _gcPayments[payment] = new CcavenueWeb(_cjs, {}, payment, 'gC');\r\n                            break;\r\n                        default:\r\n                            _gcPayments[payment] = new StorefrontPayment(_cjs, {}, payment, 'gC');\r\n                            break;\r\n                    }\r\n                    const prop = {};\r\n                    prop[payment] = {\r\n                        writable: true,\r\n                        enumerable: _configPayment.enumerable !== false,\r\n                        configurable: false\r\n                    };\r\n                    Object.defineProperties(_cjs.gC[PAYMENTS], prop);\r\n                } catch (ex) {\r\n                    await _util.errorMessage(ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async _initPayments() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _gC = _cjs.gC;\r\n        const _gcPayments = _gC[PAYMENTS];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        if (_cjs[DRJS]) {\r\n            const enablePayments = [];\r\n            const createPaymentItems = [];\r\n            for (let payment in _config[PAYMENTS]) {\r\n                if (_cjs[PAYMENTS][payment] instanceof Base) {\r\n                    createPaymentItems.push((async ()=>{\r\n                        const _configPayment = _cjs[CONFIG][PAYMENTS][payment];\r\n                        const supportedCurrency = await _gcPayments[payment].supportedCurrency();\r\n                        const supportedRecurringPayments = await _gcPayments[payment].supportedRecurringPayments();\r\n                        const supportedGeography = await _gcPayments[payment].supportedGeography(cartData.cart.billingAddress.country);\r\n                        const supportedSettings = await _gcPayments[payment].supportedSettings();\r\n                        const supportedThresholdAmount = await _gcPayments[payment].supportedThresholdAmount(_config.currency);\r\n                        if (_gcPayments.hasOwnProperty(payment) && _cjs[PAYMENTS][payment] && _gcPayments[payment] && supportedCurrency && supportedRecurringPayments && supportedSettings && supportedThresholdAmount && _configPayment.supported!==false && _configPayment.name) {\r\n                            try {\r\n                                if (_gcPayments[payment].createPaymentInfo) {\r\n                                    await _gcPayments[payment].createPaymentInfo(payment);\r\n                                }\r\n                                enablePayments.push(payment);\r\n                            } catch (ex) {\r\n                                _util.errorMessage(ex);\r\n                            }\r\n                        } else {\r\n                            _configPayment.show = false;\r\n                        }\r\n                        _configPayment.supported = supportedCurrency && supportedRecurringPayments && supportedGeography && supportedSettings && supportedThresholdAmount;\r\n                    })());\r\n                }\r\n            }\r\n            await Promise.all(createPaymentItems);\r\n            const initPaymentItems = [];\r\n            for (let index in enablePayments) {\r\n                const payment = enablePayments[index];\r\n                const _gCPayment = _gcPayments[payment];\r\n                initPaymentItems.push((async ()=> {\r\n                    try {\r\n                        if (_gCPayment.initPaymentBefore) {\r\n                            await _gCPayment.initPaymentBefore(payment);\r\n                        }\r\n                        if (_gCPayment.initPayment) {\r\n                            await _gCPayment.initPayment(payment);\r\n                        }\r\n                        if (_gCPayment.initPaymentAfter) {\r\n                            await _gCPayment.initPaymentAfter(payment);\r\n                        }\r\n                    } catch (ex) {\r\n                        _util.errorMessage(ex);\r\n                    }\r\n                    if (_gCPayment.completePaymentInfo) {\r\n                        await _gCPayment.completePaymentInfo(payment);\r\n                    }\r\n                })());\r\n            }\r\n            return Promise.all(initPaymentItems).then(()=>{\r\n                _gC.initTC();\r\n            });\r\n        }\r\n    }\r\n\r\n    async _initPaymentMethod() {\r\n        const _this = this;\r\n        Object.getOwnPropertyNames(PaymentGC).forEach(function (key) {\r\n            if (!_this[key]) {\r\n                Object.defineProperty(_this, key, {\r\n                    value: PaymentGC[key],\r\n                    enumerable: false,\r\n                    configurable: false,\r\n                    writable: true,\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    async _getBasePaymentType(source) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        if(source) {\r\n            if (source.type === GCSTOREFRONT) {\r\n                if (source[GCSTOREFRONT]) {\r\n                    return source[GCSTOREFRONT].type;\r\n                } else if (source.details) {\r\n                    return source.details.type;\r\n                }\r\n            }\r\n            const createdType = await _util.getValue(`${PAYMENT}_CREATEDTYPE`) || false;\r\n            if(createdType && createdType.id === source.id) return createdType.name;\r\n            return source.type;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Submits the checkout form or updates the page information, which includes billing, shipping and payment information, via CommerceAPI then redirects to the confirm order page.\r\n     * @param {PaymentSourceObject} source\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.submitCheckoutForm()\r\n     */\r\n    async submitCheckoutForm(/*source*/) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _selector = _config.selector;\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        _cjs.emit(LOGGING, {\r\n            id: _util.getTime(),\r\n            api: CJS,\r\n            method: 'submitCheckoutForm'\r\n        });\r\n        if (!_config.submitCartWithShopperApi) {\r\n            $(_selector.checkoutForm)[0].submit();\r\n        } else {\r\n            const billingAddress = await _cjs.gC.getBillingAddress();\r\n            const shippingAddress = await _cjs.gC.getShippingAddress();\r\n            const address = await Promise.all([\r\n                _shopperApi.convertPaymentRequestAddressToShopperApiAddress(\r\n                    billingAddress, 'billingAddress'\r\n                ), _shopperApi.convertPaymentRequestAddressToShopperApiAddress(\r\n                    shippingAddress, 'shippingAddress'\r\n                )]);\r\n\r\n            // eslint-disable-next-line no-unused-vars\r\n            const addressResponse = await _shopperApi.applyAddressToCart(address[0], address[1]);\r\n\r\n            const sourceId = $(_selector.cloudPaySourceId).val();\r\n            if (sourceId) {\r\n                await _shopperApi.applySourceToCart(sourceId);\r\n            }\r\n            const link = await _shopperApi.getConfirmOrderPageLink();\r\n            Global.location.href = link;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the payment source from DigitalRiver.js then apply the source ID to the CloudPay payment method's hidden field.\r\n     * @param {string} name - The payment name.\r\n     * @param {PaymentRequestObject} sourceData\r\n     * @returns {Promise<PaymentSourceObject>}\r\n     * @deprecated\r\n     * @example checkoutJS.gC.createSourceToCloudPay('creditCard',paymentRequest);\r\n     */\r\n    async createSourceToCloudPay(name, sourceData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const result = await _cjs[DRJS].createSource(sourceData);\r\n        await _cjs[UTIL].setValue(PAYMENT, {name: name, result: result});\r\n        if (result.error) {\r\n            if (result.error.state === 'failed') {\r\n                return Promise.reject(new Error(_cjs[CONFIG].labels.error.PAYMENT_AUTHORIZATION_FAILED));\r\n            }\r\n            return Promise.reject(result);\r\n        } else if (result.source) {\r\n            await this.applySourceToCloudPay(result.source);\r\n        }\r\n        return (result.source);\r\n    }\r\n\r\n    /**\r\n     * Tries to re-create a new source from the existing CartData.\r\n     * @param {PaymentSourceObject} source\r\n     * @returns {Promise<PaymentSourceObject>}\r\n     * @example checkoutJS.gC.retryCreateSource(source);\r\n     */\r\n    async retryCreateSource(source){\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _drjs = _cjs[DRJS];\r\n        const _name = _util.getSourcePaymentType(source.type);\r\n        const _payments = await _this.getPayments();\r\n        const _payment = _payments[_name];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        const sourceData = await _payment[REQUESTPAYLOAD].createObject(cartData);\r\n        _util.extend(source,sourceData);\r\n        let sourceArgs = [];\r\n        if(_configPayment.mountElement && _configPayment.element) {\r\n            let _element = _configPayment.element;\r\n            if( !(_element.id && _element.key) ){\r\n                _element = Object.values(_element)[0];\r\n            }\r\n            sourceArgs.push(_element);\r\n        }\r\n        sourceArgs.push(source);\r\n        const result = await _drjs.createSource.apply(_drjs,sourceArgs);\r\n        if (result.source) {\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'retryCreateSource',\r\n                type: 'options',\r\n                payment: _name,\r\n                options: result,\r\n            });\r\n            source = result.source;\r\n            if (source) {\r\n                if (_payment.isReadySubmitState(source.state)) {\r\n                    await _util.setValue(PAYMENT, {name: _name, result: result});\r\n                    return source;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Applies the source ID to the CloudPay payment method's hidden field.\r\n     * @param {PaymentSourceObject} source\r\n     * @returns {Promise<PaymentSourceObject>}\r\n     * @example checkoutJS.gC.applySourceToCloudPay(source);\r\n     */\r\n    async applySourceToCloudPay(source) {\r\n        if (source && source.id) {\r\n            const _cjs = this[_CHECKOUTJS];\r\n            const source_id = source.id;\r\n            $(_cjs[CONFIG].selector.cloudPaySourceId).val(source_id);\r\n            return source;\r\n        }\r\n        return Promise.reject();\r\n    }\r\n\r\n    /**\r\n     * Updates the payment request source before creating the source from DigitalRiver.js and wraps it with a gcStorefront payment method as a placeholder for CloudPay.\r\n     * @param {PaymentRequestObject} sourceData\r\n     * @returns {Promise<PaymentRequestObject>}\r\n     * @example checkoutJS.gC.updateSourceData(source);\r\n     */\r\n    async updateSourceData(sourceData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        let _type = _util.getSourcePaymentType(sourceData.type);\r\n        if(_config[PAYMENTS][_type][GCSTOREFRONT]) {\r\n            sourceData = {\r\n                type: GCSTOREFRONT,\r\n                currency: sourceData.currency || _config.currency,\r\n                amount: sourceData.amount || 1,\r\n                owner: sourceData.owner,\r\n                gcStorefront: sourceData\r\n            }\r\n        }\r\n        return sourceData;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the billing address data and returns it as a payment service owner data object.\r\n     * @returns {Promise<{PaymentService.OwnerDataObject}>}\r\n     * @example checkoutJS.gC.getBillingAddress();\r\n     */\r\n    async getBillingAddress() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _selectorAddress = _config.selector.address;\r\n        if ($(_selectorAddress.billingContainer).is(':visible')) {\r\n            return _this.getAddressValues();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the shipping address data and returns it as payment service owner data\r\n     * @returns {Promise<{PaymentService.OwnerDataObject}>}\r\n     * @example checkoutJS.gC.getShippingAddress();\r\n     */\r\n    async getShippingAddress() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _selectorAddress = _config.selector.address;\r\n        if (!$(_selectorAddress.shippingDifferentThanBilling).is(\":checked\") || !$(_selectorAddress.shippingContainer).is(':visible'))\r\n            return;\r\n        return _this.getAddressValues('shippingToGc');\r\n    }\r\n\r\n    /**\r\n     * Retrieves the billing or shipping address data and returns it as a payment service owner data object.\r\n     * @param {string} [type='billingToGc']\r\n     * @returns {Promise<{PaymentService.OwnerDataObject}>}\r\n     * @example checkoutJS.gC.getAddressValues();\r\n     */\r\n    async getAddressValues(type='billingToGc') {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _selectorAddress = _config.selector.address[type];\r\n        const address = {\r\n            firstName: $(_selectorAddress.firstName).val(),\r\n            lastName: $(_selectorAddress.lastName).val(),\r\n            phone: $(_selectorAddress.phoneNumber).val(),\r\n            email: $(_selectorAddress.emailAddress).val(),\r\n            organization: $(_selectorAddress.companyName).val(),\r\n            address: {\r\n                line1: $(_selectorAddress.line1).val(),\r\n                line2: $(_selectorAddress.line2).val(),\r\n                city: $(_selectorAddress.city).val(),\r\n                state: $(_selectorAddress.countrySubdivision).val(),\r\n                postalCode: $(_selectorAddress.postalCode).val(),\r\n                country: $(_selectorAddress.country).val()\r\n            },\r\n            additionalAddressInfo: {\r\n                division: $(_selectorAddress.division).val(),\r\n                phoneticFirstName: $(_selectorAddress.phoneticFirstName).val(),\r\n                phoneticLastName: $(_selectorAddress.phoneticLastName).val()\r\n            }\r\n        };\r\n\r\n        return address;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the shoppers billing address first and then the shipping address, if the billing address is not present.\r\n     * @returns {Promise<{PaymentService.OwnerDataObject}>}\r\n     * @example checkoutJS.gC.getAddress();\r\n     */\r\n    async getAddress() {\r\n        const _this = this;\r\n        let address = await _this.getBillingAddress();\r\n        if (!address) {\r\n            return await _this.getShippingAddress();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the selected DigitalRiver.js payment method type.\r\n     * @returns {Promise<{string}>}\r\n     * @example checkoutJS.gC.getAddress();\r\n     */\r\n    async getSelectedCloudPayPayment() {\r\n        const $paymentMethod = $(\"input[name='paymentMethodID'][data-type]:checked\");\r\n        if ($paymentMethod && $paymentMethod.length && !$paymentMethod.attr('data-disabled')) {\r\n            return ($paymentMethod.attr('data-type'));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Applies billing and shipping address to existing checkout form fields.\r\n     * @param {ShopperApi.AddressObject} billingAddress\r\n     * @param {ShopperApi.AddressObject} shippingAddress\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.applyAddress(billingAddress, billingAddress);\r\n     */\r\n    async applyAddress(billingAddress, shippingAddress) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _selectorAddress = _config.selector.address;\r\n        if (_config.page.length) {\r\n            if (shippingAddress) {\r\n                let addressNames = null;\r\n                if ($(_selectorAddress.shippingContainer).is(':visible')) {\r\n                    addressNames = _selectorAddress.shippingToGc;\r\n                } else if ($(_selectorAddress.billingContainer).is(':visible')) {\r\n                    addressNames = _selectorAddress.billingToGc;\r\n                }\r\n                if (addressNames) {\r\n                    for (let key in shippingAddress) {\r\n                        if (addressNames.hasOwnProperty(key) && shippingAddress.hasOwnProperty(key)) {\r\n                            $(addressNames[key]).val(shippingAddress[key]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (billingAddress) {\r\n                let addressNames = null;\r\n                if ($(_selectorAddress.billingContainer).is(':visible')) {\r\n                    addressNames = _selectorAddress.billingToGc;\r\n                }\r\n                if (addressNames) {\r\n                    for (let key in billingAddress) {\r\n                        if (addressNames.hasOwnProperty(key) && billingAddress.hasOwnProperty(key)) {\r\n                            $(addressNames[key]).val(billingAddress[key]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the shipping estimator's country value.\r\n     * @param {string} shippingCountry\r\n     * @returns {Promise<jQueryObject>}\r\n     * @example checkoutJS.gC.applyShippingCountry('GB');\r\n     */\r\n    async applyShippingCountry(shippingCountry) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _selectorShippingEstimator = _config.selector.shippingEstimator;\r\n        if (_config.page.length) {\r\n            if ($(_selectorShippingEstimator.container).is(':visible')) {\r\n                const $shippingCountry = $(_selectorShippingEstimator.container).find(_selectorShippingEstimator.shipCountry);\r\n                if ($shippingCountry && $shippingCountry.length) {\r\n                    $shippingCountry.val(shippingCountry);\r\n                    return ($shippingCountry);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the shipping estimator's shipping option value.\r\n     * @param {string} shippingOptionId\r\n     * @returns {Promise<jQueryObject>}\r\n     * @example checkoutJS.gC.applyShippingOption('1111111');\r\n     */\r\n    async applyShippingOption(shippingOptionId) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _selectorShippingEstimator = _config.selector.shippingEstimator;\r\n        if (_config.page.length) {\r\n            if ($(_selectorShippingEstimator.container).is(':visible')) {\r\n                const $shippingOptionID = $(_selectorShippingEstimator.container).find(_selectorShippingEstimator.shippingOptionID);\r\n                if ($shippingOptionID && $shippingOptionID.length) {\r\n                    let _changeEstimatedShipping = Global.changeEstimatedShipping;\r\n                    if (_changeEstimatedShipping) {\r\n                        Global.changeEstimatedShipping = function (zoneList, optionID, shippingForm) {\r\n                            if (zoneList.selectedIndex !== 0) {\r\n                                shippingForm.shippingOptionID.value = optionID;\r\n                                shippingForm.country.value = zoneList.options[zoneList.selectedIndex].value;\r\n                            }\r\n                        };\r\n                    }\r\n                    if ($shippingOptionID.length === 1) {\r\n                        $shippingOptionID.val(shippingOptionId);\r\n                    } else {\r\n                        const $selectShippingOptionID = $shippingOptionID.filter(function () {\r\n                            return ($(this).val() === shippingOptionId);\r\n                        }).trigger('click');\r\n                        if (!$selectShippingOptionID.length) {\r\n                            $shippingOptionID.first().trigger('change');\r\n                        }\r\n                    }\r\n                    if (_changeEstimatedShipping) {\r\n                        Global.changeEstimatedShipping = _changeEstimatedShipping;\r\n                    }\r\n                    return $shippingOptionID;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After loading GlobalCommerce, this function will trigger the specific functions for each page e.g. {@link initCheckout}, {@link initConfirmOrder}, {@link initThankYou}.\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.initPageLoad();\r\n     */\r\n    async initPageLoad() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n\r\n        await _this.initCheckout();\r\n\r\n        if (_config.page.indexOf('ConfirmOrderPage')>0) {\r\n            await _this.initConfirmOrder();\r\n        }\r\n\r\n        if (_config.page === 'ThankYouPage') {\r\n            await _this.initThankYou();\r\n        }\r\n\r\n        if (_config.page === 'DelayedPaymentRefundPage' || _config.page === 'DisplayDelayedPaymentRefundPage') {\r\n            const url = _cjs[UTIL].parseURL(Global.location.href);\r\n            const refundToken = url.queryParams['informationToken'];\r\n            _cjs.on('initializeElements',async function() {\r\n                await _this.initOfflineRefund(refundToken);\r\n            });\r\n        }\r\n\r\n        await _util.removeValue(CARTDATA);\r\n    }\r\n\r\n    /**\r\n     * After loading GlobalCommerce, this function will be triggered to see if the gC checkout form exists on the page.\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.initCheckout();\r\n     */\r\n    async initCheckout() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        //const _shopper = _cjs[SHOPPER];\r\n        const _selector = _config.selector;\r\n        const _gC = _cjs.gC;\r\n        const $form = $(_selector.checkoutForm);\r\n        if ($form && $form.length) {\r\n            if ($form.find(_selector.cloudPaySourceId).length === 0) {\r\n                $form.prepend(\"<input type='hidden' name='cloudPaySourceID' />\");\r\n            }\r\n            $form.find(_selector.cloudPayPayment).hide();\r\n            if (_config.cloudPayPayload.id) {\r\n                $form.find(_selector.cloudPaySourceId).val(_config.cloudPayPayload.id);\r\n            }\r\n            let payment = await _util.getValue(PAYMENT);\r\n            if(!payment && _config.cloudPayPayload.id){\r\n                const result = await _cjs[DRJS].retrieveSource(_config.cloudPayPayload.id, _config.cloudPayPayload.details.clientSecret);\r\n                let _paymentType = await _this._getBasePaymentType(result.source);\r\n                await _util.setValue(PAYMENT, {name: _paymentType, result: result});\r\n            }\r\n            $form.submit(function (e) {\r\n                if ((!$form.valid || $form.valid()) && (typeof (Global._doneWithRTAV) === UNDEFINED || Global._doneWithRTAV)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return (async () => {\r\n                        const selectedPayment = await _gC.getSelectedCloudPayPayment();\r\n                        if (selectedPayment) {\r\n                            _util.loadingOverlay();\r\n                            try {\r\n                                await _gC.syncShopperInfo();\r\n                                const cloudPayPaymentMethodID = $('#CloudPay').val();\r\n                                const $paymentMethod = $(\"input[name='paymentMethodID']:checked\");\r\n                                let applySource = null;\r\n                                if ($paymentMethod && $paymentMethod.length) {\r\n                                    $paymentMethod.val(cloudPayPaymentMethodID);\r\n                                    const sourceId = $paymentMethod.attr('data-source-id');\r\n                                    if (sourceId && sourceId.length > 0) {\r\n                                        const source = await _gC.validateSource();\r\n                                        if(source) {\r\n                                            applySource = Promise.resolve(source);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (applySource == null) {\r\n                                    const validateElements = await _gC.validateElements();\r\n                                    const _payment = _gC[PAYMENTS][selectedPayment];\r\n                                    const validatePaymentElements = await _payment.validateElements();\r\n                                    if(!validateElements || !validatePaymentElements) {\r\n                                        _util.loadingOverlay(true);\r\n                                        return;\r\n                                    }\r\n                                    if(_config.cart.updateCartInfoByApi === true){\r\n                                        const _cart = { cart:{} };\r\n                                        let billingAddress = await _gC.getBillingAddress();\r\n                                        let shippingAddress = await _gC.getShippingAddress();\r\n                                        if(!shippingAddress && billingAddress) {\r\n                                            shippingAddress = billingAddress;\r\n                                        }\r\n                                        if(!billingAddress && shippingAddress) {\r\n                                            billingAddress = shippingAddress;\r\n                                        }\r\n                                        if(billingAddress && shippingAddress) {\r\n                                            _cart.cart.billingAddress = await _shopperApi.convertPaymentRequestAddressToShopperApiAddress(billingAddress, 'billingAddress');\r\n                                            _cart.cart.shippingAddress = await _shopperApi.convertPaymentRequestAddressToShopperApiAddress(shippingAddress, 'shippingAddress');\r\n                                            await _shopperApi.updateCart(_cart);\r\n                                        }\r\n                                    }\r\n                                    applySource = _payment.applySourceId(false);\r\n                                }\r\n                                applySource.then(_gC.applySourceToCloudPay.bind(_this))\r\n                                    .then((source)=>{\r\n                                        if(source && !source.gcStorefront) {\r\n                                            return _gC.createPaymentOptionToShopper().then((paymentOption) => {\r\n                                                if (paymentOption && paymentOption.id) {\r\n                                                    $(_config.selector.payment.billingOptionSelector).append('<option value=\"' + paymentOption.id + '\" selected>' + paymentOption.nickName + \"</option>\");\r\n                                                }\r\n                                                return source;\r\n                                            });\r\n                                        }\r\n                                        return source;\r\n                                    })\r\n                                    .then(_gC.submitCheckoutForm.bind(_this)).catch(function (ex) {\r\n                                        _util.setValue(PAYMENT, {name: selectedPayment});\r\n                                        if (ex) {\r\n                                            _util.errorMessage(ex);\r\n                                        }\r\n                                        _util.loadingOverlay(true);\r\n                                    });\r\n                            } catch (ex) {\r\n                                if (ex) {\r\n                                    _util.errorMessage(ex);\r\n                                }\r\n                                _util.loadingOverlay(true);\r\n                            }\r\n                        } else if (!selectedPayment && $(\"input[name='paymentMethodID'][id='CloudPay']\").is(':checked')) {\r\n                          $(\"input[name='paymentMethodID']\").removeAttr('checked');\r\n                          _util.loadingOverlay(true);\r\n                          $form[0].submit();\r\n                        } else {\r\n                            if($(\"input[name='paymentMethodID']:checked\").length || $(\"input[name='paymentMethodID']\").length===0) {\r\n                                _util.loadingOverlay(true);\r\n                                $form[0].submit();\r\n                            }\r\n                        }\r\n                    })();\r\n                }\r\n            });\r\n            $(document).on(\"change\", \"input[name='paymentMethodID']\", async function () {\r\n                let prevPayment = await _util.getValue(PAYMENT);\r\n                if (prevPayment && prevPayment.name) {\r\n                    let _name = prevPayment.name;\r\n                    if(_gC[PAYMENTS][_name]) {\r\n                        await _gC[PAYMENTS][_name].changePaymentMethod();\r\n                    }\r\n                }\r\n                const payment = $(this).attr('data-type');\r\n                if (_config[PAYMENTS].hasOwnProperty(payment) && !_config[PAYMENTS][payment].disable && _gC[PAYMENTS][payment] && _gC[PAYMENTS][payment].changePaymentMethod) {\r\n                    let $paymentSection = await _util.getCache(payment + 'Section');\r\n                    if($paymentSection && !$paymentSection.find('.dr_ExpandPaymentDetailsSection:visible').length){\r\n                        $($paymentSection).find('.dr_expandDetails a').trigger('click');\r\n                    }\r\n                    _gC[PAYMENTS][payment].select();\r\n                    await _gC[PAYMENTS][payment].changePaymentMethod();\r\n                    if(_config[PAYMENTS][payment].supportedRecurringPayments && _config[PAYMENTS][payment].saveAsPaymentOption!==false) {\r\n                        $('#dr_billingOption').show();\r\n                    } else {\r\n                        $('#dr_billingOption').hide();\r\n                    }\r\n                }\r\n            });\r\n            $(document).on(\"click\", \".dr_paymentMethodBlock .dr_expandDetails a\", function (e) {\r\n                e.preventDefault();\r\n                $(this).closest('.dr_paymentMethodBlock').find('.dr_ExpandPaymentDetailsSection').toggle();\r\n                return false;\r\n            });\r\n            $(document).on(\"change\",[_config.selector.address.billingToGc.country,_config.selector.address.shippingToGc.country,_config.selector.address.shippingDifferentThanBilling].join(','), async function () {\r\n                const init = true;\r\n                const billingAddress = await _cjs.gC.getBillingAddress();\r\n                const shippingAddress = await _cjs.gC.getShippingAddress();\r\n                let cartData = await _util.getValue(CARTDATA);\r\n                let country = '';\r\n                let shippingCountry,billingCountry = null;\r\n                if(shippingAddress && shippingAddress.address.country) {\r\n                    shippingCountry = shippingAddress.address.country;\r\n                }\r\n                if(billingAddress && billingAddress.address.country) {\r\n                    billingCountry = billingAddress.address.country;\r\n                }\r\n                if(cartData) {\r\n                    cartData.cart.billingAddress.country = billingCountry;\r\n                    cartData.cart.shippingAddress.country = shippingCountry;\r\n                    await _util.setValue(CARTDATA, cartData);\r\n                }\r\n                country = billingCountry?billingCountry:shippingCountry?shippingCountry:'';\r\n                if(_config.gC.disableNotSupportedPayment!==false) {\r\n                    $(\"input[name='paymentMethodID'][data-type]\").each(async function () {\r\n                        let payment = $(this).attr('data-type');\r\n                        let supported = (await _gC[PAYMENTS][payment].supportedCurrencyAndGeography(_config.currency, country, init) && await _gC[PAYMENTS][payment].supportedSettings() );\r\n                        $(this).prop('disabled', !supported);\r\n                        if (!supported) {\r\n                            $(this).prop('checked', false);\r\n                        }\r\n                    });\r\n                }\r\n                /**\r\n                 * This event will be triggered after the billing country has been updated.\r\n                 * @memberof CheckoutJS\r\n                 * @event countryUpdated\r\n                 * @category Events\r\n                 * @example checkoutJS.on('countryUpdated',function(){\r\n                 *     console.log('countryUpdated');\r\n                 * });\r\n                 */\r\n                await _cjs.emit('countryUpdated');\r\n            });\r\n            $(document).on(\"change\",[_config.selector.address.selectAddressEntry,_config.selector.address.billingToGc.line1,_config.selector.address.billingToGc.line2,_config.selector.address.billingToGc.city,_config.selector.address.billingToGc.postalCode,_config.selector.address.billingToGc.countrySubdivision].join(','), function() {\r\n                const $paymentMethod = $(\"input[name='paymentMethodID']:checked\");\r\n                if ($paymentMethod && $paymentMethod.length) {\r\n                  $paymentMethod.removeAttr('data-source-id');\r\n                }\r\n                $(_config.selector.address.billingToGc.country).trigger('change');\r\n            });\r\n            $(document).on(\"change\", \"input[name='paymentMethodID']\", function () {\r\n                const $this = $(this);\r\n                const payment = $this.attr('data-type');\r\n                if (Global.applySelectedStyle && payment && _config[PAYMENTS][payment]) {\r\n                    if($this.is(':checked')){\r\n                        Global.applySelectedStyle($this);\r\n                    }\r\n                }\r\n            });\r\n            _cjs.on('initializeElements',async function(){\r\n                await _this.createShopperPaymentOptionSelector();\r\n            });\r\n            _cjs.on('initializedPageElement',async function(){\r\n                $(_config.selector.address.billingToGc.country).trigger('change');\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After loading GlobalCommerce, this function will be triggered when the current page is the confirm order page.\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.initConfirmOrder();\r\n     */\r\n    async initConfirmOrder() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _selector = _config.selector;\r\n        const _cloudPayPayload = _config.cloudPayPayload;\r\n        const _gC = _cjs.gC;\r\n        const $confirmForm = $(_selector.confirmOrder.confirmOrderForm);\r\n        if ($confirmForm && $confirmForm.length) {\r\n            let _paymentType = await _gC._getBasePaymentType(_cloudPayPayload);\r\n            let _name = await _util.getSourcePaymentType(_paymentType);\r\n            let _configPayment = _config[PAYMENTS][_name];\r\n            let originalButtonLockDown = UNDEFINED;\r\n            let ready = false;\r\n            const _buttonLockDown = function() {\r\n                return ready;\r\n            };\r\n            if (typeof Global.buttonLockDown === UNDEFINED) {\r\n                Global.buttonLockDown = _buttonLockDown;\r\n            }\r\n\r\n            if(_cloudPayPayload && _cloudPayPayload.id){\r\n                const result = await _cjs[DRJS].retrieveSource(_cloudPayPayload.id, _cloudPayPayload.details.clientSecret);\r\n                let _paymentType = await _gC._getBasePaymentType(result.source);\r\n                await _util.setValue(PAYMENT, {name: _paymentType, result: result});\r\n            }\r\n\r\n            _cjs.once('initializeElements',async function() {\r\n                if (_cloudPayPayload.type && _cloudPayPayload.id) {\r\n                    const _payment = _gC[PAYMENTS][_name];\r\n                    const paymentElement = `<p id='drjs_${_name}Element'></p>`;\r\n                    const $replacement = $(_selector.confirmOrder.replacement);\r\n                    if ($replacement && $replacement.length) {\r\n                        $replacement.replaceWith(paymentElement);\r\n                    } else {\r\n                        $confirmForm.find(_selector.confirmOrder.paymentContainer).append(paymentElement);\r\n                    }\r\n\r\n                    originalButtonLockDown = Global.buttonLockDown;\r\n                    if (Global.buttonLockDown) {\r\n                        Global.buttonLockDown = _buttonLockDown;\r\n                    }\r\n\r\n                    const $termsOfSaleAcceptance = $(_selector.confirmOrder.termsOfSaleAcceptance);\r\n                        const activeAcceptance = await _payment.getActiveAcceptance({\r\n                            CHECKOUT: _config.labels.CHECKOUT\r\n                        });\r\n                        if (activeAcceptance && activeAcceptance.length && $termsOfSaleAcceptance && $termsOfSaleAcceptance.length) {\r\n                            $termsOfSaleAcceptance.append($('<div class=\"checkbox-inline checkbox-wide\"></div>').html(activeAcceptance));\r\n                        }\r\n\r\n                    ready = true;\r\n                }\r\n            });\r\n\r\n            $confirmForm.submit(function (e) {\r\n                if (_cloudPayPayload && _cloudPayPayload.id) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return (async () => {\r\n                        const validateElements = await _gC[PAYMENTS][_name].validateElements();\r\n                        if(validateElements){\r\n                            Global.buttonLockDown = originalButtonLockDown;\r\n                        }\r\n                        if (validateElements && (!$confirmForm.valid || $confirmForm.valid()) && (typeof (Global.buttonLockDown) === UNDEFINED || Global.buttonLockDown())) {\r\n                            _util.loadingOverlay();\r\n                            const payment = await _util.getValue(PAYMENT) || {};\r\n                            try {\r\n                                let redirectInfoPage = false;\r\n                                if (payment.name === _paymentType || _configPayment.skipPaymentTypeCheck) {\r\n                                    const currentSource = payment.result ? payment.result.source : {};\r\n                                    let source = await _gC.validateSource(currentSource);\r\n                                    if (source) {\r\n                                        await _gC.createPaymentOptionToShopper();\r\n                                        $confirmForm[0].submit();\r\n                                        return;\r\n                                    }\r\n                                    if(_cloudPayPayload.type === GCSTOREFRONT) {\r\n                                        try {\r\n                                            _cjs.emit(LOGGING, {\r\n                                                id: _util.getTime(),\r\n                                                api: CJS,\r\n                                                method: 'applySourceId',\r\n                                                responseBody: source\r\n                                            });\r\n                                            source = await _gC[PAYMENTS][_name].applySourceId();\r\n                                            _util.loadingOverlay();\r\n                                            source = await _gC.validateSource(source);\r\n                                            if (source) {\r\n                                                _cjs.emit(LOGGING, {\r\n                                                    id: _util.getTime(),\r\n                                                    api: CJS,\r\n                                                    method: 'submitConfirmForm'\r\n                                                });\r\n                                                await _gC.createPaymentOptionToShopper();\r\n                                                $confirmForm[0].submit();\r\n                                            } else {\r\n                                                redirectInfoPage = true;\r\n                                            }\r\n                                        } catch (ex) {\r\n                                            _util.loadingOverlay(true);\r\n                                            if (ex) {\r\n                                                $confirmForm.find(_selector.confirmOrder.submitBtnProcessing).html(_config.labels.error.PAYMENT_AUTHORIZATION_FAILED)\r\n                                                _util.errorMessage(ex);\r\n                                            }\r\n                                        }\r\n                                    }else{\r\n                                        redirectInfoPage = true;\r\n                                    }\r\n                                }else{\r\n                                    redirectInfoPage = true;\r\n                                }\r\n\r\n                                if(redirectInfoPage) {\r\n                                    await _util.setValue(PAYMENT, {name: _name});\r\n                                    const infoLink = await _shopperApi.getInfoPageLink();\r\n                                    Global.location.href = infoLink;\r\n                                }\r\n                            } catch (ex) {\r\n                                _util.loadingOverlay(true);\r\n                                if (ex) {\r\n                                    _util.errorMessage(ex);\r\n                                }\r\n                            }\r\n                        }\r\n                    })();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * After loading GlobalCommerce, this function will be triggered when the current page is the thank you page.\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.initThankYou();\r\n     */\r\n    async initThankYou() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _gC = _cjs.gC;\r\n        _cjs.on('initialized',async function(){\r\n            const source = await _gC.getSelectedSource();\r\n            _gC.pendingFundsRedirectFlow(source);\r\n            _gC.pendingFundsReceiver(source);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initializes the offline refund element.\r\n     * @param {string} refundToken\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.initOffineRefund('XXXXXXXXXXXX');\r\n     */\r\n    async initOfflineRefund(refundToken) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n\r\n        const $delayedPaymentRefund = $(_config.selector.delayedPaymentRefund.container);\r\n        if($delayedPaymentRefund && $delayedPaymentRefund.length) {\r\n            $delayedPaymentRefund.find(_config.selector.delayedPaymentRefund.replacement).replaceWith($('<div/>').attr('id',_config.elements.offlineRefund.elementId));\r\n            const _offlinerefund = new OfflineRefund(_cjs);\r\n            await _offlinerefund.init(refundToken);\r\n            Object.defineProperties(_cjs['gC']['elements'], {\r\n                'offlinerefund': {\r\n                    value: _offlinerefund,\r\n                    writable: true,\r\n                    enumerable: true,\r\n                    configurable: false\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async initTC() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _selector = _config.selector;\r\n        const _this = this;\r\n        $(document).on(\"change\", _selector.cloudPayTermsAcceptance, function () {\r\n            const $cloudPayBtn = $(_selector.cloudPayBtn).filter('[data-tc]');\r\n            if ($(this).is(':checked')) {\r\n                $(_selector.cloudPayTCError).hide();\r\n                $cloudPayBtn.css({\r\n                    \"pointer-events\": \"\"\r\n                });\r\n                if ($cloudPayBtn.parent().is(\".dr_cloudPayOverlay\")) {\r\n                    $cloudPayBtn.unwrap();\r\n                }\r\n                $cloudPayBtn.each(function () {\r\n                    $(this).data('parent', $(this));\r\n                });\r\n            } else {\r\n                $cloudPayBtn.each(function () {\r\n                    if (!$(this).parent().is(\".dr_cloudPayOverlay\")) {\r\n                        const $overlay = $(\"<div class='dr_cloudPayOverlay'></div>\").click(function () {\r\n                            $(_selector.cloudPayTCError).show();\r\n                        });\r\n                        $(this).css({\r\n                            \"pointer-events\": \"none\"\r\n                        }).wrap(\r\n                            $overlay\r\n                        );\r\n                        $(this).data('parent', $(this).parent());\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n        if (_config.page === 'ThreePgCheckoutAddressPaymentInfoPage') {\r\n            $(document).on(\"change\", \"input[name='paymentMethodID']\", function () {\r\n                const payment = $(this).attr('data-type');\r\n                if (payment && _config[PAYMENTS][payment]) {\r\n                    if (_config[PAYMENTS][payment].showTC) {\r\n                        $(_selector.cloudPayTC).show();\r\n                    } else {\r\n                        $(_selector.cloudPayTC).hide();\r\n                        $(_selector.cloudPayTCError).hide();\r\n                    }\r\n                }\r\n            });\r\n            $(\"input[name='paymentMethodID']:checked\").trigger(\"change\");\r\n        }\r\n\r\n        _cjs.on('entityUpdate', function (entityData) {\r\n            if (!entityData) {\r\n                entityData = _config.entity;\r\n            }\r\n            const cloudPayTermsAcceptance = $(_selector.cloudPayTermsAcceptance).is(\":checked\");\r\n            const cloudPayTC = $.parseHTML(entityData.cloudPayTC);\r\n            if (cloudPayTC && cloudPayTC.length) {\r\n                const html = $(cloudPayTC[0]).html();\r\n                $(_selector.cloudPayTC).html(html);\r\n                $(_selector.cloudPayTermsAcceptance).prop('checked', cloudPayTermsAcceptance);\r\n            }\r\n        });\r\n        const $cloudPayBtn = $(_selector.cloudPayBtn);\r\n        if ($cloudPayBtn && $cloudPayBtn.length) {\r\n            let showTC = false;\r\n            $cloudPayBtn.each(function () {\r\n                const payment = $(this).attr('data-payment');\r\n                if (payment && _config[PAYMENTS][payment].show && _config[PAYMENTS][payment].showTC) {\r\n                    showTC = true;\r\n                    $(this).attr('data-tc', true);\r\n                }\r\n            });\r\n            if (showTC) {\r\n                _this.showTC = true;\r\n                await _this.checkTC();\r\n                $(_selector.cloudPayTermsAcceptance).trigger(\"change\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks whether the Terms and Conditions container is present on the page and insert the Terms and Conditions text in the container.\r\n     * @param {jQueryObject} [cloudPayTCContainer]\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.checkTC();\r\n     */\r\n    async checkTC(cloudPayTCContainer) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _selector = _config.selector;\r\n        const _this = this;\r\n        if (_this.showTC) {\r\n            let $cloudPayTCContainer = cloudPayTCContainer;\r\n            let $cloudPayTCContainerAll = $(_selector.cloudPayTCContainer);\r\n            $cloudPayTCContainerAll.empty();\r\n            if (!$cloudPayTCContainer) {\r\n                if ($cloudPayTCContainerAll.length) {\r\n                    $cloudPayTCContainer = $cloudPayTCContainerAll.filter(function () {\r\n                        return $(this).closest(_selector.checkoutForm).length === 0;\r\n                    });\r\n                }\r\n            }\r\n            if ($cloudPayTCContainer && $cloudPayTCContainer.length) {\r\n                //$(_cjs[CONFIG].selector.cloudPayTC).replaceWith(_cjs[CONFIG].entity.cloudPayTC);\r\n                $cloudPayTCContainer.html(_config.entity.cloudPayTC);\r\n            } else {\r\n                if (!$(_selector.checkoutForm).length) {\r\n                    //$(_cjs[CONFIG].entity.cloudPayTC).insertAfter($(_cjs[CONFIG].selector.cloudPayBtn).last());\r\n                    $(_config.entity.cloudPayTC).insertBefore($(_selector.cloudPayBtn).first());\r\n                }\r\n            }\r\n            $(_selector.cloudPayTC).show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copies the checkout form data to the CheckoutJS instance.\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.syncShopperInfo();\r\n     */\r\n    async syncShopperInfo() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const billingAddress = await _cjs.gC.getBillingAddress();\r\n        const shippingAddress = await _cjs.gC.getShippingAddress();\r\n\r\n        let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();//{cart:{}};\r\n        cartData.cart.billingAddress = await _shopperApi.convertPaymentRequestAddressToShopperApiAddress(\r\n            billingAddress, 'billingAddress'\r\n        );\r\n        cartData.cart.shippingAddress = await _shopperApi.convertPaymentRequestAddressToShopperApiAddress(\r\n            shippingAddress, 'shippingAddress'\r\n        );\r\n        await _util.setValue(CARTDATA, cartData);\r\n\r\n        let country = _config.country;\r\n        if (cartData.cart.billingAddress.country) {\r\n            country = cartData.cart.billingAddress.country;\r\n        } else if (cartData.cart.shippingAddress.country) {\r\n            country = cartData.cart.shippingAddress.country;\r\n        }\r\n        _config.country = country;\r\n    }\r\n\r\n    async createShopperPaymentOptionSelector() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopper = _cjs[SHOPPER];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _selector = _config.selector;\r\n        const _util = _cjs[UTIL];\r\n        const _gC = _cjs.gC;\r\n        const _gcPayments = _gC[PAYMENTS];\r\n        const CREDITCARD = 'creditCard';\r\n        const _configPayment = _config[PAYMENTS][CREDITCARD];\r\n        if(_shopper.isAuthenticated) {\r\n\r\n            let $billingOption = $('<span id=\"dr_billingOption\"></span>');\r\n\r\n            const $paymentContainer = $('#dr_paymentContainer');\r\n            if ($paymentContainer.find('#dr_payment').length) {\r\n                $billingOption.insertBefore($paymentContainer.find('#dr_payment>div')[0]);\r\n            } else {\r\n                $billingOption.insertBefore($paymentContainer.find('.dr_checkoutContainer>div')[0]);\r\n            }\r\n\r\n            $billingOption.append($(_config.selector.payment.billingNickNameContainer).add(_config.selector.payment.billingOptionContainer));\r\n\r\n            const paymentOptions = await _shopperApi.getPaymentOptions();\r\n            const paymentOption = paymentOptions.paymentOptions.paymentOption;\r\n            let $input = $(_config.selector.payment.billingNickName);\r\n            Global.onPaymentChange = async (element)=>{\r\n                const value = $(element).val();\r\n                const item = $(element).find('option[value=\"'+value+'\"]').data('item');\r\n                $(\"input[name='paymentMethodID'][data-type]:checked\").removeAttr('data-disabled');\r\n\r\n                if(item){\r\n                    let paymentType = await _util.getSourcePaymentType(item.type);\r\n                    if(paymentType === 'CreditCardMethod'){\r\n                        paymentType = CREDITCARD;\r\n                    }\r\n                    let $paymentMethodID = $(\"input[name='paymentMethodID'][data-type='\" + paymentType + \"']\");\r\n                    $paymentMethodID.attr('data-source-id',item.sourceId).trigger('click',{selector:true});\r\n                    switch(paymentType){\r\n                        case CREDITCARD: {\r\n                            //$(\"#CreditCardMethod,#CurrencySpecificCreditCardMethod\").attr('data-source-id',item.sourceId).trigger('click',{selector:true});\r\n                            const paymentOption = Global.paymentList.find(elm => elm.paymentOptionID === item.id.toString());\r\n                            const creditCard = item.creditCard;\r\n                            let cardNumber = creditCard.displayName?creditCard.displayName:creditCard.brand+' ';\r\n                            if(creditCard.displayableNumber){\r\n                                cardNumber+= creditCard.displayableNumber;\r\n                            }else{\r\n                                cardNumber+= paymentOption.cardNumber;\r\n                            }\r\n\r\n                            let element = _config[PAYMENTS][CREDITCARD].element;\r\n                            if(element) {\r\n                                element.cardnumber.parentNode.textContent = cardNumber;\r\n                                element.cardexpiration.parentNode.textContent = '';\r\n                                element.cardcvv.parentNode.textContent = item.creditCard.expirationMonth + '/' + item.creditCard.expirationYear;\r\n                                element.cardnumber.parentNode.classList.add(_configPayment.classes.complete);\r\n                                element.cardexpiration.parentNode.classList.add(_configPayment.classes.complete);\r\n                                element.cardcvv.parentNode.classList.add(_configPayment.classes.complete);\r\n                                $('input[name=cardNumber]').val(paymentOption.cardNumber);\r\n                                $('input[name=cardExpirationMonth]').val(item.creditCard.expirationMonth);\r\n                                $('input[name=cardExpirationYear]').val(item.creditCard.expirationYear);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (item.sourceId && item.sourceClientSecret) {\r\n                        $(_selector.cloudPaySourceId).val(item.sourceId);\r\n                        const result = await _cjs[DRJS].retrieveSource(item.sourceId, item.sourceClientSecret);\r\n                        await _util.setValue(PAYMENT, {name: paymentType, result: result});\r\n                    } else {\r\n                        $(\"input[name='paymentMethodID'][data-type='\" + paymentType + \"']\").attr('data-disabled','true');\r\n                    }\r\n                }\r\n                if(value === 'NEW'){\r\n                    if(!$(_config.selector.payment.billingNickNameContainer).is(':visible')) {\r\n                        $(_config.selector.payment.billingNickNameContainer).show();\r\n                        let element = _config[PAYMENTS][CREDITCARD].element;\r\n                        if(element) {\r\n                            element.cardnumber.parentNode.textContent = '';\r\n                            element.cardexpiration.parentNode.textContent = '';\r\n                            element.cardcvv.parentNode.textContent = '';\r\n                            element.cardnumber.parentNode.classList.remove(_configPayment.classes.complete);\r\n                            element.cardexpiration.parentNode.classList.remove(_configPayment.classes.complete);\r\n                            element.cardcvv.parentNode.classList.remove(_configPayment.classes.complete);\r\n                        }\r\n                        _cjs.emit('initializePayments');\r\n                    }\r\n                } else {\r\n                    $(_config.selector.payment.billingNickNameContainer).hide();\r\n                    await _util.removeValue(NICKNAME);\r\n                    $input.val('');\r\n                }\r\n            };\r\n\r\n            $input.on('change', async () => {\r\n                const billingOptionNickName = $input.val();\r\n                await _util.setValue(NICKNAME, billingOptionNickName);\r\n                if(billingOptionNickName && billingOptionNickName.length){\r\n                    $input.removeClass(_config.gC.errorClass);\r\n                }\r\n            });\r\n\r\n            if(paymentOption){\r\n                for(let i=0;i<paymentOption.length;i++) {\r\n                    const item = paymentOption[i];\r\n                    const paymentType = await _util.getSourcePaymentType(item.type);\r\n                    let supportedCurrency = true;\r\n                    if(item.sourceId && _gcPayments.hasOwnProperty(paymentType)) {\r\n                        supportedCurrency = await _gcPayments[paymentType].supportedCurrency();\r\n                    }\r\n                    $(_config.selector.payment.billingOptionSelector).find('option[value=\"'+item.id+'\"]').data('item', item).attr('disabled',!supportedCurrency);\r\n                }\r\n            }\r\n            _cjs.once('initialized',async()=>{\r\n                const _payment = (await _util.getValue(PAYMENT) || {});\r\n                let source = {};\r\n                if (_payment && _payment.result && _payment.result.source) {\r\n                    source = _payment.result.source;\r\n                    if(paymentOption){\r\n                        for(let i=0;i<paymentOption.length;i++) {\r\n                            const item = paymentOption[i];\r\n                            if(item.sourceId === source.id){\r\n                                $(_config.selector.payment.billingOptionSelector).find('option[value=\"'+item.id+'\"]').prop('selected',true);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                $(_config.selector.payment.billingOptionSelector).trigger('change');\r\n                $(document).on(\"click\", \"input[name='paymentMethodID']\", (e,data)=> {\r\n                    if(!data || !data.selector ) {\r\n                        $(_config.selector.payment.billingOptionSelector).val('NEW').trigger('change');\r\n                    }\r\n                });\r\n                const nickname = await _util.getValue(NICKNAME);\r\n                $(_config.selector.payment.billingNickName).val(nickname);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Routes to a gC checkout flow page e.g. cart, info, confirm, thankyou.\r\n     * @returns {Promise<{PaymentSourceObject}>}\r\n     * @example checkoutJS.gC.routing('confirm');\r\n     */\r\n    async routing(payment) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _name = payment;\r\n        const route = _config[PAYMENTS][_name].route;\r\n        const _selector = _config.selector;\r\n        const _payment = (await _util.getValue(PAYMENT) || {});\r\n        let source = {};\r\n        if (_payment && _payment.result && _payment.result.source) {\r\n            source = _payment.result.source;\r\n        }\r\n        if (route === \"thankyou\") {\r\n            const response = await _shopperApi.applySourceToCart(source.id);\r\n            if (response && response.cart && typeof response.cart.paymentMethod !== UNDEFINED) {\r\n                const cart = await _shopperApi.submitCart();\r\n\r\n                if (cart.submitCart) {\r\n                    let orderId = cart.submitCart.order.id;\r\n                    return Promise.resolve(source).then(async () => {\r\n                        const link = await _shopperApi.getThankYouPageLink(orderId);\r\n                        Global.location.href = link;\r\n                    });\r\n                } else {\r\n                    return Promise.reject('fail to submit cart');\r\n                }\r\n            } else {\r\n                return Promise.reject(FAIL_TO_APPLY_SOURCE);\r\n            }\r\n        } else if (route === \"confirm\") {\r\n            const response = await _shopperApi.applySourceToCart(source.id);\r\n            if (response && response.cart && typeof response.cart.paymentMethod !== UNDEFINED) {\r\n                return Promise.resolve(source).then(async () => {\r\n                    const link = await _shopperApi.getConfirmOrderPageLink();\r\n                    Global.location.href = link;\r\n                });\r\n            } else {\r\n                return Promise.reject(FAIL_TO_APPLY_SOURCE);\r\n            }\r\n        } else {\r\n            const $paymentMethodID = $(\"input[name='paymentMethodID'][data-type='\" + _name + \"']\");\r\n            const _gCPayment = _cjs.gC[PAYMENTS][_name];\r\n            if (_config.page === 'QuickBuyCartPage') {\r\n                $(_selector.cloudPaySourceId).val(source.id);\r\n                $paymentMethodID.attr('data-source-id', source.id);\r\n                if (_gCPayment.changePaymentMethod) {\r\n                    _gCPayment.changePaymentMethod();\r\n                }\r\n                return Promise.resolve(source).then(() => {\r\n                    if ($paymentMethodID.is(':visible')) {\r\n                        $paymentMethodID.trigger('click');\r\n                        $(_selector.checkoutForm).submit();\r\n                    }\r\n                });\r\n            } else if (_config.page === 'ThreePgCheckoutAddressPaymentInfoPage') {\r\n                $(_selector.cloudPaySourceId).val(source.id);\r\n                $paymentMethodID.attr('data-source-id', source.id);\r\n                if (_gCPayment.changePaymentMethod) {\r\n                    _gCPayment.changePaymentMethod();\r\n                }\r\n                $(_selector.checkoutForm).submit();\r\n                return Promise.resolve(source);\r\n            } else if (_config.page === 'ThreePgCheckoutShoppingCartPage') {\r\n                const response = await _shopperApi.applySourceToCart(source.id);\r\n                if (response && response.cart && typeof response.cart.paymentMethod !== UNDEFINED) {\r\n                    return Promise.resolve(source).then(() => {\r\n                        $(_selector.threePgCheckoutBtn)[0].click();\r\n                    });\r\n                } else {\r\n                    return Promise.reject(FAIL_TO_APPLY_SOURCE);\r\n                }\r\n            } else {\r\n\r\n                const response = await _shopperApi.applySourceToCart(source.id);\r\n                if (response && response.cart && typeof response.cart.paymentMethod !== UNDEFINED) {\r\n                    return Promise.resolve(source).then(async () => {\r\n                        const link = await _shopperApi.getInfoPageLink();\r\n                        Global.location.href = link;\r\n                    });\r\n                } else {\r\n                    return Promise.reject(FAIL_TO_APPLY_SOURCE);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async validateElements() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _configGc = _config.gC;\r\n        const _shopper = _cjs[SHOPPER];\r\n        let validated = true;\r\n        if (_shopper.isAuthenticated && $('#dr_billingOption').is(':visible')) {\r\n            const $nickinput = $(_config.selector.payment.billingNickName);\r\n            const value = $nickinput.val();\r\n            if(value === '') {\r\n                $nickinput.addClass(_configGc.errorClass);\r\n                validated = false;\r\n            }\r\n        }\r\n        return validated;\r\n    }\r\n}\r\n\r\n/**\r\n * @class ShopperGC\r\n * @classdesc The ShopperGC class is the shopper module for Global Commerce hosted sites.\r\n * @extends Shopper\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {Promise<ShopperGC>}\r\n * @category CommerceAPI\r\n */\r\nclass ShopperGC extends Shopper {\r\n    constructor(parent, collection) {\r\n        super(parent, extend({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                getPrefix: true\r\n            }\r\n        }, collection));\r\n        return (async () => {\r\n            return parent.shopper;\r\n        })();\r\n    }\r\n\r\n    async getPrefix() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        let _id = await _cjs[UTIL].getCookie('gc_ss_' + _config.siteId);\r\n        if (!_id) _id = _config.siteId;\r\n        return _config.prefixName + _id + '_';\r\n    }\r\n}\r\n\r\n/**\r\n * @class GlobalCommercePayment\r\n * @classdesc The GlobalCommercePayment class is the payment module for DigitalRiver.js payments on Global Commerce hosted sites. Override the functions in this class if customizations for the payment is needed.\r\n * @hideconstructor\r\n * @extends StorefrontPayment\r\n * @category PaymentBase\r\n */\r\nconst PaymentGC = {\r\n\r\n    /**\r\n     * Creates the payment sections for each enabled DigitalRiver.js payments on the Global Commerce billing/payment information pages when the #dr_paymentContainer exists on the page.\r\n     * @memberOf GlobalCommercePayment\r\n     * @returns {Promise<$paymentSection>}\r\n     * @instance\r\n     * @abstract\r\n     * @async\r\n     */\r\n    createPaymentInfo: async function () {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _selector = _config.selector;\r\n        let _payment = _config[PAYMENTS][_name];\r\n        let $paymentSection = await _util.getCache(_name + 'Section');\r\n        if (!$paymentSection && _payment.hidePaymentSection !== true) {\r\n            const cloudPayPaymentMethodID = $('#CloudPay').val();\r\n            if (cloudPayPaymentMethodID) {\r\n                if (typeof Global.resizeToMobilePayments !== UNDEFINED) {\r\n                    Global.resizeToMobilePayments();\r\n                }\r\n                _payment = _config[PAYMENTS][_name];\r\n                $paymentSection = $(_util.format($(_config.template.payment).html(), {\r\n                    paymentId: _name,\r\n                    name: _payment.name,\r\n                    description: _payment.description,\r\n                    details: _config.labels.DETAILS\r\n                }));\r\n                const $paymentContainer = $(_selector.payment.paymentContainer);\r\n                if($paymentContainer.find(_selector.payment.paymentSection).length){\r\n                    $paymentContainer.find(_selector.payment.paymentSection).first().append($paymentSection);\r\n                } else {\r\n                    console.error('Not found payment container section');\r\n                }\r\n                let $paymentMethodID = $paymentSection.find(\"input[name='paymentMethodID']\");\r\n                $paymentMethodID.attr(\"data-type\", _name);\r\n\r\n                $(Global).trigger('resize');\r\n                if (typeof Global.payDetailsSize !== UNDEFINED) {\r\n                    Global.payDetailsSize();\r\n                }\r\n\r\n                let _payment = (await _util.getValue(PAYMENT) || {});\r\n                if (Object.keys(_payment).length === 0) {\r\n                    _payment = _config.cloudPayPayload || {};\r\n                }\r\n                if (_payment && (_payment.type === _name || _payment.name === _name) && $(\"#CloudPay\").is(':checked')) {\r\n                    let source = (_payment && _payment.result && _payment.result.source) ? _payment.result.source : _payment;\r\n                    if (source && source.id) {\r\n                        if (source.clientSecret) {\r\n                            const result = await _cjs[DRJS].retrieveSource(source.id, source.clientSecret);\r\n                            await _util.setValue(PAYMENT, {name: _name, result: result});\r\n                            source = result.source;\r\n                            _cjs.emit(LOGGING, {\r\n                                id: _util.getTime(),\r\n                                api: DRJS,\r\n                                method: 'retrieveSource',\r\n                                options: result\r\n                            });\r\n                        }\r\n                        if (source && _util.isReadySubmitState(source.state)) {\r\n                            $paymentMethodID.attr('data-source-id', source.id);\r\n                        }\r\n                    }\r\n                    $paymentMethodID.trigger('click');\r\n                }\r\n                await _util.setCache(_name + 'Section', $paymentSection);\r\n            }\r\n        }\r\n        return $paymentSection;\r\n    },\r\n\r\n    /**\r\n     * Hides the payment information sections of the non-selected payment methods after creating the payment sections and initializing the payments.\r\n     * @memberOf GlobalCommercePayment\r\n     * @returns {Promise}\r\n     * @instance\r\n     * @abstract\r\n     * @async\r\n     */\r\n    completePaymentInfo: async function () {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        if (!_cjs[CONFIG][PAYMENTS][_name].show) {\r\n            const section$ = await _cjs[UTIL].getCache(_name + 'Section');\r\n            if (section$) {\r\n                section$.hide();\r\n            }\r\n        }\r\n        return await _cjs.gC[PAYMENTS][_name].changePaymentMethod();\r\n    },\r\n\r\n    /**\r\n     * This event will be triggered after the payment method has changed.\r\n     * @memberOf GlobalCommercePayment\r\n     * @returns {Promise}\r\n     * @instance\r\n     * @abstract\r\n     * @async\r\n     */\r\n    changePaymentMethod: async function () {\r\n\r\n    }\r\n};\r\n\r\n/** The CheckoutJS configuration structure for Global Commerce hosted sites.\r\n *  @module ConfigGC\r\n *  @extends module:Config\r\n *  @category Utility\r\n */\r\nconst ConfigGC = {\r\n    /**\r\n     * All payment configurations for for Global Commerce hosted sites.\r\n     * @name payments\r\n     * @type { Object.<string, module:Config.PaymentConfigDefinition> }\r\n     * @memberOf module:ConfigGC\r\n     * @instance\r\n     * @property {module:Config.PaymentConfigDefinition} codJapan - Cash On Delivery\r\n     */\r\n    payments: {\r\n        creditCard:{\r\n            gcStorefront:false\r\n        },\r\n        payPal:{\r\n            //gcStorefront:false\r\n        },\r\n        applePay: {\r\n            route: \"thankyou\",\r\n            showTC: true,\r\n            hidePaymentSection: true\r\n        },\r\n        googlePay: {\r\n            route: \"thankyou\",\r\n            showTC: true,\r\n            hidePaymentSection: true\r\n        },\r\n        codJapan: {\r\n            name: \"Cash On Delivery\",\r\n            elementId: \"dr_codJapan\",\r\n            disable: true,\r\n            show: false,\r\n            enumerable: false,\r\n            supportedGeographies: [\"JP\"],\r\n            supportedCurrencies: [\"JPY\"]\r\n        },\r\n        payco: {\r\n            preventPopupClose: true\r\n        },\r\n        bankTransfer: {\r\n            preventPopupClose: true\r\n        },\r\n        msts: {\r\n            showEnrollButton: true\r\n        },\r\n        dropin: {\r\n            //removePaymentContainer: true\r\n        }\r\n    },\r\n    selector: {\r\n        payment: {\r\n            paymentContainer: '#dr_paymentContainer',\r\n            paymentSection: '#dr_payment,.dr_checkoutContainer',\r\n            billingNickNameContainer: '#billingNickDiv',\r\n            billingNickName: '#ccNickName',\r\n            billingOptionContainer: '#dr_ccMethodSelect',\r\n            billingOptionSelector: '#ccMethod',\r\n        }\r\n    },\r\n    gC: {\r\n        errorClass: \"dr_error\",\r\n        disableNotSupportedPayment: true,\r\n        hidePaymentSection: true,\r\n    }\r\n};\r\n\r\nexport {\r\n    GlobalCommerce,\r\n    ShopperGC,\r\n    PaymentGC,\r\n    ConfigGC,\r\n    $\r\n};\r\n","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","import {Base} from '../base';\r\nimport {\r\n    _CHECKOUTJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    UNDEFINED,\r\n    REQUESTPAYLOAD,\r\n    PAYMENT,\r\n    CARTDATA,\r\n    ELEMENT\r\n} from \"../keywords\";\r\n\r\n/**\r\n * The response of the payment request.\r\n * @typedef PaymentRequestResponseObject\r\n * @property {Object} error - The error details, which will only be populated if there are any errors.\r\n * @property {PaymentSourceObject} source - The source payload details.\r\n * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/reference/digital-river-payment-objects#payment-request-source-object\r\n */\r\n\r\n/**\r\n * The payment source object.\r\n * @typedef PaymentSourceObject\r\n * @property {string} type - The payment name of the source, e.g. creditCard, googlePay, applePay.\r\n * @property {string} id - The unique source ID in payment services.\r\n * @property {string} clientSecret - The secret key to retrieve source details.\r\n * @property {string} flow\r\n * @property {string} amount - The amount that will be charged.\r\n * @property {string} clientId\r\n * @property {string} channelId\r\n * @property {string} currency\r\n * @property {string} upstreamId - The cart or requisition ID in Global Commerce.\r\n * @property {Boolean} reusable\r\n * @property {string} state\r\n * @property {Boolean} liveMode\r\n * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/reference/digital-river-payment-objects#payment-request-source-object\r\n */\r\n\r\n/**\r\n * The payload object returned from payment services.\r\n * @typedef PaymentRequestObject\r\n * @property {string} type\r\n * @property {string} country\r\n * @property {string} currency\r\n * @property {Object[]} displayItems\r\n * @property {Object[]} shippingOptions\r\n * @property {Object} owner\r\n * @property {Boolean} requestShipping\r\n * @property {Object} style\r\n * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/reference/digital-river-payment-objects#payment-request-object\r\n */\r\n\r\n/**\r\n * The payment object, which contains the payment name and response of the payment request.\r\n * @typedef PaymentObject\r\n * @property {string} name - The payment name.\r\n * @property {PaymentRequestResponseObject} result - The response of the payment request.\r\n */\r\n\r\n/**\r\n * The DigitalRiver.js options, which includes customization options.\r\n * @typedef PaymentElementOptions\r\n * @property {Object} style - The custom styles.\r\n * @property {Object} classes - The custom classes.\r\n * @example {\r\n    classes: {\r\n        base: \"DRElement\",\r\n        complete: \"complete\",\r\n        empty: \"empty\",\r\n        focus: \"focus\",\r\n        invalid: \"invalid\",\r\n        webkitAutofill: \"autofill\"\r\n    },\r\n    style: {\r\n        base: {\r\n            color: \"#fff\",\r\n            fontFamily: \"Arial, Helvetica, sans-serif\",\r\n            fontSize: \"20px\",\r\n            fontSmoothing: \"auto\",\r\n            fontStyle: \"italic\",\r\n            fontVariant: \"normal\",\r\n            letterSpacing: \"3px\"\r\n        },\r\n        empty: {\r\n            color: \"#fff\"\r\n        },\r\n        complete: {\r\n            color: \"green\"\r\n        },\r\n        invalid: {\r\n            color: \"red\",\r\n        }\r\n    }\r\n}\r\n */\r\n\r\n\r\n/**\r\n * @classdesc The base payment class, which contains shared functionalities for all payment methods.\r\n * @class Payment\r\n * @extends Base\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType=''] - The payment name.\r\n * @returns {Payment}\r\n * @category PaymentBase\r\n */\r\nclass Payment extends Base {\r\n    constructor(parent, collection, name = '') {\r\n        super(parent, Object.assign({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                createPaymentRequest: true,\r\n                applySourceId: true,\r\n                completeSourceId: true,\r\n                shippingAddressChange: true,\r\n                shippingOptionChange: true,\r\n                validate: true,\r\n                validateElements: true,\r\n                click: true,\r\n                cancel: true,\r\n                routing: true,\r\n                getReturnUrl: true,\r\n                getCancelUrl: true,\r\n                getGeographiesErrorMsg: true,\r\n                getCurrenciesErrorMsg: true,\r\n                getAmountErrorMsg: true\r\n            }\r\n        }, collection), name);\r\n        /**\r\n         * The request payload of the payment instance.\r\n         * @name requestPayload\r\n         * @type PaymentRequestPayload\r\n         * @memberof Payment\r\n         * @instance\r\n         */\r\n        this[REQUESTPAYLOAD] = new PaymentRequestPayload(parent, {}, name, this);\r\n        Object.defineProperty(this, REQUESTPAYLOAD, {\r\n            enumerable: false,\r\n            configurable: false,\r\n            writable: true,\r\n        });\r\n\r\n        /**\r\n         * The HTML element of the payment instance.\r\n         * @name element\r\n         * @type PaymentElement\r\n         * @memberof Payment\r\n         * @instance\r\n         */\r\n        this[ELEMENT] = new PaymentElement(parent, {}, name, this);\r\n        Object.defineProperty(this, ELEMENT, {\r\n            enumerable: false,\r\n            configurable: false,\r\n            writable: true,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates the payment request payload for this payment.\r\n     * @returns {Promise<PaymentRequestObject>}\r\n     */\r\n    async createPaymentRequest() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _util = _cjs[UTIL];\r\n        let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        let paymentRequestData = await _this[REQUESTPAYLOAD].createObject(cartData);\r\n        return (paymentRequestData);\r\n    }\r\n\r\n    /**\r\n     * Applies the source to an active cart via Commerce API.\r\n     * @param {PaymentRequestResponseObject} result - The return payload from DigitalRiver.js after the source ID has been applied.\r\n     * @abstract\r\n     * @returns {Promise<PaymentRequestResponseObject>}\r\n     */\r\n    async applySourceId(paymentRequestResponseObject) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _util = _cjs[UTIL];\r\n        const result = paymentRequestResponseObject;\r\n        if (result.error) {\r\n            return Promise.reject(result);\r\n        } else {\r\n            const source = result.source;\r\n            await _util.setValue(PAYMENT, {name: _name, result: result});\r\n            if (source) {\r\n                const address = await Promise.all([\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(Object.assign(result.billingAddress, result.contactInformation), 'billingAddress'),\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(result.shippingAddress, 'shippingAddress')\r\n                ]);\r\n                await _shopperApi.applyAddressToCart(address[0], address[1]);\r\n                if (source.flow === 'standard' || source.flow === 'receiver') {\r\n                    await _shopperApi.applySourceToCart(source.id);\r\n                }\r\n            }\r\n            return (source);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function will be triggered after the source ID has been applied.\r\n     * @param {PaymentRequestResponseObject} paymentRequestResponseObject - The return payload from DigitalRiver.js after the source ID has been applied.\r\n     * @abstract\r\n     * @returns {Promise<PaymentRequestResponseObject>}\r\n     */\r\n    async completeSourceId(paymentRequestResponseObject) {\r\n        return (paymentRequestResponseObject);\r\n    }\r\n\r\n    /**\r\n     * This function will be triggered to update the shipping address on the cart, for one-click checkout.\r\n     * @param {Event} event\r\n     * @returns {Promise<PaymentRequestObject>}\r\n     */\r\n    async shippingAddressChange(event) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const shippingAddress = event.shippingAddress;\r\n        return _shopperApi.convertPaymentRequestAddressToShopperApiAddress(shippingAddress, 'shippingAddress')\r\n            .then(function (shopperApiShippingAddress) {\r\n                return _shopperApi.applyAddressToCart(null, shopperApiShippingAddress);\r\n            }).then(async function (response) {\r\n                const updateObject = await _this.createPaymentRequest(await _this[REQUESTPAYLOAD].updateObject(response), 'shippingaddresschange');\r\n                return _this.shippingAddressChange(updateObject).then(function () {\r\n                    return (updateObject);\r\n                });\r\n            }).catch(async function (ex) {\r\n                const updateObject = await _this.createPaymentRequest(await _this[REQUESTPAYLOAD].errorObject(ex), 'shippingaddresschange');\r\n                return (updateObject);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * This function will be triggered to update the shipping option on the cart, for one-click checkout.\r\n     * @param {Event} event\r\n     * @returns {Promise<PaymentRequestObject>}\r\n     */\r\n    async shippingOptionChange(event) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const shippingOption = event.shippingOption;\r\n        const shippingOptionId = shippingOption.id;\r\n        return _shopperApi.updateSelectedShippingMethodOnCart(shippingOptionId)\r\n            .then(async function (response) {\r\n                const updateObject = await _this.createPaymentRequest(await _this[REQUESTPAYLOAD].updateObject(response), 'shippingoptionchange');\r\n                return (updateObject);\r\n            }).catch(async function (ex) {\r\n                const updateObject = await _this.createPaymentRequest(await _this[REQUESTPAYLOAD].errorObject(ex), 'shippingoptionchange');\r\n                return (updateObject);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Determines if this payment is supported on the current currency.\r\n     * @returns {Promise<Boolean>}\r\n     */\r\n    async supportedCurrency() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        let _supportedCurrencies = [];\r\n        if(Array.isArray(_configPayment.supportedCurrencies)){\r\n            _supportedCurrencies = _configPayment.supportedCurrencies;\r\n        }else if(_configPayment.supportedSettings){\r\n            _supportedCurrencies = Object.keys(_configPayment.supportedSettings);\r\n        }\r\n        const _currentCurrency = _cjs[CONFIG].currency;\r\n        let supported = _supportedCurrencies.includes(_currentCurrency);\r\n        return ((_supportedCurrencies.length === 0) || supported);\r\n    }\r\n\r\n    /**\r\n     * Determines if this payment is supported in the current country.\r\n     * @returns {Promise<Boolean>}\r\n     */\r\n    async supportedGeography(country) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const _supportedGeographies = _configPayment.supportedGeographies || [];\r\n        let supported = _supportedGeographies.includes(country);\r\n        return ((_supportedGeographies.length === 0) || supported);\r\n        //TODO support _configPayment.supportedSettings\r\n    }\r\n\r\n    async supportedCurrencyAndGeography(currency, country, init) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        //const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        let _supportedGeographies = _configPayment.supportedGeographies || [];\r\n        let _supportedCurrencies = [];\r\n        let geographiesValidated = false;\r\n        let currenciesValidated = false;\r\n        let amountValidated = true;\r\n        if(Array.isArray(_configPayment.supportedCurrencies)) {\r\n            _supportedCurrencies = _configPayment.supportedCurrencies;\r\n        }else if(_configPayment.supportedCurrencies){\r\n            if(_configPayment.supportedCurrencies.hasOwnProperty(currency) && _configPayment.supportedCurrencies[currency].countries) {\r\n                _supportedGeographies = _configPayment.supportedCurrencies[currency].countries;\r\n            }\r\n        }else if(_configPayment.supportedSettings) {\r\n            if(_configPayment.supportedSettings.hasOwnProperty(currency)) {\r\n                const value = _configPayment.supportedSettings[currency];\r\n                _supportedCurrencies.push(currency);\r\n                if (value && value.countries) {\r\n                    _supportedGeographies = [...value.countries];\r\n                }\r\n                amountValidated = await _this.supportedThresholdAmount(currency);\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n        if(_supportedGeographies.length === 0 || _supportedGeographies.includes(country)){\r\n            geographiesValidated = true;\r\n        }\r\n        if(_supportedCurrencies.length === 0 || _supportedCurrencies.includes(currency)){\r\n            currenciesValidated = true;\r\n        }\r\n        if(!geographiesValidated && !init) {\r\n            const geographiesErrorMsg = await _cjs[PAYMENTS][_name].getGeographiesErrorMsg();\r\n            _util.errorMessage(geographiesErrorMsg);\r\n        }\r\n        if(!currenciesValidated && !init) {\r\n            const currenciesErrorMsg = await _cjs[PAYMENTS][_name].getCurrenciesErrorMsg();\r\n            _util.errorMessage(currenciesErrorMsg);\r\n        }\r\n        if(!amountValidated && !init) {\r\n            const amountErrorMsg = await _cjs[PAYMENTS][_name].getAmountErrorMsg();\r\n            _util.errorMessage(amountErrorMsg);\r\n        }\r\n        return (geographiesValidated && currenciesValidated && amountValidated);\r\n    }\r\n\r\n    async supportedThresholdAmount(currency) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        let amountValidated = true;\r\n        if(_configPayment.supportedSettings && _configPayment.supportedSettings.hasOwnProperty(currency)) {\r\n            const value = _configPayment.supportedSettings[currency];\r\n            if (value && value.minAmount) {\r\n                if (cartData.cart.pricing.orderTotal.value < value.minAmount) {\r\n                    amountValidated = false;\r\n                }\r\n            }\r\n            if (value && value.maxAmount) {\r\n                if (cartData.cart.pricing.orderTotal.value > value.maxAmount) {\r\n                    amountValidated = false;\r\n                }\r\n            }\r\n        }\r\n        return amountValidated;\r\n    }\r\n\r\n    async supportedRecurringPayments() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _name = this._name;\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        let supported = true;\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        const useRecurringPayment = await _util.useRecurringPayment(cartData);\r\n        if(useRecurringPayment && !_configPayment.supportedRecurringPayments) {\r\n            supported = false;\r\n        }\r\n        if(_configPayment.singleSubscriptionForRecurring && useRecurringPayment && cartData.cart.totalItemsInCart>1) {\r\n            supported = false;\r\n        }\r\n        return supported;\r\n    }\r\n\r\n    async supportedSettings() {\r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * Validates the cart before the cart is submitted or before the next step/page.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @throws Throws specific errors if the cart is not valid.\r\n     * @returns {Promise<Boolean>}\r\n     */\r\n    async validateInfo(cartData) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _name = this._name;\r\n        const _payments = await _this._storefront.getPayments();\r\n        const _configLabels = _cjs[CONFIG].labels;\r\n        const country = (!!cartData && !!cartData.cart.billingAddress.country) ? cartData.cart.billingAddress.country : _cjs[CONFIG].country;\r\n        const init = false;\r\n\r\n        let supportedGeography = await _payments[_name].supportedGeography(country);\r\n        if (!supportedGeography) {\r\n            return Promise.reject(new Error(_configLabels.INVALID_BILLING_COUNTRY));\r\n        }\r\n\r\n        let supported = await _payments[_name].supportedCurrencyAndGeography(_config.currency, country, init);\r\n        if (!supported) {\r\n            return false;\r\n        }\r\n\r\n        if (cartData && cartData.cart.billingAddress) {\r\n            if (_util.hasSpecialsCharacters(cartData.cart.billingAddress)) {\r\n                throw new Error(_configLabels.VALIDATOR_INVALID_TYPE);\r\n            }\r\n        }\r\n\r\n        if (cartData && cartData.cart.shippingAddress) {\r\n            if (_util.hasSpecialsCharacters(cartData.cart.shippingAddress)) {\r\n                throw new Error(_configLabels.VALIDATOR_INVALID_TYPE);\r\n            }\r\n        }\r\n\r\n        return await _this.validate(cartData);\r\n    }\r\n\r\n    /**\r\n     * Override this function to add additional validation.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @abstract\r\n     * @returns {Promise<Boolean>}\r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    async validate(cartData) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This event will be triggered when the payment sheet has been cancelled, for one-click checkout.\r\n     * @abstract\r\n     * @returns {Promise}\r\n     */\r\n    async cancel() {\r\n    }\r\n\r\n    /**\r\n     * Override this function to customize the return URL for redirecting to a specific page.\r\n     * @abstract\r\n     * @returns {Promise<string>}\r\n     */\r\n    async getReturnUrl() {\r\n    }\r\n\r\n    /**\r\n     * Override this function to customize the cancel URL for redirecting to a specific page.\r\n     * @abstract\r\n     * @returns {Promise<string>}\r\n     */\r\n    async getCancelUrl() {\r\n    }\r\n    \r\n    async getGeographiesErrorMsg() {\r\n    }\r\n    \r\n    async getCurrenciesErrorMsg() {\r\n    }\r\n    \r\n    async getAmountErrorMsg() {\r\n    }\r\n\r\n    /**\r\n     * Customizes the behavior after the source has been applied. Return false to bypass this feature.\r\n     * @abstract\r\n     * @returns {Promise<Boolean>}\r\n     */\r\n    async routing() {\r\n        return false;\r\n    }\r\n\r\n    async getActiveAcceptance(data){\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _name = this._name;\r\n        const _configPayment = _config[PAYMENTS][_name];\r\n        const _data = {\r\n            CHECKOUT:_config.labels.CHECKOUT,\r\n            ENTITY_NAME:_config.entity.name,\r\n        };\r\n        Object.assign(_data, data);\r\n        let activeAcceptance = _configPayment.activeAcceptance;\r\n        if(activeAcceptance) {\r\n            if(activeAcceptance === true) {\r\n                const attr = await _shopperApi.getText(\"PMS_\"+_name.toUpperCase()+\"_ACTIVEACCEPTANCE\");\r\n                if(attr.attribute && attr.attribute.value){\r\n                    activeAcceptance = attr.attribute.value;\r\n                }else{\r\n                    return;\r\n                }\r\n            }\r\n            return _util.format(activeAcceptance, _data);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Determines if the payment source state is ready for form submit.\r\n     * @param {string} state - The payment source state, e.g. chargeable, pending_funds.\r\n     * @returns {Promise<Boolean>}\r\n     */\r\n    isReadySubmitState(state) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        \r\n        if(_configPayment.submitThenRedirect){\r\n            return ['chargeable','pending_funds','pending_redirect','consumed'].includes(state);\r\n        } else {\r\n            return _util.isReadySubmitState(state);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @class PaymentRequestPayload\r\n * @classdesc The PaymentRequestPayload class is the generic format of a payment request payload.\r\n * @extends Base\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} paymentType\r\n * @param {Payment} payment\r\n * @returns {PaymentRequestPayload}\r\n * @category PaymentBase\r\n */\r\nclass PaymentRequestPayload extends Base {\r\n\r\n    constructor(parent, collection, name, payment) {\r\n        super(parent, Object.assign({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                createObject: true,\r\n                updateObject: true,\r\n                total: true,\r\n                displayItems: true,\r\n                shippingOptions: true,\r\n                shippingOption: true,\r\n                errorObject: true,\r\n                getOwner: true,\r\n            }\r\n        }, collection), name);\r\n\r\n        if (payment) {\r\n            Object.defineProperty(this, '_payment', {\r\n                value: payment,\r\n                configurable: false,\r\n                enumerable: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the payment request object for DigitalRiver.js to create the source.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @abstract\r\n     * @returns {Promise<PaymentRequestObject>}\r\n     * @see PaymentRequestObject\r\n     */\r\n    async createObject(cartData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const country = (!!cartData && !!cartData.cart.billingAddress.country) ? cartData.cart.billingAddress.country : _config.country;\r\n        const currency = (!!cartData && !!cartData.cart.pricing.orderTotal.currency) ? cartData.cart.pricing.orderTotal.currency : _config.currency;\r\n        const owner = await this.getOwner(cartData);\r\n        const total = await this.total(cartData);\r\n        const displayItems = await this.displayItems(cartData);\r\n        const returnUrl = await this._payment.getReturnUrl();\r\n        const cancelUrl = await this._payment.getCancelUrl();\r\n        let _type = _name;\r\n        const useRecurringPayment = await _util.useRecurringPayment(cartData);\r\n        if(useRecurringPayment && _configPayment.recurringName){\r\n            _type = _configPayment.recurringName;\r\n        }\r\n        const paymentRequestData = {\r\n            type: _type,\r\n            upstreamId: cartData.cart.id,\r\n            owner: owner,\r\n        };\r\n\r\n        if(_configPayment.supportedPaymentSession!== false && cartData && cartData.cart.paymentSession && cartData.cart.paymentSession.id) {\r\n            paymentRequestData['sessionId'] = cartData.cart.paymentSession.id;\r\n            paymentRequestData['currency'] = currency;\r\n        } else {\r\n            paymentRequestData['currency'] = currency;\r\n            paymentRequestData['amount'] = total.amount;\r\n        }\r\n\r\n        if(_configPayment.expressCheckout === true) {\r\n            paymentRequestData['currency'] = currency;\r\n            paymentRequestData['country'] = country;\r\n            paymentRequestData['total'] = total;\r\n            _util.extend(paymentRequestData, {\r\n                displayItems: displayItems\r\n            });\r\n            const shippingOptions = await this.shippingOptions(cartData);\r\n            if (shippingOptions.length > 0) {\r\n                paymentRequestData['shippingOptions'] = shippingOptions;\r\n            }\r\n            paymentRequestData['requestShipping'] = shippingOptions.length > 0;\r\n        }\r\n\r\n        paymentRequestData[_type] = {\r\n            returnUrl: returnUrl,\r\n            cancelUrl: cancelUrl\r\n        };\r\n        _util.extend(paymentRequestData,_configPayment.source);\r\n        return (paymentRequestData);\r\n    }\r\n\r\n    /**\r\n     * Updates the payment request object after the cart has been changed.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @abstract\r\n     * @returns {Promise<PaymentRequestObject>}\r\n     * @example\r\n     * return\r\n     * {\r\n     *   status: 'success',\r\n     *   error: {\r\n     *   },\r\n     *   total: {\r\n     *     label: \"Order Total\",\r\n     *     amount: 100,\r\n     *     isPending: false\r\n     *   },\r\n     *   displayItems: [\r\n     *     {\r\n     *       label: \"Line Item Label (Product Name)\",\r\n     *       amount: 100,\r\n     *       isPending: false\r\n     *     }\r\n     *   ]\r\n     * }\r\n     */\r\n    async updateObject(cartData) {\r\n        if (cartData) {\r\n            const total = await this.total(cartData);\r\n            const displayItems = await this.displayItems(cartData);\r\n            const paymentRequestData = {\r\n                status: \"success\",\r\n                total: total,\r\n                displayItems: displayItems\r\n            };\r\n\r\n            const shippingOptions = await this.shippingOptions(cartData);\r\n            if (shippingOptions.length > 0) {\r\n                paymentRequestData['shippingOptions'] = shippingOptions;\r\n            }\r\n            paymentRequestData['requestShipping'] = shippingOptions.length > 0;\r\n            return (paymentRequestData);\r\n        }\r\n        return ({});\r\n    }\r\n\r\n    /**\r\n     * Returns the cart total properties for the payment request object.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @abstract\r\n     * @returns {Promise<Object>}\r\n     * @example\r\n     * return\r\n     * {\r\n     *   label: \"Order Total\",\r\n     *   amount: 100,\r\n     *   isPending: false\r\n     * }\r\n     */\r\n    async total(cartData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _configLabels = _config.labels;\r\n        const object = {\r\n            label: _configLabels.TOTAL,\r\n            amount: !cartData ? 0 : cartData.cart.pricing.orderTotal.value\r\n        };\r\n        return (object);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of cart properties for the payment request object.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @abstract\r\n     * @returns {Promise<Object[]>}\r\n     * @example\r\n     * return\r\n     * [\r\n     *   {\r\n     *     label: \"Line Item Label (Product Name)\",\r\n     *     amount: 100,\r\n     *     isPending: false\r\n     *   },\r\n     *   {\r\n     *     label: \"Shipping Amount\",\r\n     *     amount: 10,\r\n     *     isPending: false\r\n     *   }\r\n     * ]\r\n     */\r\n    async displayItems(cartData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _configLabels = _config.labels;\r\n        const lineItems = [];\r\n        if (cartData && cartData.cart.lineItems && cartData.cart.lineItems.lineItem) {\r\n            for (let i = 0; i < cartData.cart.lineItems.lineItem.length; i++) {\r\n                const lineItem = cartData.cart.lineItems.lineItem[i];\r\n                lineItems.push({\r\n                    label: lineItem.product.displayName || ' ',\r\n                    amount: lineItem.pricing.salePriceWithQuantity.value\r\n                });\r\n            }\r\n        }\r\n\r\n        const discount = {\r\n            label: _configLabels.DISCOUNT,\r\n            amount: !cartData ? 0 : cartData.cart.pricing.discount.value\r\n        };\r\n\r\n        const salesTax = {\r\n            label: _configLabels.TAX,\r\n            amount: !cartData ? 0 : cartData.cart.pricing.tax.value\r\n        };\r\n\r\n        const shipping = {\r\n            label: _configLabels.ESTIMATED_SHIPPING_AND_HANDLING,\r\n            amount: !cartData ? 0 : cartData.cart.pricing.shippingAndHandling.value\r\n        };\r\n\r\n        if (discount.amount > 0) {\r\n            lineItems.push(discount);\r\n        }\r\n\r\n        if (!!cartData && typeof cartData.cart.shippingOptions.shippingOption !== UNDEFINED) {\r\n            lineItems.push(shipping);\r\n        }\r\n        if (_config.cart.displayIncludeTax !== false && salesTax.amount > 0) {\r\n            lineItems.push(salesTax);\r\n        }\r\n\r\n        return (lineItems);\r\n    }\r\n\r\n    /**\r\n     * Returns a list of shipping options for the payment request object.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @abstract\r\n     * @returns {Promise<Object[]>}\r\n     * @example\r\n     * return\r\n     * [\r\n     *   {\r\n     *     id: \"standard-shipping\",\r\n     *     label: \"Standard Shipping\",\r\n     *     amount: 0,\r\n     *     detail: \"Will arrive in 7-10 days.\"\r\n     *   },\r\n     *   {\r\n     *     id: \"overnight-shipping\",\r\n     *     label: \"Overnight Shipping\",\r\n     *     amount: 10,\r\n     *     detail: \"Will arrive tomorrow morning\"\r\n     *   }\r\n     * ]\r\n     */\r\n    async shippingOptions(cartData) {\r\n        const shippingOptions = [];\r\n        if (!!cartData && typeof cartData.cart.shippingOptions.shippingOption !== UNDEFINED) {\r\n            const shippingMethod = cartData.cart.shippingMethod;\r\n            const cartShippingValue = cartData.cart.pricing.shippingAndHandling.value;\r\n            for (let i = 0; i < cartData.cart.shippingOptions.shippingOption.length; i++) {\r\n                const shippingOption = cartData.cart.shippingOptions.shippingOption[i];\r\n                const shippingOptionObject = await this.shippingOption(shippingOption, shippingMethod, cartShippingValue);\r\n                if (shippingOptionObject) {\r\n                    shippingOptions.push(shippingOptionObject);\r\n                }\r\n            }\r\n        }\r\n        return (shippingOptions);\r\n    }\r\n\r\n    /**\r\n     * Returns the shipping option properties for the payment request object.\r\n     * @param {string} shippingOption - The shipping option from CartDataObject, e.g. cartData.cart.shippingOptions.shippingOption[idx]\r\n     * @param {string} shippingMethod - The shipping method from CartDataObject, e.g. cartData.cart.shippingMethod\r\n     * @abstract\r\n     * @returns {Promise<Object>}\r\n     * @example\r\n     * return\r\n     * {\r\n     *   id: \"standard-shipping\",\r\n     *   label: \"Standard Shipping\",\r\n     *   amount: 0,\r\n     *   detail: \"Will arrive in 7-10 days.\"\r\n     * }\r\n     */\r\n    async shippingOption(shippingOption, shippingMethod) {\r\n        const shippingOptionObject = {};\r\n        shippingOptionObject.id = shippingOption.id.toString();\r\n        shippingOptionObject.label = shippingOption.description;\r\n        shippingOptionObject.amount = shippingOption.cost.value;\r\n        shippingOptionObject.detail = '';\r\n        if (shippingOption.id === shippingMethod.code) {\r\n            shippingOptionObject.selected = true;\r\n        }\r\n        return (shippingOptionObject);\r\n    }\r\n\r\n    /**\r\n     * Creates an error object from an unsuccessful payment request.\r\n     * @param {Error} ex - The error returned from the unsuccessful payment request.\r\n     * @abstract\r\n     * @returns {Promise<ErrorObject>}\r\n     * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/reference/digital-river-payment-objects#payment-request-details-update-error-object\r\n     */\r\n    async errorObject(ex) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const errorMessage = await _cjs[UTIL].extractErrorMessage(ex);\r\n        const obj = {\r\n            status: 'failure',\r\n            error: {\r\n                message: errorMessage //_cjs[CONFIG].labels.error.PAYMENT_AUTHORIZATION_FAILED\r\n            }\r\n        };\r\n        return (obj);\r\n    }\r\n\r\n    /**\r\n     * Returns the owner properties for the payment request object.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @abstract\r\n     * @returns {Promise<PaymentService.OwnerDataObject>}\r\n     * @example\r\n     * return\r\n     * {\r\n     *   \"firstName\": \"firstName\",\r\n     *   \"lastName\": \"lastName\",\r\n     *   \"email\": \"email@email.org\",\r\n     *   \"referenceId\": \"testOrderID_payserv1\",\r\n     *   \"address\": {\r\n     *     \"line1\": \"1234 Fake St.\",\r\n     *     \"city\": \"Minnetonka\",\r\n     *     \"state\": \"MN\",\r\n     *     \"country\": \"US\",\r\n     *     \"postalCode\": \"55410\"\r\n     *   }\r\n     * }\r\n     */\r\n    async getOwner(cartData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        if (cartData && cartData.cart) {\r\n            const address = cartData.cart.billingAddress;\r\n            let emailAddress = address.emailAddress;\r\n            if (!emailAddress) {\r\n                const shopper = await _util.getCache('shopper') || await _cjs[SHOPPERAPI].getShopper();\r\n                emailAddress = shopper.shopper.emailAddress;\r\n                await _util.setCache('shopper',shopper);\r\n            }\r\n            return ({\r\n                firstName: address.firstName || '',\r\n                lastName: address.lastName || '',\r\n                phoneNumber: address.phoneNumber || '',\r\n                email: emailAddress || '',\r\n                organization: address.companyName || '',\r\n                address: {\r\n                    line1: address.line1 || '',\r\n                    line2: address.line2 || '',\r\n                    city: address.city || '',\r\n                    state: address.countrySubdivision || '',\r\n                    postalCode: address.postalCode || '',\r\n                    country: address.country || ''\r\n                },\r\n                additionalAddressInfo: {\r\n                    neighborhood: address.neighborhood || '',\r\n                    division: address.division || '',\r\n                    phoneticFirstName: address.phoneticFirstName || '',\r\n                    phoneticLastName: address.phoneticLastName || ''\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @classdesc The PaymentElement class handles additional DigitalRiver.js elements e.g. credit card number, expired year/month, CVV, bank selector, etc.\r\n * @class PaymentElement\r\n * @extends Base\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} paymentType\r\n * @param {Payment} [payment]\r\n * @returns {PaymentElement}\r\n * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/reference/elements\r\n * @category PaymentBase\r\n */\r\nclass PaymentElement extends Base {\r\n\r\n    constructor(parent, collection, name, payment) {\r\n        super(parent, Object.assign({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                createOption: true,\r\n            }\r\n        }, collection), name);\r\n\r\n        if (payment) {\r\n            Object.defineProperty(this, '_payment', {\r\n                value: payment,\r\n                configurable: false,\r\n                enumerable: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates the additional elements that need to be mounted on the page.\r\n     * @param {ShopperApi.CartDataObject} cartData\r\n     * @abstract\r\n     * @returns {Promise<PaymentElementOptions>}\r\n     */\r\n    async createOption(cartData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const country = (!!cartData && !!cartData.cart.billingAddress.country) ? cartData.cart.billingAddress.country : _config.country;\r\n        const currency = (!!cartData && !!cartData.cart.pricing.orderTotal.currency) ? cartData.cart.pricing.orderTotal.currency : _config.currency;\r\n\r\n\r\n        let options = {\r\n            style: _util.extend({}, _configPayment.style),\r\n            classes: _util.extend({}, _configPayment.classes),\r\n            [_name]: {\r\n                country: country,\r\n                currency: currency,\r\n            }\r\n        };\r\n        _util.extend(options, _configPayment.mountElement.options);\r\n\r\n        if(_configPayment.mountElement.required){\r\n            _configPayment.mountElement.required.forEach((key)=>{\r\n                if (options && (!options[_name].hasOwnProperty(key) || options[_name][key].length === 0) ) {\r\n                    options = null;\r\n                }\r\n            });\r\n        }\r\n\r\n        return options;\r\n    }\r\n}\r\n/**\r\n * @class Payments\r\n * @classdesc A container of all payments methods.\r\n * @extends Base\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {Promise<Payments>}\r\n * @category PaymentBase\r\n */\r\nclass Payments extends Base {\r\n    constructor(parent, collection) {\r\n        super(parent, collection);\r\n        const _this = this;\r\n        return (async () => {\r\n            return _this;\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Refer to PaymentMethods section for each payment method, e.g. {@link module:creditCard|creditCard}, {@link module:applePay|applePay}.\r\n     * Those setting inside {@link module:Config|Config}.\r\n     * @name this\r\n     * @type { Object.<string, Payment> }\r\n     * @memberOf Payments\r\n     * @instance\r\n     * @property {StorefrontPayment} creditCard - Credit Card Payment\r\n     * @property {ApplePay|ApplePayWeb|ApplePayGC} applePay - Apple Pay Payment\r\n     * @property {GooglePay|GooglePayWeb|GooglePayGC} googlePay - Google Pay Payment\r\n     * @property {KlarnaCredit|KlarnaCreditWeb} klarnaCredit - Klarna Credit Payment\r\n     * @property {Payment|StorefrontPayment|GlobalCommercePayment} others... - Other Payments\r\n     * @see {@tutorial payment-support-list}\r\n     */\r\n\r\n\r\n    /**\r\n     * Determines if the payment is supported or not.\r\n     * @param {string} payment - The payment name, e.g. creditCard, googlePay.\r\n     * @protected\r\n     * @returns {Promise<Boolean>}\r\n     * @example checkoutJS.payments.isSupport('creditCard');\r\n     */\r\n    async isSupportPayment(payment) {\r\n        let _cjs = this[_CHECKOUTJS];\r\n        return (!_cjs[CONFIG][PAYMENTS][payment].disable);\r\n    }\r\n}\r\n\r\nexport {\r\n    Payment,\r\n    Payments,\r\n    PaymentElement,\r\n    PaymentRequestPayload\r\n};\r\n","import {Payment, PaymentRequestPayload} from \"../payments/payment\";\r\nimport {extend, Global} from \"../util\";\r\nimport {\r\n    LOGGING,\r\n    _CHECKOUTJS,\r\n    CONFIG,\r\n    UTIL,\r\n    DRJS,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    CJS,\r\n    REQUESTPAYLOAD,\r\n    PAYMENT,\r\n    CARTDATA,\r\n    ELEMENT,\r\n    REQUISITIONID,\r\n    DISPLAYPOSTCLOUDPAYREDIRECTPAGE,\r\n    SUBMITTHENREDIRECT\r\n} from \"../keywords\";\r\n\r\nconst document = Global.document;\r\n\r\nconst requireFieldUpdate = function(){\r\n    const _this = this;\r\n    return (async () => {\r\n        await _this.destroy();\r\n        await _this.initPayment();\r\n        return _this;\r\n    })();\r\n}\r\n\r\n/**\r\n * @class StorefrontPayment\r\n * @classdesc The StorefrontPayment class is the base class for all storefront payment methods, which implements generic and reusable functions. Override the functions in this class if customizations for the payment is needed.\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType=''] - e.g. 'creditCard'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {Promise<StorefrontPayment>}\r\n * @category PaymentBase\r\n */\r\nclass StorefrontPayment extends Payment {\r\n    constructor(parent, collection, name = '', storefront = 'storefront') {\r\n        super(parent, extend({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                initPayment: true,\r\n                applySourceId: true,\r\n                createElements: true,\r\n                completeSourceId: true,\r\n                createPaymentInfo: true,\r\n                completePaymentInfo: true,\r\n                changePaymentMethod: true,\r\n                createPaymentRequest: true,\r\n                shippingAddressChange: true,\r\n                shippingOptionChange: true,\r\n                validateElements: true,\r\n                validate: true,\r\n                click: true,\r\n                cancel: true,\r\n                routing: true,\r\n                getReturnUrl: true,\r\n                getCancelUrl: true,\r\n                getGeographiesErrorMsg: true,\r\n                getCurrenciesErrorMsg: true,\r\n                getAmountErrorMsg: true\r\n            }\r\n        }, collection), name);\r\n        this[REQUESTPAYLOAD] = new PaymentRequestPayload(parent, {}, name, this);\r\n        Object.defineProperty(this, REQUESTPAYLOAD, {\r\n            enumerable: false,\r\n            configurable: false,\r\n            writable: true,\r\n        });\r\n\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        _this._storefront = _cjs[storefront];\r\n        _this._storefront._initPaymentMethod.call(_this);\r\n        Object.defineProperty(this, \"_storefront\", {\r\n            enumerable: false,\r\n            configurable: false,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    async initPayment() {\r\n        const _this = this;\r\n        const _cjs = _this[_CHECKOUTJS];\r\n        const _name = _this._name;\r\n        await _this.createElements();\r\n        _cjs[CONFIG][PAYMENTS][_name].show = true;\r\n    }\r\n\r\n    /**\r\n     * Creates the payment elements on the current page, e.g. bank selector, credit card fields, etc.\r\n     * @returns {Promise<void>}\r\n     */\r\n    async createElements() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _drjs = _cjs[DRJS];\r\n        const _element = _this[ELEMENT];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n\r\n        if(_configPayment.mountElement && !_configPayment.mountElement.disabled) {\r\n            const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n            const _storefront = _this._storefront;\r\n            const _payments = await _storefront.getPayments();\r\n            const supportedGeography = await _payments[_name].supportedGeography(cartData.cart.billingAddress.country);\r\n            if(supportedGeography) {\r\n                const elementsObj = {};\r\n                let elements = _configPayment.mountElement.elements;\r\n                let keys = Object.keys(elements);\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    const key = keys[i];\r\n                    if(elements[key].disable!==true) {\r\n                        const elementPlacement = document.getElementById(elements[key].id);\r\n                        if (elementPlacement && elementPlacement!==null) {\r\n\r\n                            const options = await _element.createOption(cartData);\r\n                            if (options) {\r\n                                const mountElement = _drjs.createElement(key, options);\r\n                                mountElement.mount(elementPlacement);\r\n                                mountElement.on('blur', _this.blur);\r\n                                mountElement.on('focus', _this.focus);\r\n                                mountElement.on('ready', _this.ready);\r\n                                mountElement.on('change', _this.change);\r\n                                mountElement.on('cancel', _this.cancel);\r\n                                mountElement.on('click', _this.click);\r\n                                elementsObj[key] = mountElement;\r\n\r\n                                _cjs.emit(LOGGING, {\r\n                                    id: _util.getTime(),\r\n                                    api: DRJS,\r\n                                    method: 'createElement',\r\n                                    type: 'options',\r\n                                    payment: key,\r\n                                    options: options,\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                await _util.setCache(_name, elementsObj);\r\n                Object.defineProperty(_configPayment, ELEMENT, {\r\n                    value: elementsObj,\r\n                    enumerable: true,\r\n                    configurable: false,\r\n                    writable: true,\r\n                });\r\n            }\r\n            if (_configPayment.mountElement.required) {\r\n                _configPayment.mountElement.required.forEach(function (key) {\r\n                    _cjs.on(key + 'Updated', requireFieldUpdate, _this);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates and validates the source for the selected payment on the current page.\r\n     * @param {Boolean} [applyToCart=true] - When this value is set to true, the source will be applied to the cart via Commerce API (Shopper API).\r\n     * @returns {Promise<PaymentSourceObject>}\r\n     */\r\n    async applySourceId(applyToCart = true) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _drjs = _cjs[DRJS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _name = this._name;\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const _payment = await _util.getValue(PAYMENT) || {};\r\n        const _storefront = this._storefront;\r\n        let source = {}, result = {}, cartData;\r\n        if (_payment && (_payment.name === _name || _configPayment.skipPaymentTypeCheck) && _payment.result && _payment.result.source && _payment.result.source.id && _payment.result.source.clientSecret) {\r\n            const _source = await _storefront.validateSource(_payment.result.source);\r\n            if(_source) {\r\n                source = _source;\r\n            }\r\n        }\r\n        if ((_configPayment.show && !_this.isReadySubmitState(source.state))) {\r\n            cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n            let sourceData = await _this[REQUESTPAYLOAD].createObject(cartData);\r\n            sourceData = await _storefront.updateSourceData(sourceData);\r\n            try {\r\n                let sourceArgs = [];\r\n                if(_configPayment.mountElement && _configPayment.element) {\r\n                    let _element = _configPayment.element;\r\n                    if( !(_element.id && _element.key) ){\r\n                        _element = Object.values(_element)[0];\r\n                    }\r\n                    sourceArgs.push(_element);\r\n                }\r\n                sourceArgs.push(sourceData);\r\n                result = await _drjs.createSource.apply(_drjs,sourceArgs);\r\n                await _util.setValue(PAYMENT, {name: _name, result: result});\r\n                if (result.source) {\r\n                    _cjs.emit(LOGGING, {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'createSource',\r\n                        type: 'options',\r\n                        payment: _name,\r\n                        options: result,\r\n                    });\r\n                    source = result.source;\r\n                    if (source) {\r\n                        if (!_this.isReadySubmitState(source.state) && source.flow === 'redirect' && source.redirect) {\r\n                            await _storefront.redirectFlow(_name, source);\r\n                            _cjs.emit(LOGGING, {\r\n                                id: _util.getTime(),\r\n                                api: CJS,\r\n                                method: 'redirectBack',\r\n                                responseBody: source\r\n                            });\r\n                            try {\r\n                                result = await _drjs.retrieveSource(source.id, source.clientSecret);\r\n                                _cjs.emit(LOGGING, {\r\n                                    id: _util.getTime(),\r\n                                    api: DRJS,\r\n                                    method: 'retrieveSource',\r\n                                    options: result\r\n                                });\r\n                                await _util.setValue(PAYMENT, {name: _name, result: result});\r\n                            } catch (ex) {\r\n                                _cjs.emit(LOGGING, {\r\n                                    id: _util.getTime(),\r\n                                    api: CJS,\r\n                                    method: 'error',\r\n                                    responseBody: JSON.stringify(ex, _util.replaceErrors, 2)\r\n                                });\r\n                                return Promise.reject(ex);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (ex) {\r\n                _cjs.emit(LOGGING, {\r\n                    id: _util.getTime(),\r\n                    api: CJS,\r\n                    method: 'error',\r\n                    responseBody: JSON.stringify(ex, _util.replaceErrors, 2)\r\n                });\r\n                return Promise.reject(ex);\r\n            }\r\n            const validated = await _this.validateInfo(cartData);\r\n            if(!validated){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (result.error) {\r\n            if (result.error.state === 'failed') {\r\n                return Promise.reject(new Error(_config.labels.error.PAYMENT_AUTHORIZATION_FAILED));\r\n            }\r\n            return Promise.reject(result);\r\n        } else if (result.source) {\r\n            source = result.source;\r\n        }\r\n        if (applyToCart) {\r\n            if (_this.isReadySubmitState(source.state)) {\r\n                await _shopperApi.applySourceToCart(source.id);\r\n            }\r\n        }\r\n        if (_configPayment.showTC) {\r\n            await _storefront.updateTC();\r\n        }\r\n        await this.completeSourceId(source);\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * This event will be triggered when the element loses focus.\r\n     * @abstract\r\n     */\r\n    async blur() {\r\n\r\n    }\r\n\r\n    /**\r\n     * This event will be triggered when the element gains focus.\r\n     * @abstract\r\n     */\r\n    async focus() {\r\n\r\n    }\r\n\r\n    /**\r\n     * This event will be triggered when the element is loaded and ready to accept an update request.\r\n     * @abstract\r\n     */\r\n    async ready() {\r\n\r\n    }\r\n\r\n    /**\r\n     * This event will be triggered when the element's state changes.\r\n     * @abstract\r\n     */\r\n    async change() {\r\n\r\n    }\r\n\r\n    /**\r\n     * This event will be triggered when the element is clicked.\r\n     * @abstract\r\n     */\r\n    async click() {\r\n\r\n    }\r\n\r\n    /**\r\n     * This event will be triggered when the element is selected.\r\n     */\r\n    async select() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        let _payment = {name: _name};\r\n        const payment = await _cjs[UTIL].getValue(PAYMENT);\r\n        if (payment && payment.name === _name) {\r\n            _payment = payment;\r\n        }\r\n        await _cjs[UTIL].setValue(PAYMENT, _payment);\r\n        return _payment;\r\n    }\r\n\r\n    /**\r\n     * This event will be triggered when the payment sheet has been cancelled.\r\n     * @abstract\r\n     */\r\n    async cancel() {\r\n\r\n    }\r\n\r\n    /**\r\n     * Modifies the payment request payload before creating the source.\r\n     * @param {PaymentRequestObject} payload\r\n     * @returns {Promise<PaymentRequestObject>}\r\n     * @abstract\r\n     */\r\n    async createPaymentRequest(payload) {\r\n        return payload;\r\n    }\r\n\r\n    /**\r\n     * Validates the payment elements.\r\n     * @returns {Promise<Boolean>}\r\n     */\r\n    async validateElements() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        let validated = true;\r\n        if (_configPayment[ELEMENT]) {\r\n            let _element = _configPayment[ELEMENT];\r\n            if(_element.id && _element.key){\r\n                _element = [_element];\r\n            }\r\n            let keys = Object.keys(_element);\r\n            for(let i=0; i<keys.length; i++){\r\n                const key = keys[i];\r\n                if(_element[key].parentNode && _element[key].parentNode.classList) {\r\n                    const _classList = _element[key].parentNode.classList;\r\n                    if (!_classList.contains(_configPayment.classes.complete)) {\r\n                        validated = false;\r\n                        _classList.add(_configPayment.classes.invalid);\r\n                    } else {\r\n                        _classList.remove(_configPayment.classes.invalid);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return validated;\r\n    }\r\n\r\n    async destroy() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _name = this._name;\r\n        const _configPayment = _config[PAYMENTS][_name];\r\n        if(_configPayment.mountElement) {\r\n            let _element = await _cjs[UTIL].getCache(_name);\r\n            try {\r\n                if (_element) {\r\n                    if(_element.id && _element.key){\r\n                        _element = [_element];\r\n                    }else{\r\n                        _element = Object.values(_element);\r\n                    }\r\n                    for (let i = 0; i < _element.length; i++) {\r\n                        if(_element[i] && _element[i].destroy){\r\n                            await _element[i].destroy();\r\n                        }\r\n                    }\r\n\r\n                    await _cjs[UTIL].removeCache(_name);\r\n                }\r\n                // eslint-disable-next-line no-empty\r\n            } catch (ex) {\r\n                console.error(ex);\r\n            }\r\n            if(_configPayment.mountElement.required) {\r\n                _configPayment.mountElement.required.forEach(function(key){\r\n                    _cjs.removeListener(key+'Updated',requireFieldUpdate);\r\n                });\r\n            }\r\n        }\r\n        _configPayment.show = false;\r\n        _configPayment[ELEMENT] = null;\r\n    }\r\n\r\n    /**\r\n     * Returns the paymentCallBack URL by default from {@link module:Config} with '?return=success' parameters.\r\n     * @see module:Config\r\n     * @returns {Promise<string>}\r\n     */\r\n    async getReturnUrl() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configUrl = _config.url;\r\n        const _configPayment = _config[PAYMENTS][_name];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        const upstreamId = cartData.cart.id;\r\n        let _url = _configUrl.paymentCallBack;\r\n        if(!_url) {\r\n            _url = document.location.href;\r\n        }else if(!_url.startsWith('http')) {\r\n            _url = [location.origin,'/',_url].join('');\r\n        }\r\n        let _href = new URL(document.location.href.split(\"#\")[0]);\r\n        let _urlParams = '?&return=success&nextUrl=';\r\n        if(_configPayment.submitThenRedirect){\r\n            _href.searchParams.set('Action',DISPLAYPOSTCLOUDPAYREDIRECTPAGE);\r\n            _href.searchParams.set(REQUISITIONID,upstreamId);\r\n            _href.searchParams.delete('id');\r\n            _urlParams = '?&return=success&flow=' + SUBMITTHENREDIRECT + '&nextUrl=';\r\n        }\r\n        const _nextUrl = _href.href;\r\n        const url = _url + _urlParams + encodeURIComponent(_nextUrl);\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * Returns the paymentCallBack URL by default from {@link module:Config} with '?return=cancel' parameters.\r\n     * @see module:Config\r\n     * @returns {Promise<string>}\r\n     */\r\n    async getCancelUrl() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _configUrl = _cjs[CONFIG].url;\r\n        let _url = _configUrl.paymentCallBack;\r\n        if(!_url) {\r\n            _url = document.location.href;\r\n        }else if(!_url.startsWith('http')) {\r\n            _url = [location.origin,'/',_url].join('');\r\n        }\r\n        const url = _url + '?&return=cancel&nextUrl='+encodeURIComponent(document.location.href.split(\"#\")[0]);\r\n        return url;\r\n    }\r\n    \r\n    /**\r\n     * Return geographies error message when geographies are NOT valid\r\n     * @returns {Promise<String>}\r\n     */\r\n    async getGeographiesErrorMsg() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _configLabels = _config.labels;\r\n        let geographiesErrorMsg = _config.labels.error['apply-payment-failure'];\r\n        return geographiesErrorMsg;\r\n    }\r\n    \r\n    /**\r\n     * Return currencies error message when currencies are NOT valid\r\n     * @returns {Promise<String>}\r\n     */\r\n    async getCurrenciesErrorMsg() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _configLabels = _config.labels;\r\n        let currenciesErrorMsg = _config.labels.error['apply-payment-failure'];\r\n        return currenciesErrorMsg;\r\n    }\r\n    \r\n    /**\r\n     * Return cart amount error message when cart amount are NOT valid (less than minimum config or more than maximum config)\r\n     * @returns {Promise<String>}\r\n     */\r\n    async getAmountErrorMsg() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _configLabels = _config.labels;\r\n        let amountErrorMsg = _config.labels.error['apply-payment-failure'];\r\n        return amountErrorMsg;\r\n    }\r\n    \r\n}\r\n\r\nexport {\r\n    StorefrontPayment,\r\n    requireFieldUpdate,\r\n};\r\n","import {_CHECKOUTJS} from \"./keywords\";\r\n\r\n/**\r\n * A collection of property behaviors associated with the base element.\r\n * @typedef BaseCollection\r\n * @memberOf Base\r\n * @type {Object}\r\n * @property {Object} collection - Example: { excludeMethods: {constructor: true}, writableMethods: { } }\r\n * @property {Object} collection.excludeMethods - Excluded properties list to Reflect.defineProperty\r\n * @property {Object} collection.writableMethods - Included properties list to writable property\r\n * @category Utility\r\n * @example\r\n * {\r\n *   excludeMethods: {constructor: true},\r\n *   writableMethods: {\r\n *     getValue: true,\r\n *     setValue: true\r\n *   }\r\n * }\r\n */\r\n\r\n/**\r\n * @class Base\r\n * @classdesc The base class handles object property descriptors: writable, enumerable, configurable.\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType=''] - The payment name.\r\n * @category Utility\r\n */\r\nclass Base{\r\n    constructor(parent, {\r\n        excludeMethods = {\r\n            constructor: true\r\n        },\r\n        writableMethods = {}\r\n    } = {},name) {\r\n        const _this = this;\r\n        const collection = {\r\n            excludeMethods:excludeMethods,\r\n            writableMethods:writableMethods\r\n        };\r\n        if(!parent){\r\n            parent = this;\r\n        }\r\n        Base.autoBind(_this,parent,collection);\r\n        if(name) {\r\n            Reflect.defineProperty(this, '_name', {\r\n                value:name,\r\n                configurable:false,\r\n                enumerable:false,\r\n            });\r\n        }\r\n        Reflect.defineProperty(this,_CHECKOUTJS,{\r\n            value:parent,\r\n            configurable:false,\r\n            enumerable:false,\r\n        });\r\n\r\n        return this;\r\n        /*\r\n        return new Proxy(this, {\r\n            set(target,name,value) {\r\n                const desc = Object.getOwnPropertyDescriptor(target, name);\r\n                if(!desc || desc.writable || desc.set){\r\n                    if (typeof value === 'function' && !Base.isIncluded(collection, 'excludeBindMethods', name)) {\r\n                        target[name] = value.bind(parent);\r\n                    } else {\r\n                        target[name] = value;\r\n                    }\r\n                }else{\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n         */\r\n    }\r\n\r\n    static autoBind(_this,parent,collection) {\r\n        collection = collection || {\r\n            excludeMethods : {\r\n                constructor: true\r\n            },\r\n            writableMethods : {}\r\n        };\r\n\r\n        let proto = Object.getPrototypeOf(_this);\r\n        let propertyNames = Object.getOwnPropertyNames(_this);\r\n        while(proto.constructor.name !== 'Object'){\r\n            propertyNames = propertyNames.concat(Object.getOwnPropertyNames(proto));\r\n            if (typeof Object.getOwnPropertySymbols === 'function') {\r\n                propertyNames = propertyNames.concat(Object.getOwnPropertySymbols(proto));\r\n            }\r\n            proto = Object.getPrototypeOf(proto);\r\n        }\r\n\r\n        for (let name of propertyNames) {\r\n            if ( !Base.isIncluded(collection,'excludeMethods',name)  ) {\r\n                /*\r\n                let desc = Object.getOwnPropertyDescriptor(_this, name);\r\n                if( (!desc || desc.writable || desc.set) && typeof _this[name] === 'function' && !Base.isIncluded(collection, 'excludeBindMethods', name))\r\n                {\r\n                    _this[name] = _this[name].bind(parent);\r\n                }\r\n                 */\r\n                Reflect.defineProperty(_this, name, {\r\n                    value: _this[name],\r\n                    enumerable: false,\r\n                    configurable: false,\r\n                    writable: Base.isIncluded(collection, 'writableMethods', name),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    static isIncluded(collection,type,methodName) {\r\n        return (collection[type][methodName] === true);\r\n    }\r\n}\r\n\r\nexport {Base};\r\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","import {Base} from './base';\r\nimport {_CHECKOUTJS, CONFIG, UTIL, SHOPPER, CJS, SHOPPERAPI, CARTDATA, PAYMENT} from \"./keywords\";\r\n\r\n/**\r\n * @class Shopper\r\n * @extends Base\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {Promise<Shopper>}\r\n * @category CommerceAPI\r\n */\r\nclass Shopper extends Base {\r\n\r\n    constructor(parent, collection) {\r\n        super(parent, Object.assign({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                getPrefix: true,\r\n                applyHeaders: true,\r\n                getAccessToken: true,\r\n                getSessionToken: true\r\n            }\r\n        }, collection));\r\n        /**\r\n         * The locale used by the shopper.\r\n         * @name locale\r\n         * @type String\r\n         * @memberOf Shopper\r\n         * @instance\r\n         * @example en_US\r\n         */\r\n        this.locale = parent[CONFIG].locale;\r\n        /**\r\n         * The currency used by the shopper.\r\n         * @name currency\r\n         * @type String\r\n         * @memberOf Shopper\r\n         * @instance\r\n         * @example USD\r\n         */\r\n        this.currency = parent[CONFIG].currency;\r\n        parent[SHOPPER] = this;\r\n        return (async () => {\r\n            const checkoutJS = await parent[UTIL].getValue(CJS);\r\n            if (checkoutJS) {\r\n                parent[UTIL].extend(parent, checkoutJS);\r\n            }\r\n            return parent[SHOPPER];\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Updates the shopper's session data from the response of a refresh request.\r\n     * @param {Object} shopper\r\n     * @param {string[]} [shopper.gcCookies] - The session cookie from Global Commerce.\r\n     * @param {Object} [shopper.sessionToken] - The access token payload.\r\n     * @param {string} [shopper.sessionToken.access_token] - The access token.\r\n     * @param {int} [shopper.sessionToken.expires_in] - The time in seconds until this token expires.\r\n     * @param {string} [shopper.sessionToken.refresh_token] - Use the refresh token to obtain new access tokens.\r\n     * @param {string} [shopper.sessionToken.token_type] - The type of token.\r\n     * @returns {Promise<void>}\r\n     * @readonly\r\n     */\r\n    async setShopper(shopper) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        try {\r\n            if(!this.locale) this.locale = _cjs[CONFIG].locale;\r\n            if(!this.currency) this.currency = _cjs[CONFIG].currency;\r\n            if (shopper && Object.keys(shopper).length > 0) {\r\n                if (typeof shopper === 'string') {\r\n                    shopper = JSON.parse(shopper);\r\n                }\r\n                if (Array.isArray(shopper.gcCookies) && shopper.gcCookies.length > 0) {\r\n                    const _cookie = {};\r\n                    shopper.gcCookies.forEach(function (part, index) {\r\n                        this[index] = this[index].split(';')[0];\r\n                        let cookieItem = this[index].split('=');\r\n                        _cookie[cookieItem[0]] = cookieItem[1];\r\n                    }, shopper.gcCookies);\r\n                    shopper.gcCookies = _cookie;\r\n                }\r\n                _cjs[UTIL].extend(_cjs[SHOPPER], shopper);\r\n                await _cjs[UTIL].setValue(CJS, _cjs.toJSON(true));\r\n                /**\r\n                 * This event will be triggered after the shopper has been updated.\r\n                 * @memberof CheckoutJS\r\n                 * @event shopperUpdated\r\n                 * @category Events\r\n                 * @example checkoutJS.on('shopperUpdated',function(shopper){\r\n                 *     console.dir(shopper);\r\n                 * })\r\n                 */\r\n                _cjs.emit ? _cjs.emit('shopperUpdated', _cjs[SHOPPER]) : null;\r\n            }\r\n        }catch(ex){\r\n            return Promise.reject(ex);\r\n        }\r\n    }\r\n\r\n    async getPrefix() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        return (_cjs[CONFIG].prefixName + _cjs[CONFIG].siteId + '_');\r\n    }\r\n\r\n    /**\r\n     * Retrieves a new access token via Commerce API for the shopper or return an existing one.\r\n     * @param {Object} [setting={}]\r\n     * @param {Boolean} setting.authentication - Set to true if an access token is required.\r\n     * @returns {Promise<string>}\r\n     */\r\n    async getAccessToken(setting={}) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopper = _cjs[SHOPPER];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        if (_shopper.sessionToken && _shopper.sessionToken.access_token) {\r\n            return _shopper.sessionToken.access_token;\r\n        }\r\n        if(setting.authentication){\r\n\r\n            if(_config.entity && _config.entity.code && _config.entity.code.length === 0 && _config.drUrl.length !== 0) {\r\n                const url = _util.parseURL(_config.drUrl);\r\n                const newUrl = _util.format(_config.url.config, {\r\n                    domain: url.hostname,\r\n                    siteId: _config.siteId\r\n                });\r\n                try {\r\n                    await _cjs[UTIL].updateConfig(newUrl, true);\r\n                }catch(ex){\r\n                    _config.drCheckoutJS = false;\r\n                }\r\n            }\r\n            let sessionToken;\r\n            if(_config.drUrl.length === 0) {\r\n                sessionToken = await _shopperApi.getShopperAccessToken();\r\n                await _cjs[SHOPPERAPI].updateShopper({},{locale:_config.locale,currency:_config.currency});\r\n            } else {\r\n                const format = (_config.page.length === 0)?'jsonp':'json';\r\n                sessionToken = await _shopperApi.getSessionToken({apiKey:_config.apiKey,format:format});\r\n            }\r\n            return (sessionToken?sessionToken.access_token:null);\r\n        }\r\n    }\r\n\r\n    async applyHeaders(options) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopper = _cjs[SHOPPER];\r\n        if(_cjs[UTIL].isNode) {\r\n            if (_shopper.gcCookies && Array.isArray(_shopper.gcCookies)) {\r\n                options.headers.Cookie = _shopper.gcCookies.join(\"; \");\r\n            } else if (_shopper.gcCookies && typeof (_shopper.gcCookies) === 'object') {\r\n                const cookies = [];\r\n                Object.entries(_shopper.gcCookies).forEach(([key, value]) => {\r\n                    cookies.push(encodeURIComponent(key)+\"=\"+encodeURIComponent(value));\r\n                });\r\n                options.headers.Cookie = cookies.join(\"; \");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroys the shopper instance.\r\n     * @param {Object} [options={}]\r\n     * @param {Boolean} [options.disableCache] - When this value is set to false, the shopper data will not be removed from the shopper instance.\r\n     * @param {Boolean} [options.disableStorage] - When this value is set to false, the shopper data will not be removed from the session storage.\r\n     * @returns {Promise<void>}\r\n     */\r\n    async destroy(options) {\r\n        options = options || {};\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        if(options.disableCache !== true) {\r\n            delete this.sessionToken;\r\n            delete this.gcCookies;\r\n            delete this.tokenInfo;\r\n            delete this.isAuthenticated;\r\n            delete this.locale;\r\n            delete this.currency;\r\n        }\r\n        if(options.disableStorage !== true) {\r\n            await _util.removeValue(CJS);\r\n            await _util.removeValue(CARTDATA);\r\n            await _util.removeValue(PAYMENT);\r\n            await _util.removeValue(`${PAYMENT}_CREATEDTYPE`);\r\n            await _util.removeValue('businessEntityCode');\r\n        }\r\n        _cjs.emit('shopperUpdated', _cjs[SHOPPER]);\r\n    }\r\n\r\n    toJSON(deep){\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const shopper = _cjs[SHOPPER];\r\n        const result = { };\r\n        for (let x in shopper) {\r\n            if (shopper.hasOwnProperty(x) && !(deep && PROTECTED_LIST.includes(x)) )\r\n            {\r\n                result[x] = shopper[x];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nconst PROTECTED_LIST = ['gcCookies'];\r\nexport {Shopper};\r\n","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","import {StorefrontPayment} from \"../payment\";\r\nimport {extend, Global} from \"../../util\";\r\nimport {\r\n    LOGGING,\r\n    _CHECKOUTJS,\r\n    DRJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    REQUESTPAYLOAD,\r\n    PAYMENT,\r\n    CARTDATA,\r\n} from \"../../keywords\";\r\nimport {$} from \"../globalCommerce\";\r\nimport {PayPalPaymentRequestPayload} from \"../../payments/payPal\";\r\n\r\nconst document = Global.document;\r\nconst name = 'payPal';\r\n\r\n/**\r\n * @class PayPalWeb\r\n * @classdesc PayPal for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='payPal'] - e.g. 'payPal'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {PayPalWeb}\r\n * @category PaymentMethods\r\n */\r\nclass PayPalWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, collection, _name?_name:name, storefront);\r\n        /**\r\n         * The PayPalPaymentRequestPayload created for PayPal.\r\n         * @name requestPayload\r\n         * @type PayPalPaymentRequestPayload\r\n         * @memberof PayPalWeb\r\n         * @instance\r\n         */\r\n        this[REQUESTPAYLOAD] = new PayPalPaymentRequestPayload(parent, {}, _name?_name:name, this);\r\n    }\r\n\r\n    async initPayment() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _util = _cjs[UTIL];\r\n        const _name = _this._name;\r\n        const _configPayment = _cjs[CONFIG].payments[_name];\r\n        const payPalModuleName = \"PAYPAL\";\r\n        let _paypal = await _util.getCache(_name);\r\n        const paypalElement = document.getElementById(_configPayment.elementId);\r\n        if (paypalElement) {\r\n            if (!_this.loading && (!Global[payPalModuleName] || !Global[payPalModuleName].Button)) {\r\n                _this.loading = true;\r\n                await _util.loadScript(_config.lib.paypal.url);\r\n            }\r\n            if (_config.page === 'ProductDetailsPage') {\r\n                await _shopperApi.addToCart();\r\n            }\r\n            if (Global.hasOwnProperty(payPalModuleName) && Global[payPalModuleName].Button && !_paypal && document.getElementById(_configPayment.elementId)) {\r\n                const payPayBtn = document.getElementById(_configPayment.elementId);\r\n                payPayBtn.innerHTML = '';\r\n                payPayBtn.classList.add(_configPayment.classes.base);\r\n                const options = extend({\r\n                    env: (_config.drjsApiKey.split('_').length === 2 ? 'production' : 'sandbox'),\r\n                    style: _configPayment.style,\r\n                    // eslint-disable-next-line no-unused-vars\r\n                    payment: async function (data, actions) {\r\n                        _util.loadingOverlay();\r\n                        await _this.click();\r\n                        let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n                        const paypalSourceData = await _this[REQUESTPAYLOAD].createObject(cartData);\r\n                        return _cjs[DRJS].createSource(paypalSourceData).then(function (result) {\r\n                            _util.setValue(PAYMENT, {name: _name, result: result});\r\n                            if (result.error) {\r\n                                _util.errorMessage(result.error)\r\n                            } else {\r\n                                return result.source[paypalSourceData.type].token;\r\n                            }\r\n                        });\r\n                    },\r\n                    // eslint-disable-next-line no-unused-vars\r\n                    onAuthorize: async function (data, actions) {\r\n                        const paypalSourceData = await _util.getValue(PAYMENT);\r\n                        return _this.completeSourceId(paypalSourceData.result.source).then(function () {\r\n                            return _this.routing();\r\n                        }).catch(function (ex) {\r\n                            _util.errorMessage(ex);\r\n                            return false;\r\n                        }).then(function (routed) {\r\n                            if (!routed) {\r\n                                _util.loadingOverlay(true);\r\n                            }\r\n                        });\r\n                        /*\r\n                        return actions.order.capture().then(function (details) {\r\n                            return _this.applyPayPalDetail(details);\r\n                        }).then(function (result) {\r\n                            return _this.completeSourceId(result.source);\r\n                        });\r\n                         */\r\n                    },\r\n                    // eslint-disable-next-line no-unused-vars\r\n                    onCancel: function (data) {\r\n                        _util.loadingOverlay(true);\r\n                        return _this.cancel();\r\n                    },\r\n                    onError: function (err) {\r\n                        _util.loadingOverlay(true);\r\n                        _util.errorMessage(err);\r\n                    }\r\n                }, _configPayment.button);\r\n                _paypal = Global[payPalModuleName].Button.render(options, '#' + _configPayment.elementId);\r\n                _cjs.emit(LOGGING, {\r\n                    id: _util.getTime(),\r\n                    api: DRJS,\r\n                    method: 'createElement',\r\n                    type: 'options',\r\n                    payment: _name,\r\n                    options: options,\r\n                });\r\n                await _util.setCache(_name, _paypal);\r\n                paypalElement.setAttribute('data-payment', _name);\r\n                _configPayment.show = true;\r\n                return _paypal;\r\n            }\r\n        }else{\r\n            _configPayment.show = true;\r\n        }\r\n    }\r\n\r\n    /*\r\n    async applyPayPalDetail(detail) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        if (detail) {\r\n            const address = [];\r\n            const payer = detail.payer;\r\n            if (payer) {\r\n                address.push({\r\n                    \"id\": 'billingAddress',\r\n                    \"firstName\": payer.name.given_name,\r\n                    \"lastName\": payer.name.surname,\r\n                    \"line1\": payer.address.address_line_1,\r\n                    \"line2\": payer.address.address_line_2,\r\n                    \"phoneNumber\": payer.phone.phone_number.national_number,\r\n                    \"city\": payer.address.admin_area_2,\r\n                    \"countrySubdivision\": payer.address.admin_area_1,\r\n                    \"postalCode\": payer.address.postal_code,\r\n                    \"country\": payer.address.country_code,\r\n                    \"emailAddress\": payer.email_address\r\n                });\r\n            }\r\n            const purchase_units = detail.purchase_units[0];\r\n            if (purchase_units.shipping) {\r\n                address.push({\r\n                    \"id\": 'shippingAddress',\r\n                    \"name\": purchase_units.shipping.name.full_name,\r\n                    \"line1\": purchase_units.shipping.address.address_line_1,\r\n                    \"line2\": purchase_units.shipping.address.address_line_2,\r\n                    \"phoneNumber\": payer.phone.phone_number.national_number,\r\n                    \"city\": purchase_units.shipping.address.admin_area_2,\r\n                    \"countrySubdivision\": purchase_units.shipping.address.admin_area_1,\r\n                    \"postalCode\": purchase_units.shipping.address.postal_code,\r\n                    \"country\": purchase_units.shipping.address.country_code,\r\n                    \"emailAddress\": payer.email_address\r\n                });\r\n            } else {\r\n                address.push();\r\n            }\r\n            if (_config.isGCPage()) {\r\n                _cjs.gC.applyAddress(address[0], address[1]);\r\n            }\r\n            await _shopperApi.applyAddressToCart(address[0], address[1]);\r\n            let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n            const validated = await _this.validateInfo(cartData);\r\n            if(!validated){\r\n                return false;\r\n            }\r\n            const payment = await _util.getValue(PAYMENT);\r\n            if (payment) {\r\n                await _shopperApi.applySourceToCart(payment.result.source.id);\r\n                return (payment.result);\r\n            }\r\n        }\r\n    }\r\n    */\r\n\r\n    async destroy() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _name = _this._name;\r\n        const _configPayment = _cjs[CONFIG].payments[_name];\r\n        const paypal = await _cjs[UTIL].getCache(_name);\r\n        if (paypal) {\r\n            if (Global.paypal && Global.paypal.Button && document.getElementById(_configPayment.elementId)) {\r\n                document.getElementById(_configPayment.elementId).innerHTML = '';\r\n            }\r\n            await _util.removeCache(_name);\r\n        }\r\n        _configPayment.show = false;\r\n        _configPayment.element = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @class PayPalGC\r\n * @classdesc PayPal for Global Commerce.\r\n * @extends PayPalWeb\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='payPal'] - e.g. 'payPal'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {PayPalGC}\r\n * @category PaymentMethods\r\n */\r\nclass PayPalGC extends PayPalWeb {\r\n\r\n    constructor(parent, collection, _name) {\r\n        super(parent, collection, _name?_name:name, 'gC');\r\n    }\r\n\r\n    // async initPayment() {\r\n    //     const _cjs = this[_CHECKOUTJS];\r\n    //     return await _cjs[PAYMENTS][name].initPayment.call(this);\r\n    // }\r\n\r\n    /*\r\n    async createPaymentInfo() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _name = this._name;\r\n        const _configPayment = _cjs[CONFIG].payments[_name];\r\n        const $paymentMethodID = $(\"#PayPalExpressCheckout\");\r\n        if ($paymentMethodID && $paymentMethodID.length) {\r\n            $paymentMethodID.attr('data-type', _name);\r\n            let _payment = (await _util.getValue(PAYMENT) || {});\r\n            if (Object.keys(_payment).length === 0) {\r\n                _payment = _cjs[CONFIG].cloudPayPayload || {};\r\n            }\r\n            if (_payment && (_payment.type === _name || _payment.name === _name)) {\r\n                let source = (_payment && _payment.result && _payment.result.source) ? _payment.result.source : _payment;\r\n                if (source && source.id) {\r\n                    if (source.clientSecret) {\r\n                        const result = await _cjs[DRJS].retrieveSource(source.id, source.clientSecret);\r\n                        await _util.setValue(PAYMENT, {name: _name, result: result});\r\n                        source = result.source;\r\n                        _cjs.emit(LOGGING, {\r\n                            id: _util.getTime(),\r\n                            api: DRJS,\r\n                            method: 'retrieveSource',\r\n                            options: result\r\n                        });\r\n                    }\r\n                    if (source && _util.isReadySubmitState(source.state)) {\r\n                        $paymentMethodID.attr('data-source-id', source.id);\r\n                    }\r\n                }\r\n                $paymentMethodID.trigger('click');\r\n            }\r\n        }\r\n        _configPayment.show = true;\r\n    }\r\n    */\r\n\r\n    async completeSourceId(/*source*/) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        if (_cjs[CONFIG][PAYMENTS][_name].showTC) {\r\n            await _cjs.storefront.updateTC();\r\n        }\r\n        await _cjs.sync();\r\n    }\r\n\r\n    async routing() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        return _cjs.gC.routing(name);\r\n    }\r\n}\r\n\r\nexport {\r\n    PayPalWeb,\r\n    PayPalGC\r\n}\r\n","import {Base} from '../base';\r\nimport {ApplePayWeb} from './payments/applePay';\r\nimport {GooglePayWeb} from './payments/googlePay';\r\nimport {PayPalWeb} from './payments/payPal';\r\nimport {KlarnaCreditWeb} from './payments/klarnaCredit';\r\nimport {AlipayWeb} from './payments/alipay';\r\nimport {MstsWeb} from \"./payments/msts\";\r\nimport {CcavenueWeb} from \"./payments/ccavenue\";\r\nimport {DropinWeb} from './payments/dropin';\r\nimport {Payments} from '../payments/payment';\r\nimport {extend, Global} from '../util';\r\nimport {\r\n    LOGGING,\r\n    _CHECKOUTJS,\r\n    DRJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    CJS,\r\n    UNDEFINED,\r\n    PAYMENT,\r\n    CARTDATA,\r\n    REDIRECT_COMPLETED,\r\n    SHOPPER,\r\n    NICKNAME\r\n} from '../keywords';\r\nimport {StorefrontPayment} from \"./payment\";\r\nimport {Compliance} from \"./compliance\";\r\n\r\n/**\r\n * @class Storefront\r\n * @classdesc The Storefront class handles the storefront layout and logic.\r\n * @extends Base\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} collection\r\n * @returns {Promise<Storefront>}\r\n * @see GlobalCommerce\r\n * @category Browser\r\n */\r\nclass Storefront extends Base {\r\n\r\n    constructor(parent, collection) {\r\n        super(parent, extend({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                validateInfo: true,\r\n                afterOverlay: true,\r\n                updateSourceData: true,\r\n                liveInstrumentOverlay: true,\r\n                createNewWindowRedirectOverlay: true,\r\n                createIframeRedirectOverlay: true,\r\n                createShopperPaymentOptionSelector: true,\r\n                updateTC: true\r\n            }\r\n        }, collection));\r\n        const _this = this;\r\n        _this['elements'] = {};\r\n        Object.defineProperty(_this, 'elements', {\r\n            enumerable: true,\r\n            configurable: false,\r\n            writable: false,\r\n        });\r\n        return (async () => {\r\n            await _this._verifySettings();\r\n            await _this.initDigitalRiverJS();\r\n            Object.defineProperties(parent, {\r\n                \"drjs\": {\r\n                    writable: true,\r\n                    enumerable: true,\r\n                    configurable: false\r\n                }\r\n            });\r\n            return _this;\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Updates the DigitalRiver.js (CloudPay) Terms and Conditions acceptance to the cart, for one-click checkout.\r\n     * @returns {Promise<CartDataObject>}\r\n     * @example checkoutJS.storefront.updateTC();\r\n     */\r\n    async updateTC() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const cloudPayTermsAcceptanceInput = document.getElementsByName('cloudPayTermsAcceptance');\r\n        let checked = false;\r\n        if (cloudPayTermsAcceptanceInput && cloudPayTermsAcceptanceInput.length && cloudPayTermsAcceptanceInput[0].checked) {\r\n            checked = true;\r\n        }\r\n        return _shopperApi.updateCart({\r\n            cart: {\r\n                termsOfSalesAcceptance: checked\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Loads and initializes the DigitalRiver.js library on the current page.\r\n     * @protected\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.storefront.initDigitalRiverJS();\r\n     */\r\n    async initDigitalRiverJS() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        if (!_cjs.drjs) {\r\n            const apiKey = _config.apiKey;\r\n            const drjsApiKey = _config.drjsApiKey ? _config.drjsApiKey : apiKey;\r\n            if (drjsApiKey) {\r\n                try {\r\n                    const options = _util.extend({}, _config.lib.drjs.options, {locale: _config.locale.replace('_', '-').toLowerCase()});\r\n                    _util.loadCss(_config.lib.drjs.css).then();\r\n                    if (typeof Global.DigitalRiver === UNDEFINED && !_config.lib.drjs.disable) {\r\n                        await _util.loadScript(_config.lib.drjs.url);\r\n                    }\r\n                    if (typeof Global.DigitalRiver !== UNDEFINED) {\r\n                        _cjs.drjs = new Global.DigitalRiver(drjsApiKey, options);\r\n                    }\r\n                } catch (ex) {\r\n                    return Promise.reject(ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes the compliance element.\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.gC.initCompliance();\r\n     */\r\n    async initCompliance() {\r\n        const _this = this;\r\n        const _cjs = _this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        let compliance = await _util.getCache('compliance');\r\n        if(!compliance && _config.entity.code) {\r\n            const _compliance = new Compliance(_cjs);\r\n            await _compliance.init();\r\n            Object.defineProperties(_this['elements'], {\r\n                'compliance': {\r\n                    value: _compliance,\r\n                    writable: true,\r\n                    enumerable: true,\r\n                    configurable: false\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validates the payment source.\r\n     * @param {PaymentSourceObject} source\r\n     * @returns {Promise<Boolean>}\r\n     * @example checkoutJS.storefront.validateSource(source);\r\n     */\r\n    async validateSource(source) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _payments = await _this.getPayments();\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        if(!source){\r\n            const _payment = (await _util.getValue(PAYMENT) || {});\r\n            if (_payment && _payment.result && _payment.result.source) {\r\n                source = _payment.result.source;\r\n            }\r\n        }\r\n        if (source && source.type && cartData && cartData.cart && cartData.cart.pricing) {\r\n            const _paymentType = await _this._getBasePaymentType(source);\r\n            const _name = await _util.getSourcePaymentType(_paymentType);\r\n            const _configPayment = _config[PAYMENTS][_name];\r\n            if (source.id && source.clientSecret) {\r\n                const result = await _cjs[DRJS].retrieveSource(source.id, source.clientSecret);\r\n                source = result.source;\r\n                await _util.setValue(PAYMENT, {name: _name, result: result});\r\n            }\r\n            const useRecurringPayment = await _util.useRecurringPayment(cartData);\r\n            const _payment = _payments[_name];\r\n            let supportedRecurringPayments = true;\r\n            let validatedInfo = true;\r\n            if(_payment instanceof Base) {\r\n                supportedRecurringPayments = await _payments[_name].supportedRecurringPayments();\r\n                validatedInfo = await _payments[_name].validateInfo(cartData);\r\n            }\r\n            if(typeof cartData.cart.paymentSession.amountRemainingToBeContributed === UNDEFINED) {\r\n                if (validatedInfo &&\r\n                    _payment.isReadySubmitState(source.state) &&\r\n                    (useRecurringPayment===false || (useRecurringPayment===true && supportedRecurringPayments===true) ) &&\r\n                    ((_configPayment.amountsEstimated!==true && parseFloat(source.amount) === parseFloat(cartData.cart.pricing.orderTotal.value)) || _configPayment.amountsEstimated===true) &&\r\n                    source.currency === cartData.cart.pricing.orderTotal.currency &&\r\n                    !(_configPayment.singleSubscriptionForRecurring && useRecurringPayment && cartData.cart.totalItemsInCart>1)\r\n                ) {\r\n                    return source;\r\n                }\r\n            } else {\r\n                if (validatedInfo &&\r\n                    _payment.isReadySubmitState(source.state) &&\r\n                    (useRecurringPayment===false || (useRecurringPayment===true && supportedRecurringPayments===true) ) &&\r\n                    ((_configPayment.amountsEstimated!==true && cartData.cart.paymentSession.amountRemainingToBeContributed.value===0) || _configPayment.amountsEstimated===true) &&\r\n                    source.currency === cartData.cart.pricing.orderTotal.currency &&\r\n                    !(_configPayment.singleSubscriptionForRecurring && useRecurringPayment && cartData.cart.totalItemsInCart>1)\r\n                ) {\r\n                    return source;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Event to trigger after the overlay is complete and about to be closed.\r\n     * @abstract\r\n     * @returns {Promise}\r\n     */\r\n    async afterOverlay() {\r\n    }\r\n\r\n    async redirectFlow(payment, source, redirectOverlay) {\r\n        const _this = this;\r\n        const _cjs = _this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        if (source && source.flow === 'redirect' && source.redirect && (['pending_redirect', 'pending_funds'].includes(source.state))) {\r\n            redirectOverlay = redirectOverlay || _util.extend({}, _config.redirectOverlay, _config.payments[payment].redirectOverlay);\r\n            if (redirectOverlay.type === 'open') {\r\n                return _this._newWindowRedirectFlow(payment, source, redirectOverlay);\r\n            } else {\r\n                return _this._iframeRedirectFlow(payment, source, redirectOverlay);\r\n            }\r\n        }\r\n        return (source);\r\n    }\r\n\r\n    async _iframeRedirectFlow(payment, source, redirectOverlay) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = payment;\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const overlay = await this.createIframeRedirectOverlay(payment, source, redirectOverlay);\r\n        return new Promise(function (resolve) {\r\n            let hasResolved = false;\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: CJS,\r\n                method: 'redirectLocation',\r\n                url: source.redirect.redirectUrl\r\n            });\r\n\r\n            const iframeResize = function () {\r\n                const padding = redirectOverlay.iframePadding;\r\n                const iframe = overlay.getElementsByTagName('iframe');\r\n                if (iframe && iframe.length) {\r\n                    iframe[0].setAttribute('height', Global.innerHeight - padding);\r\n                }\r\n            };\r\n            Global.addEventListener('resize', iframeResize, false);\r\n            iframeResize();\r\n\r\n            const message = async function (e) {\r\n                _cjs.emit(LOGGING, {\r\n                    id: _util.getTime(),\r\n                    api: CJS,\r\n                    method: 'message',\r\n                    url: e.data\r\n                });\r\n                if (e.data && e.data.sourceId && e.data.urlParams) {\r\n                    if (e.data.urlParams.return === 'success') {\r\n                        _cjs.emit(REDIRECT_COMPLETED);\r\n                    } else {\r\n                        _cjs.emit(REDIRECT_COMPLETED);\r\n                    }\r\n                }\r\n            };\r\n            Global.addEventListener('message', message, false);\r\n\r\n            const complete = function () {\r\n                if (!hasResolved) {\r\n                    hasResolved = true;\r\n\r\n                    _cjs.emit(LOGGING, {\r\n                        id: _util.getTime(),\r\n                        api: CJS,\r\n                        method: REDIRECT_COMPLETED,\r\n                        url: source.redirect.redirectUrl\r\n                    });\r\n                    if (overlay && overlay.parentNode) {\r\n                        overlay.parentNode.removeChild(overlay);\r\n                    }\r\n\r\n                    Global.removeEventListener('message', message);\r\n                    Global.removeEventListener('resize', iframeResize);\r\n\r\n                    _cjs.removeListener(REDIRECT_COMPLETED, complete);\r\n                    resolve();\r\n                }\r\n            };\r\n            _cjs.on(REDIRECT_COMPLETED, complete);\r\n\r\n            if (_config[PAYMENTS][_name].liveInstrument) {\r\n                _this.liveInstrument(_name, overlay);\r\n            }\r\n\r\n            _this.afterOverlay(_name, overlay, source);\r\n        });\r\n    }\r\n\r\n    async createIframeRedirectOverlay(payment, source, redirectOverlay) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = payment;\r\n        redirectOverlay = redirectOverlay || _cjs[UTIL].extend({}, _cjs[CONFIG].redirectOverlay, _cjs[CONFIG][PAYMENTS][_name].redirectOverlay);\r\n\r\n        const overlay = document.createElement('div');\r\n        overlay.id = redirectOverlay.id;\r\n        const container = document.createElement('div');\r\n        container.className = \"drjs_iframe\";\r\n        const style = document.createElement('style');\r\n        style.innerHTML = redirectOverlay.inlineStyle;\r\n        overlay.append(style);\r\n\r\n        if (_cjs[CONFIG][PAYMENTS][_name].preventPopupClose !== true) {\r\n            const close = document.createElement('a');\r\n            close.className = \"drjs_close\";\r\n            close.onclick = function () {\r\n                _cjs.emit(REDIRECT_COMPLETED);\r\n            };\r\n            overlay.append(close);\r\n        }\r\n\r\n        const iframe = document.createElement('iframe');\r\n        iframe.src = source.redirect.redirectUrl;\r\n        container.append(iframe);\r\n        _cjs.emit(LOGGING, {\r\n            id: _cjs[UTIL].getTime(),\r\n            api: CJS,\r\n            method: 'redirectLocation',\r\n            url: source.redirect.redirectUrl\r\n        });\r\n\r\n        overlay.append(container);\r\n        document.body.append(overlay);\r\n\r\n        return (overlay);\r\n    }\r\n\r\n    async _newWindowRedirectFlow(payment, source, redirectOverlay) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _name = payment;\r\n        const _this = this;\r\n        const overlay = await this.createNewWindowRedirectOverlay(payment, source, redirectOverlay);\r\n        return new Promise(function (resolve) {\r\n            let hasResolved = false;\r\n\r\n            const newWindowRedirectButton = function () {\r\n                _cjs.emit(LOGGING, {\r\n                    id: _util.getTime(),\r\n                    api: CJS,\r\n                    method: 'redirectLocation',\r\n                    url: source.redirect.redirectUrl\r\n                });\r\n                const opener = Global.open(source.redirect.redirectUrl);\r\n                let timer;\r\n\r\n                const checkOpener = () => {\r\n\r\n                    if (!_util.isIE()) {\r\n                        if ((!opener || opener.closed) && _config[PAYMENTS][_name].preventPopupClose !== true) {\r\n                            _cjs[DRJS].retrieveSource(source.id, source.clientSecret).then((result) => {\r\n                                if (result && result.source && _util.isChargeable(result.source.state)) {\r\n                                    cancelAnimationFrame(timer);\r\n                                    source = result.source;\r\n                                    _cjs.emit(REDIRECT_COMPLETED, opener);\r\n                                }\r\n                            });\r\n                        } else {\r\n                            timer = requestAnimationFrame(checkOpener);\r\n                        }\r\n                    } else {\r\n                        _cjs[DRJS].retrieveSource(source.id, source.clientSecret).then((result) => {\r\n                            if (result && result.source && _util.isChargeable(result.source.state)) {\r\n                                cancelAnimationFrame(timer);\r\n                                source = result.source;\r\n                                _cjs.emit(REDIRECT_COMPLETED, opener);\r\n                            } else {\r\n                                setTimeout(function () {\r\n                                    timer = requestAnimationFrame(checkOpener);\r\n                                }, _config.redirectOverlay.timeout);\r\n                            }\r\n                        }).catch(() => {\r\n                            setTimeout(function () {\r\n                                timer = requestAnimationFrame(checkOpener);\r\n                            }, _config.redirectOverlay.timeout);\r\n                        });\r\n                    }\r\n                };\r\n                checkOpener();\r\n\r\n                const message = async function (e) {\r\n                    _cjs.emit(LOGGING, {\r\n                        id: _util.getTime(),\r\n                        api: CJS,\r\n                        method: 'message',\r\n                        url: e.data\r\n                    });\r\n                    if (e.data && e.data.sourceId && e.data.urlParams) {\r\n                        if (e.data.urlParams.return === 'success') {\r\n                            clearInterval(timer);\r\n                            _cjs.emit(REDIRECT_COMPLETED, opener);\r\n                        } else {\r\n                            _cjs.emit(REDIRECT_COMPLETED, opener);\r\n                        }\r\n                        Global.removeEventListener('message', message);\r\n                    }\r\n                };\r\n                Global.addEventListener('message', message, false);\r\n            };\r\n            _cjs.on('newWindowRedirectButton', newWindowRedirectButton);\r\n\r\n            const complete = function (opener) {\r\n                if (!hasResolved) {\r\n                    hasResolved = true;\r\n\r\n                    _cjs.emit(LOGGING, {\r\n                        id: _util.getTime(),\r\n                        api: CJS,\r\n                        method: REDIRECT_COMPLETED,\r\n                        responseBody: source\r\n                    });\r\n\r\n                    if (opener) {\r\n                        opener.close();\r\n                    }\r\n                    if (overlay && overlay.parentNode) {\r\n                        overlay.parentNode.removeChild(overlay);\r\n                    }\r\n\r\n                    _cjs.removeListener(REDIRECT_COMPLETED, complete);\r\n                    _cjs.removeListener('newWindowRedirectButton', newWindowRedirectButton);\r\n                    resolve();\r\n                }\r\n            };\r\n\r\n            _cjs.on(REDIRECT_COMPLETED, complete);\r\n\r\n            if (_config[PAYMENTS][_name].liveInstrument) {\r\n                _this.liveInstrument(_name, overlay);\r\n            }\r\n\r\n            _this.afterOverlay(_name, overlay, source);\r\n        });\r\n    }\r\n\r\n    async createNewWindowRedirectOverlay(payment, source, redirectOverlay) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _name = payment;\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        redirectOverlay = redirectOverlay || _util.extend({}, _config.redirectOverlay, _configPayment.redirectOverlay);\r\n\r\n        const overlay = document.createElement('div');\r\n        overlay.id = redirectOverlay.id;\r\n        const container = document.createElement('div');\r\n        container.className = \"drjs_open\";\r\n        const style = document.createElement('style');\r\n        style.innerHTML = redirectOverlay.inlineStyle;\r\n        overlay.append(style);\r\n\r\n        if (_configPayment.preventPopupClose !== true) {\r\n            const close = document.createElement('a');\r\n            close.className = \"drjs_close\";\r\n            close.onclick = function () {\r\n                _cjs.emit(REDIRECT_COMPLETED);\r\n            };\r\n            overlay.append(close);\r\n        }\r\n\r\n        const title = document.createElement('h4');\r\n        const redirectNotice = _util.format(_config.labels.PMT_REDIRECT_NOTICE, {\r\n            '0': `<span class='drjs_${_name}'>${_configPayment.name}</span>`\r\n        });\r\n        title.innerHTML = redirectNotice;\r\n        container.append(title);\r\n\r\n        const button = document.createElement('button');\r\n        button.className = redirectOverlay.buttonClass;\r\n        button.id = 'drjs_clickhere';\r\n        button.appendChild(document.createTextNode(_config.labels.CLICKHERE));\r\n        button.onclick = function () {\r\n            if (_configPayment.oneTimeRedirect) {\r\n                button.disabled = true;\r\n            }\r\n            _cjs.emit('newWindowRedirectButton',{\r\n                payment:payment,\r\n                source:source,\r\n            });\r\n        };\r\n        container.append(button);\r\n\r\n        overlay.append(container);\r\n        document.body.append(overlay);\r\n        _util.loadingOverlay(true);\r\n\r\n        return (overlay);\r\n    }\r\n\r\n    /**\r\n     * Triggers the pending funds redirect flow on the order complete or thank you page.\r\n     * @returns {Promise<PaymentObject>}\r\n     * @example checkoutJS.storefront.pendingFundsRedirectFlow();\r\n     */\r\n    async pendingFundsRedirectFlow(source) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _util = _cjs[UTIL];\r\n        const _drjs = _cjs[DRJS];\r\n        const _payment = await this.getSelectedPayment();\r\n        if(!source) {\r\n            source = await _this.getSelectedSource();\r\n        }\r\n        if (source && source.flow === 'redirect' && source.redirect) {\r\n            let state = source.state;\r\n            if(source.sessionId && source.upstreamId) {\r\n                const order = await _shopperApi.getOrder(source.upstreamId);\r\n                if(order && order.order.paymentSession) {\r\n                    state = order.order.paymentSession.status;\r\n                }\r\n            }\r\n\r\n            if(state === 'pending_funds') {\r\n                source.state = state;\r\n                let _type = _util.getSourcePaymentType(source.type);\r\n                await this.redirectFlow(_type, source);\r\n                let result = await _drjs.retrieveSource(source.id, source.clientSecret);\r\n                await _util.setValue(PAYMENT, {name: _type, result: result});\r\n                return result;\r\n            }\r\n        }\r\n        return _payment;\r\n    }\r\n\r\n    /**\r\n     * Triggers the pending funds receiver flow on the order complete or thank you page.\r\n     * @returns {Promise<PaymentObject>}\r\n     * @example checkoutJS.storefront.pendingFundsReceiver();\r\n     */\r\n    async pendingFundsReceiver(source) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _payment = await _this.getSelectedPayment();\r\n        if(!source) {\r\n            source = await _this.getSelectedSource();\r\n        }\r\n        if (source && source.flow === 'receiver') {\r\n            let state = source.state;\r\n            let order;\r\n            if(source.sessionId && source.upstreamId) {\r\n                order = await _shopperApi.getOrder(source.upstreamId);\r\n                if(order && order.order.paymentSession) {\r\n                    state = order.order.paymentSession.status;\r\n                }\r\n            }\r\n            if(state === 'pending_funds') {\r\n                const elementPlacement = document.getElementById(_cjs[CONFIG].elements.pendingFundsInstruction.elementId);\r\n                if (elementPlacement) {\r\n                    const template = await _this.getPendingFundsInstruction(order);\r\n                    elementPlacement.innerHTML = template;\r\n                }\r\n            }\r\n        }\r\n        return _payment;\r\n    }\r\n\r\n    /**\r\n     * Returns the instruction HTML from pending fund payments, which may be shown on order complete or thank you page.\r\n     * @protected\r\n     * @returns {Promise<string>}\r\n     * @example checkoutJS.storefront.getPendingFundsInstruction();\r\n     *\r\n     */\r\n    async getPendingFundsInstruction(order) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _payment = (await _util.getValue(PAYMENT) || {});\r\n        if (_payment.result && _payment.result.source) {\r\n            const _configPayment = _config[PAYMENTS][_payment.name];\r\n            if(!order) {\r\n                order = await _shopperApi.getOrder(_payment.result.source.upstreamId);\r\n            }\r\n            const payload = _util.extend({},_payment.result.source,order);\r\n            let pendingFunds;\r\n            if(_configPayment.template && _configPayment.template.pendingFunds) {\r\n                pendingFunds = _configPayment.template.pendingFunds;\r\n            }\r\n            if(!pendingFunds) {\r\n                try {\r\n                    const _textAttributeName = 'PMS_' + _payment.name.toUpperCase() + '_INSTRUCTION'\r\n                    const attr = await _shopperApi.getText(_textAttributeName);\r\n                    if(attr.attribute){\r\n                        pendingFunds = attr.attribute.value;\r\n                    }\r\n                    // eslint-disable-next-line no-empty\r\n                }catch(ex){\r\n\r\n                }\r\n            }\r\n            if(pendingFunds) {\r\n                let text = _util.format(pendingFunds, payload);\r\n                return _util.removeTag(text, _config.elements.pendingFundsInstruction.emptyValueSelector);\r\n            }\r\n            return JSON.stringify(_payment.result.source[_payment.name], _util.replaceErrors, 2);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the selected payment.\r\n     * @protected\r\n     * @returns {Promise<PaymentObject>}\r\n     * @example checkoutJS.storefront.getSelectedPayment();\r\n     */\r\n    async getSelectedPayment() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        //const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        let _payment = (await _util.getValue(PAYMENT) || {});\r\n        return _payment;\r\n    }\r\n\r\n    async getSelectedSource() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _drjs = _cjs[DRJS];\r\n        const _payment = await this.getSelectedPayment();\r\n        let _source = _payment.result ? _payment.result.source : {};\r\n        if(_source.id && _source.clientSecret) {\r\n            let result = await _drjs.retrieveSource(_source.id, _source.clientSecret);\r\n            let _type = _util.getSourcePaymentType(result.source.type);\r\n            await _util.setValue(PAYMENT, {name: _type, result: result});\r\n            return result.source;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the Payments object from the checkoutJS instance.\r\n     * @protected\r\n     * @returns {Promise<Payments>}\r\n     * @example checkoutJS.storefront.getPayments();\r\n     */\r\n    async getPayments() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        return _cjs[PAYMENTS];\r\n    }\r\n\r\n    /**\r\n     * Updates the payment request source before creating the source from DigitalRiver.js.\r\n     * @param {PaymentRequestObject} sourceData\r\n     * @returns {Promise<PaymentRequestObject>}\r\n     * @example checkoutJS.gC.updateSourceData(source);\r\n     */\r\n    async updateSourceData(sourceData) {\r\n        return sourceData;\r\n    }\r\n\r\n    async liveInstrument(payment, overlay) {\r\n        return overlay;\r\n    }\r\n\r\n    async createShopperPaymentOptionSelector() {\r\n\r\n    }\r\n\r\n    async createPaymentOptionToShopper() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopper = _cjs[SHOPPER];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _util = _cjs[UTIL];\r\n        const _payment = await _util.getValue(PAYMENT);\r\n        const nickName = await _util.getValue(NICKNAME);\r\n        if(_shopper.isAuthenticated && _payment && _payment.result && nickName) {\r\n\r\n            let _paymentType = await _this._getBasePaymentType(_payment.result.source);\r\n            if(_config[PAYMENTS][_paymentType].supportedRecurringPayments && _config[PAYMENTS][_paymentType].saveAsPaymentOption!==false && _util.isChargeable(_payment.result.source.state)){\r\n                const sourceId = _payment.result.source.id;\r\n                await _shopperApi.applySourceToShopper(sourceId,nickName);\r\n                await _util.removeValue(NICKNAME);\r\n                const result = await _shopperApi.getPaymentOptions();\r\n                if(result && result.paymentOptions && result.paymentOptions.paymentOption){\r\n                    return result.paymentOptions.paymentOption.find((item)=>item.sourceId === sourceId);\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    async _createPayments(parent) {\r\n        const _cjs = parent;\r\n        /**\r\n         * All enabled payment instances e.g. creditCard, applePay, googlePay.\r\n         * @name payments\r\n         * @type Payments\r\n         * @memberof CheckoutJS\r\n         * @instance\r\n         * @readonly\r\n         * @see {@tutorial payment-support-list}\r\n         */\r\n        const _payments = _cjs[PAYMENTS] = await new Payments(parent);\r\n        for (let payment in _cjs[CONFIG][PAYMENTS]) {\r\n            if (_cjs[CONFIG][PAYMENTS].hasOwnProperty(payment) && !_cjs[CONFIG][PAYMENTS][payment].disable) {\r\n                try {\r\n                    switch (payment) {\r\n                        case 'applePay':\r\n                            _payments[payment] = new ApplePayWeb(_cjs);\r\n                            break;\r\n                        case 'googlePay':\r\n                            _payments[payment] = new GooglePayWeb(_cjs);\r\n                            break;\r\n                        case 'payPal':\r\n                            _payments[payment] = new PayPalWeb(_cjs);\r\n                            break;\r\n                        case 'dropin':\r\n                            _payments[payment] = new DropinWeb(_cjs);\r\n                            break;\r\n                        case 'klarnaCredit':\r\n                            _payments[payment] = new KlarnaCreditWeb(_cjs, {}, payment);\r\n                            break;\r\n                        case 'alipay':\r\n                            _payments[payment] = new AlipayWeb(_cjs, {}, payment);\r\n                            break;\r\n                        case 'msts':\r\n                            _payments[payment] = new MstsWeb(_cjs, {}, payment);\r\n                            break;\r\n                        case 'ccavenue':\r\n                            _payments[payment] = new CcavenueWeb(_cjs, {}, payment);\r\n                            break;\r\n                        default:\r\n                            _payments[payment] = new StorefrontPayment(_cjs, {}, payment);\r\n                            break;\r\n                    }\r\n                    const prop = {};\r\n                    prop[payment] = {\r\n                        writable: true,\r\n                        enumerable: _cjs[CONFIG][PAYMENTS][payment].enumerable !== false,\r\n                        configurable: false\r\n                    };\r\n                    Object.defineProperties(_payments, prop);\r\n                } catch (ex) {\r\n                    await _cjs[UTIL].errorMessage(ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async _initPayments() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _payments = _cjs[PAYMENTS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        if (_cjs[DRJS]) {\r\n            const initPaymentItems = [];\r\n            for (let payment in _config[PAYMENTS]) {\r\n                if (_cjs[PAYMENTS][payment] instanceof Base) {\r\n                    initPaymentItems.push((async ()=> {\r\n                        const _configPayment = _cjs[CONFIG][PAYMENTS][payment];\r\n                        const supportedCurrency = await _payments[payment].supportedCurrency();\r\n                        const supportedRecurringPayments = await _payments[payment].supportedRecurringPayments();\r\n                        const supportedGeography = await _payments[payment].supportedGeography(cartData.cart.billingAddress.country);\r\n                        const supportedSettings = await _payments[payment].supportedSettings();\r\n                        if (_payments.hasOwnProperty(payment) && _payments[payment] && supportedCurrency && supportedRecurringPayments && supportedSettings && _configPayment.supported !== false) {\r\n                            try {\r\n                                if (_payments[payment].initPaymentBefore) {\r\n                                    await _payments[payment].initPaymentBefore(payment);\r\n                                }\r\n                                await _payments[payment].initPayment(payment);\r\n                                if (_payments[payment].initPaymentAfter) {\r\n                                    await _payments[payment].initPaymentAfter(payment);\r\n                                }\r\n                            } catch (ex) {\r\n                                await _util.errorMessage(ex);\r\n                            }\r\n                        } else {\r\n                            _configPayment.show = false;\r\n                        }\r\n                        _configPayment.supported = supportedCurrency && supportedRecurringPayments && supportedGeography && supportedSettings;\r\n                    })());\r\n                }\r\n            }\r\n            await Promise.all(initPaymentItems);\r\n        }\r\n    }\r\n\r\n    async _destroyPayments() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        for (let payment in _cjs[CONFIG][PAYMENTS]) {\r\n            const _configPayment = _cjs[CONFIG][PAYMENTS][payment];\r\n            if (_cjs[PAYMENTS].hasOwnProperty(payment) && _cjs[PAYMENTS][payment] && _cjs[PAYMENTS][payment].destroy) {\r\n                try {\r\n                    await _cjs[PAYMENTS][payment].destroy(payment);\r\n                } catch (ex) {\r\n                    await _cjs[UTIL].errorMessage(ex);\r\n                }\r\n            }\r\n            _configPayment.show = false;\r\n            _configPayment.supported = UNDEFINED;\r\n        }\r\n    }\r\n\r\n    async _initPaymentMethod() {\r\n\r\n    }\r\n\r\n    async _verifySettings() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        if (_config.siteId.length === 0 ||\r\n            _config.locale.length === 0 ||\r\n            _config.currency.length === 0\r\n        ) {\r\n            const siteData = await _cjs[SHOPPERAPI].getSiteInfo();\r\n            _config.siteId = siteData.site.id;\r\n            _config.locale = siteData.site.defaultLocale;\r\n            const localOption = siteData.site.localeOptions.localeOption.filter(function (localOption) {\r\n                return localOption.locale === siteData.site.defaultLocale\r\n            });\r\n            if (localOption && localOption.length) {\r\n                _config.currency = localOption[0].primaryCurrency;\r\n            }\r\n        }\r\n    }\r\n\r\n    async _getBasePaymentType(source) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const createdType = await _util.getValue(`${PAYMENT}_CREATEDTYPE`) || false;\r\n        if(createdType && createdType.id === source.id) return createdType.name;\r\n        return source.type;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {Storefront};\r\n\r\n\r\n","import {StorefrontPayment} from \"../payment\";\r\nimport {Global} from \"../../util\";\r\nimport {\r\n    LOGGING,\r\n    _CHECKOUTJS,\r\n    DRJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    UNDEFINED,\r\n    REQUESTPAYLOAD,\r\n    FAIL_TO_APPLY_SOURCE,\r\n    PAYMENT,\r\n    CARTDATA\r\n} from \"../../keywords\";\r\nimport {$} from \"../globalCommerce\";\r\n\r\nconst document = Global.document;\r\n\r\nconst name = 'applePay';\r\n\r\n/**\r\n * @class ApplePayWeb\r\n * @classdesc Apple Pay for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='applePay'] - e.g. 'applePay'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {ApplePayWeb}\r\n * @category PaymentMethods\r\n */\r\nclass ApplePayWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, collection, name, storefront);\r\n    }\r\n\r\n    async initPayment() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        const _drjs = _cjs[DRJS];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n\r\n        const applePayElement = document.getElementById(_configPayment.elementId);\r\n        let applepay = await _util.getCache(name);\r\n        if (applePayElement != null && Global.ApplePaySession) {\r\n            const _applePay = _this;\r\n\r\n            let paymentRequestData = await _this[REQUESTPAYLOAD].createObject(cartData);\r\n\r\n            paymentRequestData.style = _configPayment.style;\r\n            paymentRequestData.classes = _configPayment.classes;\r\n            paymentRequestData.waitOnClick = true;\r\n            paymentRequestData = await _applePay.createPaymentRequest(paymentRequestData, 'initialized');\r\n\r\n            const applePaymentRequestData = _drjs.paymentRequest(paymentRequestData);\r\n            applepay = _drjs.createElement(\"applepay\", applePaymentRequestData);\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createElement',\r\n                type: 'options',\r\n                payment: name,\r\n                options: applePaymentRequestData,\r\n            });\r\n            await _util.setCache(name, applepay);\r\n\r\n            if (applepay != null && await applepay.canMakePayment()) {\r\n                applepay.mount(_configPayment.elementId);\r\n\r\n                applepay.on('source', function (event) {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'source',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    const applySourceId = _applePay.applySourceId.bind(_applePay);\r\n                    const completeSourceId = _applePay.completeSourceId.bind(_applePay);\r\n                    if (typeof applySourceId !== 'function') {\r\n                        return;\r\n                    }\r\n                    applySourceId(event)\r\n                        .then(function (source) {\r\n                            if(source) {\r\n                                event.complete('success');\r\n                            }else{\r\n                                event.complete('error');\r\n                            }\r\n                        }).then(async function () {\r\n                        if (_configPayment.showTC) {\r\n                            return await _cjs.storefront.updateTC();\r\n                        }\r\n                    }).then(function () {\r\n                        return completeSourceId.apply(_cjs, event);\r\n                    }).then(function () {\r\n                        return _applePay.routing();\r\n                    }).catch(function (ex) {\r\n                        _util.errorMessage(ex);\r\n                        event.complete('error');\r\n                        return false;\r\n                    }).then(function(routed){\r\n                        if(!routed) {\r\n                            _util.loadingOverlay(true);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                applepay.on('shippingaddresschange', function (event) {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'shippingaddresschange',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    const shippingAddress = event.shippingAddress;\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(shippingAddress, 'shippingAddress')\r\n                        .then(function (shopperApiShippingAddress) {\r\n                            if (_util.isGCPage()) {\r\n                                _cjs.gC.applyShippingCountry(shopperApiShippingAddress.country);\r\n                                _cjs.gC.applyAddress(shopperApiShippingAddress);\r\n                            }\r\n                            return _shopperApi.applyAddressToCart(null, shopperApiShippingAddress);\r\n                        }).then(async function (response) {\r\n                        let updateObject = await _applePay.createPaymentRequest(await _applePay[REQUESTPAYLOAD].updateObject(response), 'shippingaddresschange');\r\n                        return _applePay.shippingAddressChange(updateObject).then(function () {\r\n                            log.update = updateObject;\r\n                            _cjs.emit(LOGGING, log);\r\n                            event.updateWith(updateObject);\r\n                        });\r\n                    }).catch(async function (ex) {\r\n                        let updateObject = await _applePay.createPaymentRequest(await _applePay[REQUESTPAYLOAD].errorObject(ex), 'shippingaddresschange');\r\n                        log.update = updateObject;\r\n                        _cjs.emit(LOGGING, log);\r\n                        event.updateWith(updateObject);\r\n                    });\r\n                });\r\n\r\n                applepay.on('shippingoptionchange', function (event) {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'shippingoptionchange',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    const shippingOption = event.shippingOption;\r\n                    const shippingOptionId = shippingOption.id;\r\n                    _shopperApi.updateSelectedShippingMethodOnCart(shippingOptionId)\r\n                        .then(async function (response) {\r\n                            if (_util.isGCPage()) {\r\n                                _cjs.gC.applyShippingOption(shippingOptionId);\r\n                            }\r\n                            const updateObject = await _applePay.createPaymentRequest(await _applePay[REQUESTPAYLOAD].updateObject(response), 'shippingoptionchange');\r\n                            _applePay.shippingOptionChange(updateObject).then(function () {\r\n                                log.update = updateObject;\r\n                                _cjs.emit(LOGGING, log);\r\n                                event.updateWith(updateObject);\r\n                            }).catch(async function (ex) {\r\n                                const updateObject = await _applePay.createPaymentRequest(await _applePay[REQUESTPAYLOAD].errorObject(ex), 'shippingoptionchange');\r\n                                log.update = updateObject;\r\n                                _cjs.emit(LOGGING, log);\r\n                                event.updateWith(updateObject);\r\n                            });\r\n                        });\r\n                });\r\n\r\n                applepay.on('click', (event) => {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'click',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    _util.loadingOverlay();\r\n                    _applePay.click().then(function () {\r\n                        if (_config.page === 'ProductDetailsPage') {\r\n                            return _shopperApi.addToCart().then(async function (response) {\r\n                                const updateObject = await _applePay.createPaymentRequest(await _applePay[REQUESTPAYLOAD].updateObject(response), 'click');\r\n                                log.update = updateObject;\r\n                                _cjs.emit(LOGGING, log);\r\n                                event.updateWith(updateObject);\r\n                            });\r\n                        } else {\r\n                            return _shopperApi.getCart().then(async function (response) {\r\n                                const updateObject = await _applePay.createPaymentRequest(await _applePay[REQUESTPAYLOAD].updateObject(response), 'click');\r\n                                log.update = updateObject;\r\n                                _cjs.emit(LOGGING, log);\r\n                                event.updateWith(updateObject);\r\n                            });\r\n                        }\r\n                    }).catch(function (ex) {\r\n                        _util.loadingOverlay(true);\r\n                        _util.errorMessage(ex);\r\n                    });\r\n                });\r\n\r\n                applepay.on('cancel', function (event) {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'cancel',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    _util.loadingOverlay(true);\r\n                    return _applePay.cancel();\r\n                });\r\n                applePayElement.setAttribute('data-payment', name)\r\n                applePayElement.classList.add(_configPayment.classes.base);\r\n                applePayElement.setAttribute('tabindex', '0');\r\n                applePayElement.setAttribute('role', 'button');\r\n                applePayElement.onclick = (event)=>{\r\n                    event.preventDefault();\r\n                    applepay.show();\r\n                };\r\n                applePayElement.onkeydown = (event)=> {\r\n                    if (event.key === \" \" || event.key === 'Enter' || event.key === 'Spacebar') {\r\n                        event.preventDefault();\r\n                        applepay.show();\r\n                    }\r\n                };\r\n                _configPayment.show = true;\r\n                Object.defineProperty(_configPayment, 'element', {\r\n                    value: applepay,\r\n                    enumerable: true,\r\n                    configurable: false,\r\n                    writable: true,\r\n                });\r\n                return applepay;\r\n            } else {\r\n                _configPayment.supported = false;\r\n                if (applePayElement && applePayElement.remove) {\r\n                    applePayElement.remove();\r\n                }\r\n            }\r\n        } else {\r\n            _configPayment.supported = false;\r\n        }\r\n    }\r\n\r\n    async applySourceId() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const event = arguments[0];\r\n        if (event) {\r\n            const source = event.source;\r\n            //let billingAddress = _shopperApi.convertPaymentRequestAddressToShopperApiAddress(event.billingAddress,'billingAddress');\r\n            //let shippingAddress = _shopperApi.convertPaymentRequestAddressToShopperApiAddress(event.shippingAddress,'shippingAddress');\r\n            //let contactInformation = event.contactInformation;\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createSource',\r\n                type: 'options',\r\n                payment: name,\r\n                options: source,\r\n            });\r\n            if (source && source.id) {\r\n                await _util.setValue(PAYMENT, {name: name, result: event});\r\n                const address = await Promise.all([\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(Object.assign(event.billingAddress, event.contactInformation), 'billingAddress'),\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(event.shippingAddress, 'shippingAddress'),\r\n                ]);\r\n                //_cjs.gC.applyAddress(address[0], address[1]);\r\n                await _shopperApi.applyAddressToCart(address[0], address[1]);\r\n                const response = await _shopperApi.applySourceToCart(source.id);\r\n                let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n                const validated = await _this.validateInfo(cartData);\r\n                if(!validated){\r\n                    return false;\r\n                }\r\n                if (response && response.cart && typeof response.cart.paymentMethod !== UNDEFINED) {\r\n                    return Promise.resolve([source, response]);\r\n                } else {\r\n                    return Promise.reject(FAIL_TO_APPLY_SOURCE);\r\n                }\r\n            } else if (event.error) {\r\n                return Promise.reject(event.error);\r\n            }\r\n        }\r\n        const paymentSource = await this.select();\r\n        if (paymentSource && paymentSource.result && paymentSource.result.source) {\r\n            return paymentSource.result.source;\r\n        }\r\n    }\r\n\r\n    async shippingAddressChange(updateObject) {\r\n        return (updateObject);\r\n    }\r\n\r\n    async shippingOptionChange(updateObject) {\r\n        return (updateObject);\r\n    }\r\n\r\n    async destroy() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _configPayment = _cjs[CONFIG].payments[name];\r\n        const applepay = await _util.getCache(name);\r\n        if (applepay) {\r\n            await applepay.destroy();\r\n            await _util.removeCache(name);\r\n        }\r\n        _configPayment.show = false;\r\n        _configPayment.element = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @class ApplePayGC\r\n * @classdesc Apple Pay for Global Commerce storefronts.\r\n * @extends ApplePayWeb\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='applePay'] - e.g. 'applePay'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {ApplePayGC}\r\n * @category PaymentMethods\r\n */\r\nclass ApplePayGC extends ApplePayWeb {\r\n\r\n    constructor(parent, collection) {\r\n        super(parent, collection, name, 'gC');\r\n        return this;\r\n    }\r\n\r\n    async initPayment() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        const _promise = await _cjs[PAYMENTS][name].initPayment.call(this);\r\n        // eslint-disable-next-line no-empty\r\n        if (_configPayment.showTC === true) {\r\n\r\n        }\r\n        return _promise;\r\n    }\r\n\r\n    async applySourceId() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const event = arguments[0];\r\n        if (event) {\r\n            const source = event.source;\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createSource',\r\n                type: 'options',\r\n                payment: name,\r\n                options: source,\r\n            });\r\n            if (source && source.id) {\r\n                await _util.setValue(PAYMENT, {name: name, result: event});\r\n                const address = await Promise.all([\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(Object.assign(event.billingAddress, event.contactInformation), 'billingAddress'),\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(event.shippingAddress, 'shippingAddress')\r\n                ]);\r\n                _cjs.gC.applyAddress(address[0], address[1]);\r\n                await _shopperApi.applyAddressToCart(address[0], address[1]);\r\n                const response = await _shopperApi.applySourceToCart(source.id);\r\n                let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n                const validated = await _this.validateInfo(cartData);\r\n                if(!validated){\r\n                    return false;\r\n                }\r\n                await _cjs.sync();\r\n                return Promise.resolve([source, response]);\r\n            } else if (event.error) {\r\n                return Promise.reject(event.error);\r\n            }\r\n        }\r\n        const paymentSource = await this.select();\r\n        if (paymentSource && paymentSource.result && paymentSource.result.source) {\r\n            return paymentSource.result.source;\r\n        }\r\n    }\r\n\r\n    async changePaymentMethod() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _configPayment = _cjs[CONFIG].payments[name];\r\n        const _selector = _cjs[CONFIG].selector;\r\n        const selectedPayment = await _cjs.gC.getSelectedCloudPayPayment();\r\n        let $elementBtn = $(\"#\" + _cjs[CONFIG].payments[name].elementId);\r\n        let $elementVisible = $elementBtn;\r\n        if ($elementBtn.data('parent') && $elementBtn.length) {\r\n            if ($elementBtn.data('parent')[0] !== $elementBtn[0]) {\r\n                $elementVisible = $elementBtn.data('parent').add($elementBtn);\r\n            }\r\n            $elementBtn = $elementBtn.data('parent');\r\n        }\r\n        if (selectedPayment === name) {\r\n            if (!$(\"input[name='paymentMethodID'][data-type='\" + name + \"']\").attr('data-source-id')) {\r\n                if (_config.page === 'QuickBuyCartPage') {\r\n                    $elementBtn.before(\"<span id='\" + _configPayment.elementId + \"PlaceHolder'></span>\").insertBefore(_selector.checkoutBtn);\r\n                } else if (_config.page === 'ThreePgCheckoutAddressPaymentInfoPage') {\r\n                    $elementVisible.removeClass('hidden');\r\n                }\r\n                await _cjs.gC.checkTC($(_selector.checkoutForm).find(_selector.cloudPayTCContainer));\r\n                $(_selector.checkoutBtn).addClass('hidden');\r\n            } else {\r\n                if (_config.page === 'ThreePgCheckoutAddressPaymentInfoPage') {\r\n                    $(_selector.checkoutBtn).removeClass('hidden');\r\n                    $elementVisible.css('display', 'none');\r\n                }\r\n            }\r\n        } else {\r\n            if (_config.page === 'QuickBuyCartPage') {\r\n                const placeHolder$ = $(\"#\" + _configPayment.elementId + \"PlaceHolder\");\r\n                if (placeHolder$.length) {\r\n                    placeHolder$.replaceWith($elementBtn);\r\n                }\r\n            } else if (_config.page === 'ThreePgCheckoutAddressPaymentInfoPage') {\r\n                $elementVisible.addClass('hidden');\r\n            }\r\n            await _cjs.gC.checkTC();\r\n            $(_selector.checkoutBtn).removeClass('hidden');\r\n        }\r\n    }\r\n\r\n    async routing() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        return _cjs.gC.routing(name);\r\n    }\r\n}\r\n\r\nexport {\r\n    ApplePayWeb,\r\n    ApplePayGC\r\n}\r\n","import {StorefrontPayment} from \"../payment\";\r\nimport {Global} from \"../../util\";\r\nimport {\r\n    LOGGING,\r\n    _CHECKOUTJS,\r\n    DRJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    UNDEFINED,\r\n    REQUESTPAYLOAD,\r\n    FAIL_TO_APPLY_SOURCE,\r\n    CARTDATA,\r\n    PAYMENT\r\n} from \"../../keywords\";\r\nimport {$} from \"../globalCommerce\";\r\n\r\nconst document = Global.document;\r\nconst name = 'googlePay';\r\n\r\n/**\r\n * @class GooglePayWeb\r\n * @classdesc Google Pay for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='googlePay'] - e.g. 'googlePay'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {GooglePayWeb}\r\n * @category PaymentMethods\r\n */\r\nclass GooglePayWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, collection, name, storefront);\r\n    }\r\n\r\n    async initPayment() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        const _drjs = _cjs[DRJS];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n\r\n        const googlePayElement = document.getElementById(_configPayment.elementId);\r\n        let googlepay = await _util.getCache(name);\r\n        if (googlePayElement != null) {\r\n            const _googlePay = _this;\r\n            let paymentRequestData = await _googlePay[REQUESTPAYLOAD].createObject(cartData);\r\n            paymentRequestData.style = _configPayment.style;\r\n            paymentRequestData.classes = _configPayment.classes;\r\n            paymentRequestData.waitOnClick = true;\r\n            paymentRequestData = await _googlePay.createPaymentRequest(paymentRequestData, 'initialized');\r\n\r\n            const googlePaymentRequestData = _drjs.paymentRequest(paymentRequestData);\r\n            googlepay = _drjs.createElement(\"googlepay\", googlePaymentRequestData);\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createElement',\r\n                type: 'options',\r\n                payment: name,\r\n                options: googlePaymentRequestData,\r\n            });\r\n            await _util.setCache(name, googlepay);\r\n\r\n            if (googlepay && await googlepay.canMakePayment()) {\r\n                googlepay.mount(_configPayment.elementId);\r\n\r\n                googlepay.on('source', function (event) {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'source',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    const applySourceId = _googlePay.applySourceId.bind(_googlePay);\r\n                    const completeSourceId = _googlePay.completeSourceId.bind(_googlePay);\r\n                    if (typeof applySourceId !== 'function') {\r\n                        return;\r\n                    }\r\n                    applySourceId(event)\r\n                        .then(function (source) {\r\n                            if(source) {\r\n                                event.complete('success');\r\n                            }else{\r\n                                event.complete('error');\r\n                            }\r\n                        }).then(async function () {\r\n                        if (_configPayment.showTC) {\r\n                            return await _cjs.storefront.updateTC();\r\n                        }\r\n                    }).then(async function () {\r\n                        return completeSourceId.apply(_cjs, event);\r\n                    }).then(function () {\r\n                        console.log('routing');\r\n                        return _googlePay.routing();\r\n                    }).catch(function (ex) {\r\n                        _util.errorMessage(ex);\r\n                        event.complete('error');\r\n                        return false;\r\n                    }).then(function(routed){\r\n                        if(!routed) {\r\n                            _util.loadingOverlay(true);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                googlepay.on('shippingaddresschange', function (event) {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'shippingaddresschange',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    const shippingAddress = event.shippingAddress;\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(shippingAddress, 'shippingAddress')\r\n                        .then(function (shopperApiShippingAddress) {\r\n                            if (_util.isGCPage()) {\r\n                                _cjs.gC.applyShippingCountry(shopperApiShippingAddress.country);\r\n                                _cjs.gC.applyAddress(shopperApiShippingAddress);\r\n                            }\r\n                            return _shopperApi.applyAddressToCart(null, shopperApiShippingAddress);\r\n                        }).then(async function (response) {\r\n                        let updateObject = await _googlePay.createPaymentRequest(await _googlePay[REQUESTPAYLOAD].updateObject(response), 'shippingaddresschange');\r\n                        return _googlePay.shippingAddressChange(updateObject).then(function () {\r\n                            log.update = updateObject;\r\n                            _cjs.emit(LOGGING, log);\r\n                            event.updateWith(updateObject);\r\n                        });\r\n                    }).catch(async function (ex) {\r\n                        let updateObject = await _googlePay.createPaymentRequest(await _googlePay[REQUESTPAYLOAD].errorObject(ex), 'shippingaddresschange');\r\n                        log.update = updateObject;\r\n                        _cjs.emit(LOGGING, log);\r\n                        event.updateWith(updateObject);\r\n                    });\r\n                });\r\n\r\n                googlepay.on('shippingoptionchange', function (event) {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'shippingoptionchange',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    const shippingOption = event.shippingOption;\r\n                    const shippingOptionId = shippingOption.id;\r\n                    _shopperApi.updateSelectedShippingMethodOnCart(shippingOptionId)\r\n                        .then(async function (response) {\r\n                            if (_util.isGCPage()) {\r\n                                _cjs.gC.applyShippingOption(shippingOptionId);\r\n                            }\r\n                            const updateObject = await _googlePay.createPaymentRequest(await _googlePay[REQUESTPAYLOAD].updateObject(response), 'shippingoptionchange');\r\n                            return _googlePay.shippingOptionChange(updateObject).then(function () {\r\n                                log.update = updateObject;\r\n                                _cjs.emit(LOGGING, log);\r\n                                event.updateWith(updateObject);\r\n                            });\r\n                        }).catch(async function (ex) {\r\n                        const updateObject = await _googlePay.createPaymentRequest(await _googlePay[REQUESTPAYLOAD].errorObject(ex), 'shippingoptionchange');\r\n                        log.update = updateObject;\r\n                        _cjs.emit(LOGGING, log);\r\n                        event.updateWith(updateObject);\r\n                    });\r\n                });\r\n\r\n                googlepay.on('click', (event) => {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'click',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    _util.loadingOverlay();\r\n                    return _googlePay.click().then(async function () {\r\n                        if (_config.page === 'ProductDetailsPage') {\r\n                            return _shopperApi.addToCart().then(async function (response) {\r\n                                const updateObject = await _googlePay.createPaymentRequest(await _googlePay[REQUESTPAYLOAD].updateObject(response), 'click');\r\n                                log.update = updateObject;\r\n                                _cjs.emit(LOGGING, log);\r\n                                event.updateWith(updateObject);\r\n                            });\r\n                        } else {\r\n                            return _shopperApi.getCart().then(async function (response) {\r\n                                const updateObject = await _googlePay.createPaymentRequest(await _googlePay[REQUESTPAYLOAD].updateObject(response), 'click');\r\n                                log.update = updateObject;\r\n                                _cjs.emit(LOGGING, log);\r\n                                event.updateWith(updateObject);\r\n                            });\r\n                        }\r\n                    }).catch(function (ex) {\r\n                        _util.loadingOverlay(true);\r\n                        _util.errorMessage(ex);\r\n                    });\r\n                });\r\n\r\n                googlepay.on('cancel', function (event) {\r\n                    const log = {\r\n                        id: _util.getTime(),\r\n                        api: DRJS,\r\n                        method: 'cancel',\r\n                        type: 'event',\r\n                        payment: name,\r\n                        event: event,\r\n                    };\r\n                    _cjs.emit(LOGGING, log);\r\n                    _util.loadingOverlay(true);\r\n                    return _googlePay.cancel();\r\n                });\r\n                googlePayElement.setAttribute('data-payment', name);\r\n                googlePayElement.classList.add(_configPayment.classes.base);\r\n\r\n                googlePayElement.setAttribute('tabindex', '0');\r\n                googlePayElement.setAttribute('role', 'button');\r\n                googlePayElement.onclick = (event)=>{\r\n                    event.preventDefault();\r\n                    googlepay.show();\r\n                };\r\n                googlePayElement.onkeydown = (event)=> {\r\n                    if (event.key === \" \" || event.key === 'Enter' || event.key === 'Spacebar') {\r\n                        event.preventDefault();\r\n                        googlepay.show();\r\n                    }\r\n                };\r\n\r\n                _configPayment.show = true;\r\n                Object.defineProperty(_configPayment, 'element', {\r\n                    value: googlepay,\r\n                    enumerable: false,\r\n                    configurable: false,\r\n                    writable: true,\r\n                });\r\n                return (googlepay);\r\n            } else {\r\n                _configPayment.supported = false;\r\n                if (googlePayElement && googlePayElement.remove) {\r\n                    googlePayElement.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async applySourceId() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        let event = arguments[0];\r\n        if (event) {\r\n            let source = event.source;\r\n            //let billingAddress = _cjs[SHOPPERAPI].convertPaymentRequestAddressToShopperApiAddress(event.billingAddress,'billingAddress');\r\n            //let shippingAddress = _cjs[SHOPPERAPI].convertPaymentRequestAddressToShopperApiAddress(event.shippingAddress,'shippingAddress');\r\n            //let contactInformation = event.contactInformation;\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createSource',\r\n                type: 'options',\r\n                payment: name,\r\n                options: source,\r\n            });\r\n            if (source && source.id) {\r\n                await _util.setValue(PAYMENT, {name: name, result: event});\r\n                const address = await Promise.all([\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(Object.assign(event.billingAddress, event.contactInformation), 'billingAddress'),\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(event.shippingAddress, 'shippingAddress'),\r\n                ]);\r\n                await _shopperApi.applyAddressToCart(address[0], address[1]);\r\n                const response = await _shopperApi.applySourceToCart(source.id);\r\n                let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n                const validated = await _this.validateInfo(cartData);\r\n                if(!validated){\r\n                    return false;\r\n                }\r\n                if (response && response.cart && typeof response.cart.paymentMethod !== UNDEFINED) {\r\n                    return Promise.resolve([source, response]);\r\n                } else {\r\n                    return Promise.reject(FAIL_TO_APPLY_SOURCE);\r\n                }\r\n            } else if (event.error) {\r\n                return Promise.reject(event.error);\r\n            }\r\n        }\r\n        const paymentSource = await this.select();\r\n        if (paymentSource && paymentSource.result && paymentSource.result.source) {\r\n            return paymentSource.result.source;\r\n        }\r\n    }\r\n\r\n    async shippingAddressChange(updateObject) {\r\n        return (updateObject);\r\n    }\r\n\r\n    async shippingOptionChange(updateObject) {\r\n        return (updateObject);\r\n    }\r\n\r\n    async destroy() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _configPayment = _cjs[CONFIG].payments[name];\r\n        const googlepay = await _util.getCache(name);\r\n        if (googlepay && _configPayment.show) {\r\n            await googlepay.destroy();\r\n            await _util.removeCache(name);\r\n        }\r\n        _configPayment.show = false;\r\n        _configPayment.element = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @class GooglePayGC\r\n * @classdesc Google Pay for Global Commerce storefronts.\r\n * @extends GooglePayWeb\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='googlePay'] - e.g. 'googlePay'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {GooglePayGC}\r\n * @category PaymentMethods\r\n */\r\nclass GooglePayGC extends GooglePayWeb {\r\n\r\n    constructor(parent, collection) {\r\n        super(parent, collection, name, 'gC');\r\n        return this;\r\n    }\r\n\r\n    async initPayment() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        const _promise = await _cjs[PAYMENTS][name].initPayment.call(this);\r\n        // eslint-disable-next-line no-empty\r\n        if (_configPayment.showTC === true) {\r\n\r\n        }\r\n        return _promise;\r\n    }\r\n\r\n    async applySourceId() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const event = arguments[0];\r\n        if (event) {\r\n            const source = event.source;\r\n            //const billingAddress = _cjs[SHOPPERAPI].convertPaymentRequestAddressToShopperApiAddress(event.billingAddress,'billingAddress');\r\n            //const shippingAddress = _cjs[SHOPPERAPI].convertPaymentRequestAddressToShopperApiAddress(event.shippingAddress,'shippingAddress');\r\n            //const contactInformation = event.contactInformation;\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createSource',\r\n                type: 'options',\r\n                payment: name,\r\n                options: source,\r\n            });\r\n            if (source && source.id) {\r\n                await _util.setValue(PAYMENT, {name: _name, result: event});\r\n                const address = await Promise.all([\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(Object.assign(event.billingAddress, event.contactInformation), 'billingAddress'),\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(event.shippingAddress, 'shippingAddress')\r\n                ]);\r\n                _cjs.gC.applyAddress(address[0], address[1]);\r\n                await _shopperApi.applyAddressToCart(address[0], address[1]);\r\n                const response = await _shopperApi.applySourceToCart(source.id);\r\n                let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n                const validated = await _this.validateInfo(cartData);\r\n                if(!validated){\r\n                    return false;\r\n                }\r\n                await _cjs.sync();\r\n                return Promise.resolve([source, response]);\r\n\r\n            } else if (event.error) {\r\n                return Promise.reject(event.error);\r\n            }\r\n        }\r\n        const paymentSource = await this.select();\r\n        if (paymentSource && paymentSource.result && paymentSource.result.source) {\r\n            return paymentSource.result.source;\r\n        }\r\n    }\r\n\r\n    async changePaymentMethod() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _configPayment = _cjs[CONFIG].payments[name];\r\n        const _selector = _cjs[CONFIG].selector;\r\n        const selectedPayment = await _cjs.gC.getSelectedCloudPayPayment();\r\n        let $elementBtn = $(\"#\" + _configPayment.elementId);\r\n        let $elementVisible = $elementBtn;\r\n        if ($elementBtn.data('parent') && $elementBtn.length) {\r\n            if ($elementBtn.data('parent')[0] !== $elementBtn[0]) {\r\n                $elementVisible = $elementBtn.data('parent').add($elementBtn);\r\n            }\r\n            $elementBtn = $elementBtn.data('parent');\r\n        }\r\n        if (selectedPayment === name) {\r\n            if (!$(\"input[name='paymentMethodID'][data-type='\" + name + \"']\").attr('data-source-id')) {\r\n                if (_config.page === 'QuickBuyCartPage' && $(\"#\" + _configPayment.elementId + \"PlaceHolder\").length === 0) {\r\n                    $elementBtn.before(\"<span id='\" + _configPayment.elementId + \"PlaceHolder'></span>\").insertBefore(_selector.checkoutBtn);\r\n                } else if (_config.page === 'ThreePgCheckoutAddressPaymentInfoPage') {\r\n                    $elementVisible.show();\r\n                }\r\n                await _cjs.gC.checkTC($(_selector.checkoutForm).find(_selector.cloudPayTCContainer));\r\n                $(_selector.checkoutBtn).hide();\r\n            } else {\r\n                if (_config.page === 'ThreePgCheckoutAddressPaymentInfoPage') {\r\n                    $(_selector.checkoutBtn).show();\r\n                    $elementVisible.hide();\r\n                }\r\n            }\r\n        } else {\r\n            if (_config.page === 'QuickBuyCartPage') {\r\n                const placeHolder$ = $(\"#\" + _configPayment.elementId + \"PlaceHolder\");\r\n                if (placeHolder$.length) {\r\n                    placeHolder$.replaceWith($elementBtn);\r\n                }\r\n            } else if (_config.page === 'ThreePgCheckoutAddressPaymentInfoPage') {\r\n                $elementVisible.hide();\r\n            }\r\n            await _cjs.gC.checkTC();\r\n            $(_selector.checkoutBtn).show();\r\n        }\r\n    }\r\n\r\n    async routing() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        return _cjs.gC.routing(name);\r\n    }\r\n}\r\n\r\nexport {\r\n    GooglePayWeb,\r\n    GooglePayGC\r\n}\r\n","import {Payment,PaymentRequestPayload} from './payment';\r\nimport {_CHECKOUTJS, CONFIG, PAYMENTS, REQUESTPAYLOAD, UTIL} from \"../keywords\";\r\n\r\nconst name = 'payPal';\r\n\r\n/**\r\n * @class PayPal\r\n * @classdesc PayPal\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {PayPal}\r\n * @category PaymentMethods\r\n * @private\r\n */\r\nclass PayPal extends Payment{\r\n    constructor(parent,collection) {\r\n        super(parent,collection,name);\r\n        this[REQUESTPAYLOAD] =  new PayPalPaymentRequestPayload(parent,{}, name, this);\r\n    }\r\n}\r\n\r\n/**\r\n * @class PayPalPaymentRequestPayload\r\n * @classdesc The request payload for PayPal.\r\n * @extends PaymentRequestPayload\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} paymentType\r\n * @returns {PayPalPaymentRequestPayload}\r\n * @category PaymentMethods\r\n */\r\nclass PayPalPaymentRequestPayload extends PaymentRequestPayload {\r\n\r\n    constructor(parent,collection, name, payment) {\r\n        super(parent,collection, name, payment);\r\n    }\r\n\r\n    async getOwner(cartData) {\r\n        let address = cartData.cart.shippingAddress;\r\n        if(!address){\r\n            address = cartData.cart.billingAddress;\r\n        }\r\n        if(address) {\r\n            return ({\r\n                recipient: (address.firstName || '') + \" \" + (address.lastName  || ''),\r\n                email: address.emailAddress || '',\r\n                phoneNumber: address.phoneNumber || '',\r\n                address: {\r\n                    line1: address.line1 || '',\r\n                    line2: address.line2 || '',\r\n                    city: address.city || '',\r\n                    state: address.countrySubdivision || '',\r\n                    postalCode: address.postalCode || '',\r\n                    country: address.country || ''\r\n                }\r\n            });\r\n        }else{\r\n            return ({});\r\n        }\r\n    }\r\n\r\n    async displayItems(cartData) {\r\n        //const _cjs = this[_CHECKOUTJS];\r\n        const lineItems = [];\r\n        if(cartData && cartData.cart.lineItems && cartData.cart.lineItems.lineItem) {\r\n            for (let i = 0; i < cartData.cart.lineItems.lineItem.length; i++) {\r\n                const lineItem = cartData.cart.lineItems.lineItem[i];\r\n                lineItems.push({\r\n                    name : lineItem.product.displayName,\r\n                    quantity : lineItem.pricing.salePriceWithQuantity.value,\r\n                    unitAmount: lineItem.pricing.salePrice.value\r\n                });\r\n            }\r\n        }\r\n        return (lineItems);\r\n    }\r\n\r\n    async createObject(cartData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _configPayment = _config[PAYMENTS][_name];\r\n        const owner = await this.getOwner(cartData);\r\n        const shippingOptions = await this.shippingOptions(cartData);\r\n        const displayItems = await this.displayItems(cartData);\r\n        const returnUrl = await this._payment.getReturnUrl();\r\n        const cancelUrl = await this._payment.getCancelUrl();\r\n        let _type = _name;\r\n        const useRecurringPayment = await _util.useRecurringPayment(cartData);\r\n        if(useRecurringPayment && _configPayment.recurringName){\r\n            _type = _configPayment.recurringName;\r\n        }\r\n        const paymentRequestData = {\r\n            type:_type,\r\n            upstreamId: cartData.cart.id,\r\n            amount: cartData.cart.pricing.orderTotal.value,\r\n            currency: _cjs[CONFIG].currency,\r\n            [_type]: {\r\n                returnUrl: returnUrl,\r\n                cancelUrl: cancelUrl,\r\n                items: displayItems,\r\n                taxAmount: cartData.cart.pricing.tax.value,\r\n                amountsEstimated: true,\r\n                requestShipping: shippingOptions.length>0,\r\n                shippingAmount: cartData.cart.pricing.shippingAndHandling.value,\r\n            }\r\n        };\r\n        if(cartData && cartData.cart.paymentSession){\r\n            paymentRequestData['sessionId'] = cartData.cart.paymentSession.id;\r\n        }\r\n        if( Object.keys(owner).length !==0 && owner.address.country.trim().length ){\r\n            paymentRequestData.owner = owner;\r\n            if(owner.phoneNumber.trim().length && owner.recipient.trim().length) {\r\n                paymentRequestData[_type].shipping = owner;\r\n            }\r\n        }\r\n        _util.extend(paymentRequestData,_configPayment.source);\r\n        return (paymentRequestData);\r\n    }\r\n}\r\nexport {\r\n    PayPal,\r\n    PayPalPaymentRequestPayload,\r\n};\r\n","import {StorefrontPayment} from \"../payment\";\r\nimport {Global} from \"../../util\";\r\nimport {\r\n    LOGGING,\r\n    _CHECKOUTJS,\r\n    DRJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    REQUESTPAYLOAD,\r\n    PAYMENT,\r\n    CARTDATA\r\n} from \"../../keywords\";\r\nimport {KlarnaCreditPaymentRequestPayload} from \"../../payments/klarnaCredit\";\r\n\r\nconst document = Global.document;\r\nconst name = 'klarnaCredit';\r\n\r\n/**\r\n * @class KlarnaCreditWeb\r\n * @classdesc Klarna Credit for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='klarnaCredit'] - e.g. 'klarnaCredit'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {KlarnaCreditWeb}\r\n * @category PaymentMethods\r\n */\r\nclass KlarnaCreditWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, collection, name, storefront);\r\n        /**\r\n         * The KlarnaCreditPaymentRequestPayload created for Klarna Credit.\r\n         * @name requestPayload\r\n         * @type KlarnaCreditPaymentRequestPayload\r\n         * @memberof KlarnaCreditWeb\r\n         * @instance\r\n         */\r\n        this[REQUESTPAYLOAD] = new KlarnaCreditPaymentRequestPayload(parent, {}, name, this);\r\n    }\r\n}\r\n\r\nexport {\r\n    KlarnaCreditWeb\r\n}\r\n","import {StorefrontPayment} from \"../payment\";\r\nimport {\r\n    REQUESTPAYLOAD,\r\n} from \"../../keywords\";\r\nimport {AlipayPaymentRequestPayload} from \"../../payments/alipay\";\r\n\r\nconst name = 'alipay';\r\n\r\n/**\r\n * @class AlipayWeb\r\n * @classdesc Alipay for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='alipay'] - e.g. 'alipay'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {AlipayWeb}\r\n * @category PaymentMethods\r\n */\r\nclass AlipayWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, collection, name, storefront);\r\n        /**\r\n         * The AlipayPaymentRequestPayload created for Alipay.\r\n         * @name requestPayload\r\n         * @type AlipayPaymentRequestPayload\r\n         * @memberof AlipayWeb\r\n         * @instance\r\n         */\r\n        this[REQUESTPAYLOAD] = new AlipayPaymentRequestPayload(parent, {}, name, this);\r\n    }\r\n}\r\n\r\nexport {\r\n    AlipayWeb\r\n}\r\n","import {requireFieldUpdate, StorefrontPayment} from \"../payment\";\r\nimport {\r\n    _CHECKOUTJS, CARTDATA, CONFIG, DRJS, ELEMENT, PAYMENTS,\r\n    REQUESTPAYLOAD, SHOPPERAPI, UTIL,\r\n} from \"../../keywords\";\r\nimport {MstsPaymentRequestPayload} from \"../../payments/msts\";\r\nimport {extend, Global} from \"../../util\";\r\n\r\nconst name = 'msts';\r\n\r\n/**\r\n * @class MstsWeb\r\n * @classdesc Msts for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='msts'] - e.g. 'msts'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {MstsWeb}\r\n * @category PaymentMethods\r\n */\r\nclass MstsWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, extend({\r\n            writableMethods: {\r\n                createFields: true,\r\n                createEnrollButton: true,\r\n                getMarketingName: true,\r\n                getClientReferenceId: true,\r\n                getPoNumber:true,\r\n                getNotes:true\r\n            }\r\n        },collection), name, storefront);\r\n        /**\r\n         * The MstsPaymentRequestPayload created for Msts.\r\n         * @name requestPayload\r\n         * @type MstsPaymentRequestPayload\r\n         * @memberof MstsWeb\r\n         * @instance\r\n         */\r\n        this[REQUESTPAYLOAD] = new MstsPaymentRequestPayload(parent, {}, name, this);\r\n        this[REQUESTPAYLOAD].getPoNumber = this.getPoNumber;\r\n        this[REQUESTPAYLOAD].getNotes = this.getNotes;\r\n    }\r\n\r\n    async createElements() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        //const _util = _cjs[UTIL];\r\n        //const _drjs = _cjs[DRJS];\r\n        //const _element = _this[ELEMENT];\r\n        //const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        if(_configPayment.mountElement && !_configPayment.mountElement.disabled) {\r\n            await _this.createFields();\r\n        }else if(_configPayment.showEnrollButton){\r\n            await _this.createEnrollButton();\r\n            if (_configPayment.mountElement.required) {\r\n                _configPayment.mountElement.required.forEach(function (key) {\r\n                    _cjs.on(key + 'Updated', requireFieldUpdate, _this);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    async createFields() {\r\n        //const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        //const _drjs = _cjs[DRJS];\r\n        //const _element = _this[ELEMENT];\r\n        //const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const element = document.getElementById(`drjs_${_name}Element`);\r\n        if (element) {\r\n            let template = _util.format(_util.getTemplateValue(_configPayment.fieldsTemplate), _configPayment);\r\n            element.innerHTML = template;\r\n        }\r\n    }\r\n\r\n    async createEnrollButton(options) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        //const _drjs = _cjs[DRJS];\r\n        //const _element = _this[ELEMENT];\r\n        //const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n\r\n        const _options = _util.extend({\r\n            template: _configPayment.enrollBtnTemplate\r\n        }, options);\r\n        const element = document.getElementById(`drjs_${_name}Element`);\r\n        const enrollLink= await _this.getEnrollLink();\r\n        let enrollHTML = '';\r\n        if (enrollLink) {\r\n            let template = _util.format(_util.getTemplateValue(_options.template), extend({\r\n                enrollLink: enrollLink,\r\n            },_configPayment,_options));\r\n            enrollHTML = template;\r\n        }\r\n        if(element) {\r\n            element.innerHTML = enrollHTML;\r\n        }\r\n\r\n        return enrollHTML;\r\n    }\r\n\r\n    async supportedSettings() {\r\n        //const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        //const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        if( cartData &&\r\n            cartData.cart.billingAddress.country &&\r\n            cartData.cart.billingAddress.country.length>0 &&\r\n            cartData.cart.shippingAddress.country &&\r\n            cartData.cart.shippingAddress.country.length>0 &&\r\n            cartData.cart.billingAddress.country !== cartData.cart.shippingAddress.country\r\n        ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async getPoNumber() {\r\n        const element = document.getElementById(`drjs_poNumber`);\r\n        if (element) {\r\n            return element.value;\r\n        }\r\n    }\r\n\r\n    async getNotes() {\r\n        const element = document.getElementById(`drjs_notes`);\r\n        if (element) {\r\n            return element.value;\r\n        }\r\n    }\r\n\r\n    async getClientReferenceId() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const uuid = _util.getUUID();\r\n        return uuid;\r\n    }\r\n\r\n    async getMarketingName() {\r\n        //const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const currency = _cjs[CONFIG].currency;\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _util = _cjs[UTIL];\r\n        const _configPayment = _cjs[CONFIG].payments[name];\r\n        let country = _cjs[CONFIG].country;\r\n        let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        if(cartData) {\r\n            country = cartData.cart.billingAddress.country;\r\n        }\r\n        let key= `${country}-${currency}`;\r\n        let marketingName = null;\r\n        if(_configPayment.marketingName && _configPayment.marketingName.trim().length) {\r\n            const marketingNameList = _configPayment.marketingName.split(';');\r\n            for (let i = 0; i < marketingNameList.length; i++) {\r\n                const item = marketingNameList[i];\r\n                if(item.startsWith(key+'=')){\r\n                    marketingName = item.split('=')[1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return marketingName;\r\n    }\r\n\r\n    async getEcommerceUrl() {\r\n        return '';\r\n    }\r\n\r\n    async getEnrollLink() {\r\n        const _this = this;\r\n        //const _cjs = this[_CHECKOUTJS];\r\n        //const _configPayment = _cjs[CONFIG].payments[name];\r\n        const clientReferenceId = await _this.getClientReferenceId();\r\n        const marketingName = await _this.getMarketingName();\r\n        if(marketingName && clientReferenceId) {\r\n            let link = `https://${marketingName}.b2b.credit/apply?client_reference_id=${clientReferenceId}`;\r\n            const ecommerceUrl = (await _this.getEcommerceUrl()) || '';\r\n            if(ecommerceUrl && ecommerceUrl.length) {\r\n                link+= `&ecommerce_url=${encodeURIComponent(ecommerceUrl)}`;\r\n            }\r\n            return link;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    MstsWeb\r\n}\r\n","import {StorefrontPayment} from \"../payment\";\r\nimport {\r\n    REQUESTPAYLOAD,\r\n} from \"../../keywords\";\r\nimport {CcavenuePaymentRequestPayload} from \"../../payments/ccavenue\";\r\n\r\nconst name = 'ccavenue';\r\n\r\n/**\r\n * @class CcavenueWeb\r\n * @classdesc Ccavenue for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='ccavenue'] - e.g. 'ccavenue'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {CcavenueWeb}\r\n * @category PaymentMethods\r\n */\r\nclass CcavenueWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, collection, name, storefront);\r\n        /**\r\n         * The CcavenuePaymentRequestPayload created for Ccavenue.\r\n         * @name requestPayload\r\n         * @type CcavenuePaymentRequestPayload\r\n         * @memberof CcavenueWeb\r\n         * @instance\r\n         */\r\n        this[REQUESTPAYLOAD] = new CcavenuePaymentRequestPayload(parent, {}, name, this);\r\n    }\r\n}\r\n\r\nexport {\r\n    CcavenueWeb\r\n}\r\n","import {StorefrontPayment} from \"../payment\";\r\nimport {Global} from \"../../util\";\r\nimport {\r\n    LOGGING,\r\n    _CHECKOUTJS,\r\n    DRJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    REQUESTPAYLOAD,\r\n    PAYMENT,\r\n    CARTDATA, ELEMENT\r\n} from \"../../keywords\";\r\nimport {DropinPaymentRequestPayload} from \"../../payments/dropin\";\r\nimport {$} from \"../globalCommerce\";\r\n\r\nconst document = Global.document;\r\nconst name = 'dropin';\r\n\r\n/**\r\n * @class DropinWeb\r\n * @classdesc Klarna Credit for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='dropin'] - e.g. 'dropin'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {DropinWeb}\r\n * @category PaymentMethods\r\n */\r\nclass DropinWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, collection, name, storefront);\r\n        /**\r\n         * The DropinPaymentRequestPayload created for Dropin.\r\n         * @name requestPayload\r\n         * @type DropinPaymentRequestPayload\r\n         * @memberof DropinWeb\r\n         * @instance\r\n         */\r\n        this[REQUESTPAYLOAD] = new DropinPaymentRequestPayload(parent, {}, name, this);\r\n    }\r\n\r\n    /**\r\n     * Creates the Dropin elements on the current page.\r\n     * @returns {Promise<void>}\r\n     */\r\n    async createElements() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _drjs = _cjs[DRJS];\r\n        //const _element = _this[ELEMENT];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const _storefront = _this._storefront;\r\n        //const _payments = await _storefront.getPayments();\r\n\r\n        if(_configPayment.mountElement && !_configPayment.mountElement.disabled) {\r\n            const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n            const _storefront = _this._storefront;\r\n            const _payments = await _storefront.getPayments();\r\n            const supportedGeography = await _payments[_name].supportedGeography(cartData.cart.billingAddress.country);\r\n\r\n            if(supportedGeography && cartData && cartData.cart.paymentSession ) {\r\n                const elementsObj = {};\r\n                let elements = _configPayment.mountElement.elements;\r\n                let keys = Object.keys(elements);\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    const key = keys[i];\r\n                    if(elements[key].disable!==true) {\r\n                        const elementPlacement = document.getElementById(elements[key].id);\r\n                        if (elementPlacement && elementPlacement!==null) {\r\n                            let configuration = await _this[REQUESTPAYLOAD].createObject(cartData);\r\n                            if (configuration) {\r\n                                configuration.onSuccess = async (data) => {\r\n                                    await _util.loadingOverlay();\r\n                                    const source = await _this.createSource(data);\r\n                                    if(source) {\r\n                                        await _this.completeSourceId(source);\r\n                                        await _this.destroy();\r\n                                    }\r\n                                    await _util.loadingOverlay(true);\r\n                                };\r\n                                configuration.onCancel = async (data) => {\r\n                                    await _this.cancel(data);\r\n                                };\r\n                                configuration.onError = async (data) => {\r\n                                    _util.errorMessage(data);\r\n                                };\r\n                                configuration.onReady = async (data) => {\r\n                                    await _this.ready(data);\r\n                                };\r\n                                const element = _drjs.createDropin(configuration);\r\n                                element.mount(elementPlacement);\r\n                                elementsObj[key] = element;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                await _util.setCache(_name, elementsObj);\r\n                Object.defineProperty(_configPayment, ELEMENT, {\r\n                    value: elementsObj,\r\n                    enumerable: true,\r\n                    configurable: false,\r\n                    writable: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    async createSource(result) {\r\n        //const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const source = result.source;\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _storefront = this._storefront;\r\n        if (source && source.id) {\r\n            source.createdType = name;\r\n            const _source = await _storefront.validateSource(source);\r\n            if(_source) {\r\n                const _name = _source.type;\r\n                _cjs.emit(LOGGING, {\r\n                    id: _util.getTime(),\r\n                    api: DRJS,\r\n                    method: 'createSource',\r\n                    type: 'options',\r\n                    payment: _name,\r\n                    options: _source,\r\n                });\r\n                await _util.setValue(PAYMENT, {name: _name, result: result});\r\n                await _util.setValue(`${PAYMENT}_CREATEDTYPE`, {name:name, id:source.id});\r\n                const response = await _shopperApi.applySourceToCart(_source.id);\r\n                return _source;\r\n            }\r\n        }\r\n    }\r\n\r\n    async validateElements() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        //TODO: fix status\r\n        return !_configPayment.element;\r\n    }\r\n\r\n    async supportedSettings() {\r\n        //const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        //const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        if( !(cartData && cartData.cart.paymentSession) ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async destroy() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        //const _util = _cjs[UTIL];\r\n        const _configPayment = _cjs[CONFIG].payments[name];\r\n        if(_configPayment.mountElement) {\r\n            let _element = await _cjs[UTIL].getCache(name);\r\n            try {\r\n                if (_element) {\r\n                    if(_element.id && _element.key){\r\n                        _element = [_element];\r\n                    }else{\r\n                        _element = Object.values(_element);\r\n                    }\r\n                    for (let i = 0; i < _element.length; i++) {\r\n                        if(_element[i] && _element[i].destroy){\r\n                            await _element[i].destroy();\r\n                        }\r\n                    }\r\n                    await _cjs[UTIL].removeCache(name);\r\n                }\r\n                if (_configPayment.mountElement.elements && _configPayment.mountElement.elements[name].id) {\r\n                    const elementPlacement = document.getElementById(_configPayment.mountElement.elements[name].id);\r\n                    if (elementPlacement && elementPlacement !== null) {\r\n                        elementPlacement.innerHTML = '';\r\n                    }\r\n                }\r\n                // eslint-disable-next-line no-empty\r\n            } catch (ex) {\r\n                console.error(ex);\r\n            }\r\n        }\r\n        _configPayment.show = false;\r\n        _configPayment.element = null;\r\n    }\r\n\r\n}\r\n\r\n\r\nclass DropinGC extends DropinWeb {\r\n\r\n    constructor(parent, collection) {\r\n        super(parent, Object.assign({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                initPaymentBefore: true,\r\n                updatePaymentContainer: true,\r\n            }\r\n        }, collection), name, 'gC');\r\n        return this;\r\n    }\r\n\r\n    async initPaymentBefore() {\r\n        const _this = this;\r\n        const _cjs = _this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _name = this._name;\r\n        const _configPayment = _config[PAYMENTS][_name];\r\n        const _selector = _config.selector;\r\n        let _paymentType = await _cjs.gC._getBasePaymentType(_config.cloudPayPayload);\r\n        const isConfirmOrder = _config.page.indexOf('ConfirmOrderPage') > 0;\r\n        if (_paymentType===name && isConfirmOrder) {\r\n            const $paymentContainer = $(_selector.confirmOrder.paymentContainer);\r\n            $paymentContainer.parent().removeClass(\"col-md-4\").addClass(\"col-md-12\");\r\n            $paymentContainer.find(\">p:first\").hide();\r\n        }\r\n\r\n        if(_configPayment.removePaymentContainer) {\r\n            if(isConfirmOrder) {\r\n                const $termsOfSaleAcceptance = $(_selector.confirmOrder.termsOfSaleAcceptance);\r\n                $(`<p id='drjs_${_name}Element'></p>`).insertBefore($termsOfSaleAcceptance);\r\n            }else {\r\n                const $paymentContainer = $(_selector.payment.paymentContainer);\r\n                $paymentContainer.remove();\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSourceId(source) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        //const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        let _paymentType = await _cjs.gC._getBasePaymentType(_config.cloudPayPayload);\r\n        if(_paymentType===name && _config.page.indexOf('ConfirmOrderPage')>0) {\r\n            await _this.updatePaymentContainer(source);\r\n        }\r\n        return (source);\r\n    }\r\n\r\n    async updatePaymentContainer(source) {\r\n        //const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        //const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _name = source.type;\r\n        const _selector = _config.selector;\r\n        //const _configPayment = _config[PAYMENTS][_this._name];\r\n        const paymentContainer$ = $(_selector.confirmOrder.paymentContainer);\r\n        paymentContainer$.find(\">p:first\").show();\r\n        let paymentName = _name;\r\n        try {\r\n            const attr = await _shopperApi.getText(\"PMS_\" + _name.toUpperCase() + \"_NAME\");\r\n            if (attr.attribute && attr.attribute.value) {\r\n                paymentName = attr.attribute.value;\r\n            }\r\n        }catch(ex) {\r\n            console.error(ex);\r\n        }\r\n        paymentContainer$.find(\">p:first\").text(paymentName);\r\n        /*\r\n        const url = _util.parseURL(_config.drUrl);\r\n        const confirmOrderUrl = _cjs[UTIL].format(_config.url.confirmOrder, {\r\n            domain: url.hostname,\r\n            siteId: _config.siteId\r\n        });\r\n        await $.ajax({\r\n            url:confirmOrderUrl\r\n        }).done((html)=>{\r\n            let paymentContainer$ = $(html).find(_selector.confirmOrder.paymentContainer);\r\n            $(_selector.confirmOrder.paymentContainer).replaceWith(paymentContainer$);\r\n        });\r\n         */\r\n    }\r\n}\r\nexport {\r\n    DropinWeb,\r\n    DropinGC\r\n}\r\n","/**\r\n * The CheckoutJS configuration structure that can be customized.\r\n * @module Config\r\n * @category Utility\r\n */\r\n\r\n/**\r\n  * The additional elements created by DigitalRiver.js, e.g. bank selector, credit card fields, etc.\r\n  * @typedef module:Config.MountElementDefinition\r\n  * @property {Object.<string, string>} elements - The object key is the type of createElement in DigitalRiver.js and the object value is the ID of the HTMLElement placeholder that the element is mounted to.\r\n  * @property {string[]} [required] - The required fields for the elements.\r\n  * @example\r\n  * mountElement: {\r\n  *   elements: {\r\n  *     onlinebanking: \"drjs_onlineBankingElement\"\r\n  *   },\r\n  *   required: [\"country\",\"currency\"]\r\n  *}\r\n */\r\n\r\n/**\r\n * The generic configurations for each payment.\r\n * @typedef {Object} module:Config.PaymentConfigDefinition\r\n * @property {string} name - The name of the payment method.\r\n * @property {string} [recurringName] - The payment type for recurring payments.\r\n * @property {string} description - The description of the payment method.\r\n * @property {string} elementId - The ID of the HTMLElement.\r\n * @property {Boolean} disable=true - Set this to false to enable the payment method. This is true by default.\r\n * @property {Boolean} [show=false] - Set this to true to display the payment method on the page.\r\n * @property {Boolean} [amountsEstimated=false] - Set this to true to support estimated amounts.\r\n * @property {Boolean} [supportedRecurringPayments=false] - Set this to true to support recurring payments.\r\n * @property {string[]} [supportedGeographies=[]] - The list of countries that is supported by this payment method.\r\n * @property {string[]} [supportedCurrencies=[]] - The list of currencies that is supported by this payment method.\r\n * @property {string} [route] - The page ID to route to after the source has been applied, e.g. cart, info, confirmOrder, thankYou.\r\n * @property {Boolean} [showTC=false] - Set this to true to show the Terms and Conditions.\r\n * @property {Boolean} [hidePaymentSection=false] - Set this to true to hide the payment section in gC.\r\n * @property {Boolean} [preventPopupClose=false] - Set this to true to remove the close button on the overlay.\r\n * @property {Object} [style={}] - The styles of the payment element.\r\n * @property {Object} [class={}] - The class names of the payment element.\r\n * @property {module:Config.MountElementDefinition} [mountElement]\r\n * @property {module:Config.RedirectOverlayDefinition} [redirectOverlay]\r\n * @property {module:Config.PaymentConfigTemplateDefinition} [template]\r\n * @example\r\n * directDebit: {\r\n *   name: \"Direct Debit\",\r\n *   elementId: \"dr_directDebit\",\r\n *   disable: true,\r\n *   supportedGeographies: [\"AT\",\"BE\",\"BG\",\"HR\",\"CY\",\"CZ\",\"DK\",\"EE\",\"FI\",\"FR\",\"DE\",\"GR\",\"HU\",\"IS\",\"IR\",\"IT\",\"LV\",\"LI\",\"LT\",\"LU\",\"MT\",\"MC\",\"NL\",\"NO\",\"PL\",\"PT\",\"RO\",\"SM\",\"SK\",\"SI\",\"ES\",\"SE\",\"CH\",\"GB\",\"VA\",\"AD\"],\r\n *   supportedCurrencies: [\"EUR\"]\r\n * }\r\n */\r\n\r\n/**\r\n * The customized template for the payment.\r\n * @typedef module:Config.PaymentConfigTemplateDefinition\r\n * @property {string} [pendingFunds] - The customized template for pending funds.\r\n * @example\r\n * template: {\r\n *   pendingFunds:\r\n *     '<ul>\\n' +\r\n *     '    <li>Bank Name: {bPay.bankName}</li>\\n' +\r\n *     '    <li>Location: {bPay.city}, {bPay.country}</li>\\n' +\r\n *     '    <li>Account Holder: {bPay.accountHolder}</li>\\n' +\r\n *     '    <li>Account Number: {bPay.accountNumber}</li>\\n' +\r\n *     '    <li>Branch Details: {bPay.additionalBankInformation}</li>\\n' +\r\n *     '    <li>Reference ID: {bPay.referenceId}</li>\\n' +\r\n *     '</ul>'\r\n * }\r\n */\r\n\r\n/**\r\n * @memberOf module:Config\r\n * @property {string} apiKey - The Commerce API Key.\r\n * @property {string} encryptionKey - The encryption Key for payload encryption.\r\n * @property {string} authUserName\r\n * @property {string} authPassword\r\n * @property {string} siteId        - The Global Commerce site ID.\r\n * @property {string} locale\r\n * @property {string} page - The Global Commerce page name.\r\n * @property {string} country\r\n * @property {string} currency\r\n * @property {string} drUrl - The Global Commerce hosted domain, e.g. https://store.digitalriver.com.\r\n * @property {string} apiRequestUrlBase - The Digital River API endpoint.\r\n * @property {string} prefixName - The prefix name of the cookie or session.\r\n * @property {Boolean} init=true - When this value is set to true, initialize the layout and payments when a new instance is created.\r\n * @property {Boolean} submitCartWithShopperApi=false - Creates a payment source for the cart and submits the cart via Commerce API instead of a form submit.\r\n * @property {string[]} specialsCharacters - The range of UTF-8 characters to avoid when applying information to the cart, e.g. emojis.\r\n * @property {Boolean} debug=false\r\n */\r\nexport const Config = {\r\n    apiKey: '',\r\n    encryptionKey: '',\r\n    authUserName: '',\r\n    authPassword: '',\r\n    siteId: '',\r\n    locale: '',\r\n    page: '',\r\n    country: 'US',\r\n    currency: '',\r\n    drUrl: '',\r\n    apiRequestUrlBase: \"https://api.digitalriver.com\",\r\n    //apiRequestUrlBase: \"https://api-cte-ext.digitalriver.com\",\r\n    //apiRequestUrlBase: \"https://dispatch-cte.digitalriverws.net\",\r\n    //apiRequestUrlBase: \"https://dispatch-test.digitalriver.com\",\r\n    prefixName: \"dr_\",\r\n    init: true,\r\n    submitCartWithShopperApi: false,\r\n    specialsCharacters: [\r\n        '\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|(?:\\uD83E\\uDDD1\\uD83C\\uDFFF\\u200D\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?|\\u200D(?:\\uD83D\\uDC8B\\u200D)?)\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?|\\u200D(?:\\uD83D\\uDC8B\\u200D)?)\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?|\\u200D(?:\\uD83D\\uDC8B\\u200D)?)\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?|\\u200D(?:\\uD83D\\uDC8B\\u200D)?)\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?|\\u200D(?:\\uD83D\\uDC8B\\u200D)?)\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C\\uDFFB(?:\\u200D(?:\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])))|\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|[\\u2695\\u2696\\u2708]\\uFE0F|[\\u2695\\u2696\\u2708]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))?|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF]))|\\u200D(?:\\uD83D\\uDC8B\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFF])))|\\u200D(?:\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?|\\u200D(?:\\uD83D\\uDC8B\\u200D)?)\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\u200D(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\u200D[\\u2695\\u2696\\u2708])?|(?:\\uD83D\\uDC69(?:\\uD83C\\uDFFB\\u200D\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|(?:\\uD83C[\\uDFFC-\\uDFFF])\\u200D\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])))|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83E\\uDDD1(?:\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F?\\u200D\\uD83D\\uDDE8|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B|\\uD83C\\uDFF3\\uFE0F?\\u200D\\u26A7|\\uD83D\\uDC3B\\u200D\\u2744|(?:(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])\\u200D[\\u2640\\u2642]|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u2600-\\u2604\\u260E\\u2611\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26B0\\u26B1\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0\\u26F1\\u26F4\\u26F7\\u26F8\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]|\\uD83D[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3])\\uFE0F|\\uD83D\\uDC41\\uFE0F?\\u200D\\uD83D\\uDDE8|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83C\\uDFF3\\uFE0F?\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDE36\\u200D\\uD83C\\uDF2B|\\uD83C\\uDFF3\\uFE0F?\\u200D\\u26A7|\\uD83D\\uDE35\\u200D\\uD83D\\uDCAB|\\uD83D\\uDE2E\\u200D\\uD83D\\uDCA8|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83D\\uDC69(?:\\uD83C\\uDFFF|\\uD83C\\uDFFE|\\uD83C\\uDFFD|\\uD83C\\uDFFC|\\uD83C\\uDFFB)?|\\uD83D\\uDC3B\\u200D\\u2744|(?:(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\u2764(?:\\uFE0F\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79)|\\u200D(?:\\uD83D\\uDD25|\\uD83E\\uDE79))|\\uD83D\\uDC41\\uFE0F?|\\uD83C\\uDFF3\\uFE0F?|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])\\u200D[\\u2640\\u2642]|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F?\\u20E3|\\u2764\\uFE0F?|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])?|\\uD83C\\uDFF4|(?:[\\u270A\\u270B]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD7A\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270C\\u270D]|\\uD83D[\\uDD74\\uDD90])(?:\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC08\\uDC15\\uDC3B\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE2E\\uDE35\\uDE36\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2\\uDDD3\\uDDD5]|\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD4\\uDDD6-\\uDDDD]|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF]|[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u2328\\u23CF\\u23ED-\\u23EF\\u23F1\\u23F2\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB\\u25FC\\u2600-\\u2604\\u260E\\u2611\\u2618\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u2692\\u2694-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A7\\u26B0\\u26B1\\u26C8\\u26CF\\u26D1\\u26D3\\u26E9\\u26F0\\u26F1\\u26F4\\u26F7\\u26F8\\u2702\\u2708\\u2709\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2733\\u2734\\u2744\\u2747\\u2763\\u27A1\\u2934\\u2935\\u2B05-\\u2B07\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDE02\\uDE37\\uDF21\\uDF24-\\uDF2C\\uDF36\\uDF7D\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E\\uDF9F\\uDFCD\\uDFCE\\uDFD4-\\uDFDF\\uDFF5\\uDFF7]|\\uD83D[\\uDC3F\\uDCFD\\uDD49\\uDD4A\\uDD6F\\uDD70\\uDD73\\uDD76-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA\\uDECB\\uDECD-\\uDECF\\uDEE0-\\uDEE5\\uDEE9\\uDEF0\\uDEF3]|[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF84\\uDF86-\\uDF93\\uDFA0-\\uDFC1\\uDFC5\\uDFC6\\uDFC8\\uDFC9\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC07\\uDC09-\\uDC14\\uDC16-\\uDC3A\\uDC3C-\\uDC3E\\uDC40\\uDC44\\uDC45\\uDC51-\\uDC65\\uDC6A\\uDC79-\\uDC7B\\uDC7D-\\uDC80\\uDC84\\uDC88-\\uDC8E\\uDC90\\uDC92-\\uDCA9\\uDCAB-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDDA4\\uDDFB-\\uDE2D\\uDE2F-\\uDE34\\uDE37-\\uDE44\\uDE48-\\uDE4A\\uDE80-\\uDEA2\\uDEA4-\\uDEB3\\uDEB7-\\uDEBF\\uDEC1-\\uDEC5\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D\\uDD0E\\uDD10-\\uDD17\\uDD20-\\uDD25\\uDD27-\\uDD2F\\uDD3A\\uDD3F-\\uDD45\\uDD47-\\uDD76\\uDD78\\uDD7A-\\uDDB4\\uDDB7\\uDDBA\\uDDBC-\\uDDCB\\uDDD0\\uDDE0-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6]'\r\n    ],\r\n    /**\r\n     * The URLs used for the checkout.\r\n     * @name url\r\n     * @memberOf module:Config\r\n     * @property {string} paymentCallBack - The URL to redirect back from third-party payment sites.\r\n     * @property {string} cart - The URL of the cart page.\r\n     * @property {string} info - The URL of the billing, shipping, payment information page.\r\n     * @property {string} confirmOrder - The URL of the confirm order or order review page.\r\n     * @property {string} thankYou - The URL of the order complete or thank you page.\r\n     * @property {string} config - The URL of the CheckoutJS configuration data.\r\n     * @category Utility\r\n     * @instance\r\n     */\r\n    url: {\r\n        paymentCallBack: null,\r\n        cart: \"https://{domain}/store/{siteId}/cart\",\r\n        info: \"https://{domain}/store/{siteId}/DisplayThreePgCheckoutAddressPaymentInfoPage\",\r\n        confirmOrder: \"https://{domain}/store?Action=DisplayPage&SiteID={siteId}&id=ThreePgCheckoutConfirmOrderPage\",\r\n        thankYou: \"https://{domain}/store?Action=DisplayPage&SiteID={siteId}&id=ThankYouPage&reqID={requisitionId}\",\r\n        config: \"https://{domain}/store/{siteId}/CheckoutJsConfig\"\r\n    },\r\n    /**\r\n     * The cart settings.\r\n     * @name cart\r\n     * @memberOf module:Config\r\n     * @property {Boolean} displayIncludeTax=true - Set this to true to display the tax row for Apple Pay/Google Pay.\r\n     * @property {Boolean} updateCartInfoByApi=false - Set this to true to update the cart information via API.\r\n     * @category Utility\r\n     * @instance\r\n     */\r\n    cart: {\r\n        displayIncludeTax: true\r\n    },\r\n    /**\r\n     * The selectors used for looking up page elements.\r\n     * @name selector\r\n     * @memberOf module:Config\r\n     * @property {string} checkoutForm - The default checkout form, for billing, shipping and payment information.\r\n     * @property {string} checkoutBtn - The checkout button.\r\n     * @property {string} threePgCheckoutBtn - The checkout button on the cart page of the three-paged checkout flow.\r\n     * @property {string} errorModal - The error modal.\r\n     * @property {string} cloudPaySourceId - The hidden input for the CloudPay source ID.\r\n     * @property {string} cloudPayPayment - The CloudPay container in the payment section.\r\n     * @property {string} cloudPayTC - The Terms and Conditions content.\r\n     * @property {string} cloudPayTCContainer - The placeholder for the Terms and Conditions content.\r\n     * @property {string} cloudPayTermsAcceptance - The HTMLInputElement of the Terms and Conditions acceptance.\r\n     * @property {string} cloudPayBtn - The selector for all one-click checkout payments, e.g. applePay, googlePay, payPal.\r\n     * @property {Object} address - The address information section.\r\n     * @property {string} address.shippingContainer - The container for the shipping address.\r\n     * @property {string} address.billingContainer - The container for the billing address.\r\n     * @property {string} address.shippingDifferentThanBilling - The HTMLInputElement of the shipping is different than billing option.\r\n     * @property {Object} address.billingToGc - The billing address fields in gC.\r\n     * @property {string} address.billingToGc.firstName - The first name field in the billing section.\r\n     * @property {string} address.billingToGc.lastName - The last name field in the billing section.\r\n     * @property {string} address.billingToGc.phoneticFirstName - The phonetic first name field in the billing section.\r\n     * @property {string} address.billingToGc.phoneticLastName - The phonetic last name field in the billing section.\r\n     * @property {string} address.billingToGc.line1 - The first address line field in the billing section.\r\n     * @property {string} address.billingToGc.line2 - The second address line field in the billing section.\r\n     * @property {string} address.billingToGc.city - The city field in the billing section.\r\n     * @property {string} address.billingToGc.companyName - The company name field in the billing section.\r\n     * @property {string} address.billingToGc.division - The company division field in the billing section.\r\n     * @property {string} address.billingToGc.phoneNumber - The phone number field in the billing section.\r\n     * @property {string} address.billingToGc.countrySubdivision - The state/country subdivision field in the billing section.\r\n     * @property {string} address.billingToGc.postalCode - The postal code field in the billing section.\r\n     * @property {string} address.billingToGc.country - The country field in the billing section.\r\n     * @property {string} address.billingToGc.emailAddress - The e-mail address field in the billing section.\r\n     * @property {Object} address.shippingToGc - The shipping address fields in gC.\r\n     * @property {string} address.shippingToGc.firstName - The first name field in the shipping section.\r\n     * @property {string} address.shippingToGc.lastName - The last name field in the shipping section.\r\n     * @property {string} address.shippingToGc.phoneticFirstName - The phonetic first name field in the shipping section.\r\n     * @property {string} address.shippingToGc.phoneticLastName - The phonetic last name field in the shipping section.\r\n     * @property {string} address.shippingToGc.line1 - The first address line field in the shipping section.\r\n     * @property {string} address.shippingToGc.line2 - The second address line field in the shipping section.\r\n     * @property {string} address.shippingToGc.city - The city field in the shipping section.\r\n     * @property {string} address.shippingToGc.companyName - The company name field in the shipping section.\r\n     * @property {string} address.shippingToGc.division - The company division field in the shipping section.\r\n     * @property {string} address.shippingToGc.phoneNumber - The phone number field in the shipping section.\r\n     * @property {string} address.shippingToGc.countrySubdivision - The state/country subdivision field in the shipping section.\r\n     * @property {string} address.shippingToGc.postalCode - The postal code field in the shipping section.\r\n     * @property {string} address.shippingToGc.country - The country field in the shipping section.\r\n     * @property {string} address.shippingToGc.emailAddress - The e-mail address field in the shipping section.\r\n     * @property {Object} shippingEstimator - The shipping estimator section.\r\n     * @property {string} shippingEstimator.container - The container for the shipping estimator.\r\n     * @property {string} shippingEstimator.shipCountry - The HTMLInputElement of the shipping country.\r\n     * @property {string} shippingEstimator.shippingOptionID - The HTMLInputElement of the shipping option.\r\n     * @property {Object} delayedPaymentRefund - The delayed payment refund section.\r\n     * @property {string} delayedPaymentRefund.container - The container for the delayed payment refund.\r\n     * @property {string} delayedPaymentRefund.replacement - The HTMLElement to replace for rendering the DigitalRiver.js delayed payment refund element.\r\n     * @property {Object} confirmOrder - The confirm order section.\r\n     * @property {string} confirmOrder.confirmOrderForm - The confirm order form.\r\n     * @property {string} confirmOrder.paymentContainer - The container for the payment section of the confirm order form.\r\n     * @property {string} confirmOrder.replacement - The HTMLElement to replace for rendering the DigitalRiver.js elements.\r\n     * @property {string} confirmOrder.submitBtnProcessing - The container for the Processing Your Request message that is displayed after the checkout button is clicked.\r\n     * @category Utility\r\n     * @instance\r\n     */\r\n    selector: {\r\n        checkoutForm: \"form[name='CheckoutAddressForm']\",\r\n        checkoutBtn: \"#checkoutButton\",\r\n        threePgCheckoutBtn: \"#dr_shoppingCartCheckoutButton\",\r\n        errorModal: \"#drjs_errorModal\",\r\n        cloudPaySourceId: \"input[name='cloudPaySourceID']\",\r\n        cloudPayPayment: \"#dr_CloudPay\",\r\n        cloudPayTC: \"#dr_cloudPayTsAndCs\",\r\n        cloudPayTCContainer: \".dr_cloudPayTsAndCs\",\r\n        cloudPayTCError: \"#dr_cloudPayTsAndCs+.dr_error\",\r\n        cloudPayTermsAcceptance: \"input[name='cloudPayTermsAcceptance']\",\r\n        cloudPayBtn: \".dr_cloudPayBtn\",\r\n        address: {\r\n            shippingContainer: \"#dr_shippingContainer\",\r\n            billingContainer: \"#dr_billingContainer\",\r\n            shippingDifferentThanBilling: \"#shippingDifferentThanBilling\",\r\n            selectAddressEntry: \"#billingSelectAddr\",\r\n            billingToGc: {\r\n                firstName: \"input[name='BILLINGname1']\",\r\n                lastName: \"input[name='BILLINGname2']\",\r\n                phoneticFirstName: \"input[name='BILLINGphoneticName1']\",\r\n                phoneticLastName: \"input[name='BILLINGphoneticName2']\",\r\n                line1: \"input[name='BILLINGline1']\",\r\n                line2: \"input[name='BILLINGline2']\",\r\n                city: \"input[name='BILLINGcity'],select[name='BILLINGcity']\",\r\n                companyName: \"input[name='BILLINGcompanyName']\",\r\n                division: \"input[name='BILLINGdivision']\",\r\n                phoneNumber: \"input[name='BILLINGphoneNumber']\",\r\n                countrySubdivision: \"input[name='BILLINGstate'],select[name='BILLINGstate']\",\r\n                postalCode: \"input[name='BILLINGpostalCode']\",\r\n                country: \"input[name='BILLINGcountry'],select[name='BILLINGcountry']\",\r\n                emailAddress: \"input[name='EMAILemail'],input[name='EMAILconfirmEmail']\"\r\n            },\r\n            shippingToGc: {\r\n                firstName: \"input[name='SHIPPINGname1']\",\r\n                lastName: \"input[name='SHIPPINGname2']\",\r\n                phoneticFirstName: \"input[name='SHIPPINGphoneticName1']\",\r\n                phoneticLastName: \"input[name='SHIPPINGphoneticName2']\",\r\n                line1: \"input[name='SHIPPINGline1']\",\r\n                line2: \"input[name='SHIPPINGline2']\",\r\n                city: \"input[name='SHIPPINGcity'],select[name='SHIPPINGcity']\",\r\n                companyName: \"input[name='SHIPPINGcompanyName']\",\r\n                division: \"input[name='SHIPPINGdivision']\",\r\n                phoneNumber: \"input[name='SHIPPINGphoneNumber']\",\r\n                countrySubdivision: \"input[name='SHIPPINGstate'],select[name='SHIPPINGstate']\",\r\n                postalCode: \"input[name='SHIPPINGpostalCode']\",\r\n                country: \"input[name='SHIPPINGcountry'],select[name='SHIPPINGcountry']\"\r\n            }\r\n        },\r\n        shippingEstimator: {\r\n            container: \"#dr_shippingEstimator\",\r\n            shipCountry: \"input[name='selectedCountry'],select[name='selectedCountry']\",\r\n            shippingOptionID: \"input[name='shippingOptionID'],select[name='shippingOptionID']\"\r\n        },\r\n        delayedPaymentRefund:{\r\n            container: \"#dr_DelayedPaymentRefund\",\r\n            replacement: \"p:first\"\r\n        },\r\n        confirmOrder: {\r\n            confirmOrderForm: \"form[name='CheckoutConfirmOrderForm']\",\r\n            paymentContainer: \"#dr_confirmPaymentMethod\",\r\n            replacement: \"\",\r\n            submitBtnProcessing: \".dr_submitButtonProcessing\",\r\n            termsOfSaleAcceptance: \"#dr_TermsOfSaleAcceptance\"\r\n        }\r\n    },\r\n    elements: {\r\n        offlineRefund: {\r\n            elementId: \"dr_offlineRefund\",\r\n            style: {\r\n                base: {},\r\n                empty: {},\r\n                complete: {},\r\n                invalid: {},\r\n            }\r\n        },\r\n        pendingFundsInstruction:{\r\n            elementId: \"dr_paymentInstruction\",\r\n            emptyValueSelector: \"li\"\r\n        },\r\n        billingOption: {\r\n            elementId: \"dr_billingOption\"\r\n        },\r\n        compliance: {\r\n            elementId: \"dr_compliance\",\r\n            classes: {\r\n\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * The payment method configurations.\r\n     * @name payments\r\n     * @type { Object.<string, module:Config.PaymentConfigDefinition> }\r\n     * @memberOf module:Config\r\n     * @property {module:Config.PaymentConfigDefinition} applePay - Apple Pay\r\n     * @property {module:Config.PaymentConfigDefinition} googlePay - Google Pay\r\n     * @property {module:Config.PaymentConfigDefinition} creditCard - Credit Card\r\n     * @category Utility\r\n     * @instance\r\n     */\r\n    payments: {\r\n        /**\r\n         * Credit cards supported: American Express, Diners, Discover, JCB, Maestro, MasterCard, and Visa. Details of the credit card can be found in the source.\r\n         * @module creditCard\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/credit-cards\r\n         * @category PaymentMethods\r\n         * @returns {module:Config.PaymentConfigDefinition}\r\n         */\r\n        creditCard: {\r\n            name: \"Credit Card\",\r\n            elementId: \"dr_creditCard\",\r\n            mountElement: {\r\n                elements: {\r\n                    cardnumber:{\r\n                        id: \"dr_cardNumber\"\r\n                    },\r\n                    cardexpiration:{\r\n                        id: \"dr_cardExpiration\"\r\n                    },\r\n                    cardcvv:{\r\n                        id: \"dr_cardCvv\"\r\n                    }\r\n                },\r\n            },\r\n            disable: true,\r\n            show: false,\r\n            style: {},\r\n            classes: {\r\n                base: \"dr_creditCard\",\r\n                complete: \"dr_complete\",\r\n                empty: \"dr_empty\",\r\n                focus: \"dr_focus\",\r\n                invalid: \"dr_error\",\r\n                webkitAutofill: \"autofill\"\r\n            },\r\n            amountsEstimated: true,\r\n            supportedRecurringPayments: true,\r\n            supportedGeographies: [],\r\n            supportedSettings: {\r\n                \"CHF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":70000.00\r\n                },\r\n                \"DJF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"ARS\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":65000.00\r\n                },\r\n                \"MXN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":850000.00\r\n                },\r\n                \"QAR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"SAR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":230000.00\r\n                },\r\n                \"CLP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":33000000.00\r\n                },\r\n                \"ZAR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":500000.00\r\n                },\r\n                \"INR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":3000000.00\r\n                },\r\n                \"CNY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":420000.00\r\n                },\r\n                \"THB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":2000000.00\r\n                },\r\n                \"AUD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":80000.00\r\n                },\r\n                \"ILS\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":230000.00\r\n                },\r\n                \"KRW\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":80000000.00\r\n                },\r\n                \"JPY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":6000000.00\r\n                },\r\n                \"PLN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":200000.00\r\n                },\r\n                \"GBP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00\r\n                },\r\n                \"IDR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":180000000.00\r\n                },\r\n                \"KWD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"PHP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":3000000.00\r\n                },\r\n                \"TRY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":75000.00\r\n                },\r\n                \"LBP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"JOD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"RUB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":750000.00\r\n                },\r\n                \"AED\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"HKD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":50000.00\r\n                },\r\n                \"TWD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":2000000.00\r\n                },\r\n                \"EUR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00\r\n                },\r\n                \"COP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":200000000.00\r\n                },\r\n                \"DKK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":325000.00\r\n                },\r\n                \"CAD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":40000.00\r\n                },\r\n                \"MYR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":215000.00\r\n                },\r\n                \"USD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":60000.00\r\n                },\r\n                \"NOK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":380000.00\r\n                },\r\n                \"EGP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"SGD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":90000.00\r\n                },\r\n                \"ETB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"CZK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":80000.00\r\n                },\r\n                \"OMR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"SEK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":300000.00\r\n                },\r\n                \"NZD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":100000.00\r\n                },\r\n                \"BRL\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":125000.00\r\n                },\r\n                \"UAH\":{\r\n\r\n                },\r\n                \"BHD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Apple Pay\r\n         * @module applePay\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/apple-pay\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        applePay: {\r\n            name: \"Apple Pay\",\r\n            description: \"\",\r\n            elementId: \"dr_applePayBtn\",\r\n            disable: true,\r\n            show: false,\r\n            route: \"info\", //info,confirm,thankyou\r\n            style: {\r\n                buttonType: \"plain\",\r\n                buttonColor: \"light-outline\",\r\n                buttonLanguage: \"en\"\r\n            },\r\n            classes: {\r\n                base: \"dr_cloudPayBtn\"\r\n            },\r\n            expressCheckout: true,\r\n            supportedPaymentSession: false,\r\n            supportedRecurringPayments: false,\r\n            supportedGeographies: [\"AE\",\"AT\",\"AU\",\"BE\",\"BG\",\"BR\",\"CA\",\"CH\",\"CN\",\"CY\",\"CZ\",\"DE\",\"DK\",\"EE\",\"ES\",\"FI\",\"FO\",\"FR\",\"GB\",\"GG\",\"GL\",\"GR\",\"HK\",\"HR\",\"HU\",\"IE\",\"IM\",\"IS\",\"IT\",\"JE\",\"JP\",\"KZ\",\"LI\",\"LT\",\"LU\",\"LV\",\"MC\",\"MO\",\"MT\",\"NL\",\"NO\",\"NZ\",\"PL\",\"PT\",\"RO\",\"RU\",\"SA\",\"SE\",\"SG\",\"SI\",\"SK\",\"SM\",\"TW\",\"UA\",\"US\"],\r\n            supportedSettings: {\r\n                \"CHF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"SAR\":{\r\n\r\n                },\r\n                \"CNY\":{\r\n\r\n                },\r\n                \"AUD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":20000.00\r\n                },\r\n                \"JPY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":1000000.00\r\n                },\r\n                \"PLN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00\r\n                },\r\n                \"GBP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":10000.00\r\n                },\r\n                \"HUF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"RUB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"AED\":{\r\n\r\n                },\r\n                \"HKD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":15000.00\r\n                },\r\n                \"ISK\":{\r\n\r\n                },\r\n                \"TWD\":{\r\n\r\n                },\r\n                \"EUR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":15000.00\r\n                },\r\n                \"DKK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":95000.00\r\n                },\r\n                \"CAD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":40000.00\r\n                },\r\n                \"USD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00\r\n                },\r\n                \"BGN\":{\r\n\r\n                },\r\n                \"NOK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":100000.00\r\n                },\r\n                \"SGD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":20000.00\r\n                },\r\n                \"CZK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":800000.00\r\n                },\r\n                \"SEK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":125000.00\r\n                },\r\n                \"NZD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":25000.00\r\n                },\r\n                \"BRL\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":35000.00\r\n                },\r\n                \"UAH\":{\r\n\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Google Pay\r\n         * @module googlePay\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/google-pay\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        googlePay: {\r\n            name: \"Google Pay\",\r\n            description: \"\",\r\n            elementId: \"dr_googlePayBtn\",\r\n            disable: true,\r\n            show: false,\r\n            route: \"info\", //info,confirm,thankyou\r\n            style: {\r\n                buttonType: \"long\",\r\n                buttonColor: \"light\",\r\n                buttonLanguage: \"en\"\r\n            },\r\n            classes: {\r\n                base: \"dr_cloudPayBtn\"\r\n            },\r\n            expressCheckout: true,\r\n            supportedPaymentSession: true,\r\n            supportedRecurringPayments: true,\r\n            supportedSettings: {\r\n                \"CHF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":70000.00\r\n                },\r\n                \"ARS\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":65000.00\r\n                },\r\n                \"MXN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":850000.00\r\n                },\r\n                \"QAR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"SAR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":230000.00\r\n                },\r\n                \"CLP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":33000000.00\r\n                },\r\n                \"ZAR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":500000.00\r\n                },\r\n                \"INR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":3000000.00\r\n                },\r\n                \"VND\":{\r\n\r\n                },\r\n                \"CNY\":{\r\n\r\n                },\r\n                \"THB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":2000000.00\r\n                },\r\n                \"AUD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":80000.00\r\n                },\r\n                \"ILS\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":230000.00\r\n                },\r\n                \"KRW\":{\r\n\r\n                },\r\n                \"JPY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":6000000.00\r\n                },\r\n                \"PLN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":200000.00\r\n                },\r\n                \"GBP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":40000.00\r\n                },\r\n                \"IDR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":180000000.00\r\n                },\r\n                \"HUF\":{\r\n\r\n                },\r\n                \"KWD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"PHP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":3000000.00\r\n                },\r\n                \"TRY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":75000.00\r\n                },\r\n                \"LBP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"JOD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"RUB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":750000.00\r\n                },\r\n                \"AED\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"HKD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":500000.00\r\n                },\r\n                \"TWD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":2000000.00\r\n                },\r\n                \"EUR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00\r\n                },\r\n                \"COP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":200000000.00\r\n                },\r\n                \"DKK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":325000.00\r\n                },\r\n                \"CAD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":40000.00\r\n                },\r\n                \"MYR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":215000.00\r\n                },\r\n                \"USD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":60000.00\r\n                },\r\n                \"NOK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":380000.00\r\n                },\r\n                \"EGP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"SGD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":90000.00\r\n                },\r\n                \"ETB\":{\r\n\r\n                },\r\n                \"CZK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":800000.00\r\n                },\r\n                \"OMR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"SEK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":300000.00\r\n                },\r\n                \"NZD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":100000.00\r\n                },\r\n                \"BRL\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":125000.00\r\n                },\r\n                \"UAH\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                },\r\n                \"BHD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00\r\n                }\r\n            },\r\n            saveAsPaymentOption: false,\r\n        },\r\n        /**\r\n         * Direct Debit\r\n         * @module directDebit\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/direct-debit\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        directDebit: {\r\n            name: \"Direct Debit\",\r\n            elementId: \"dr_directDebit\",\r\n            disable: true,\r\n            show: false,\r\n            supportedRecurringPayments: true,\r\n            supportedSettings: {\r\n                \"EUR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00,\r\n                    \"countries\":[\r\n                        \"AT\",\r\n                        \"BE\",\r\n                        \"BG\",\r\n                        \"CH\",\r\n                        \"CY\",\r\n                        \"CZ\",\r\n                        \"DE\",\r\n                        \"DK\",\r\n                        \"EE\",\r\n                        \"ES\",\r\n                        \"FI\",\r\n                        \"FR\",\r\n                        \"GR\",\r\n                        \"HR\",\r\n                        \"HU\",\r\n                        \"IE\",\r\n                        \"IS\",\r\n                        \"IT\",\r\n                        \"LI\",\r\n                        \"LT\",\r\n                        \"LU\",\r\n                        \"LV\",\r\n                        \"MC\",\r\n                        \"MT\",\r\n                        \"NL\",\r\n                        \"NO\",\r\n                        \"PL\",\r\n                        \"PT\",\r\n                        \"RO\",\r\n                        \"SI\",\r\n                        \"SK\",\r\n                        \"SM\"\r\n                    ]\r\n                }\r\n            },\r\n            saveAsPaymentOption: false,\r\n        },\r\n        /**\r\n         * Direct Debit GB\r\n         * @module directDebitGB\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/direct-debit\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        directDebitGb: {\r\n            name: \"Direct Debit\",\r\n            elementId: \"dr_directDebitGb\",\r\n            disable: true,\r\n            show: false,\r\n            supportedRecurringPayments: true,\r\n            supportedSettings: {\r\n                \"GBP\":{\r\n                    \"minAmount\":0.01,\r\n                    \"maxAmount\":500000.00,\r\n                    \"countries\":[\r\n                        \"GB\"\r\n                    ]\r\n                }\r\n            },\r\n            saveAsPaymentOption: false,\r\n        },\r\n        /**\r\n         * Wire Transfer\r\n         * @module wireTransfer\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/wire-transfer\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        wireTransfer: {\r\n            name: \"Wire Transfer\",\r\n            elementId: \"dr_wireTransfer\",\r\n            disable: true,\r\n            show: false,\r\n            supportedSettings: {\r\n                \"CHF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":70000.00,\r\n                    \"countries\":[\r\n                        \"CH\",\r\n                        \"LI\"\r\n                    ]\r\n                },\r\n                \"ARS\":{\r\n                    \"countries\":[\r\n                        \"AR\"\r\n                    ]\r\n                },\r\n                \"MXN\":{\r\n                    \"countries\":[\r\n                        \"MX\"\r\n                    ]\r\n                },\r\n                \"QAR\":{\r\n                    \"countries\":[\r\n                        \"QA\"\r\n                    ]\r\n                },\r\n                \"CLP\":{\r\n                    \"countries\":[\r\n                        \"CL\"\r\n                    ]\r\n                },\r\n                \"ZAR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":500000.00,\r\n                    \"countries\":[\r\n                        \"ZA\"\r\n                    ]\r\n                },\r\n                \"VND\":{\r\n                    \"countries\":[\r\n                        \"VN\"\r\n                    ]\r\n                },\r\n                \"THB\":{\r\n                    \"countries\":[\r\n                        \"TH\"\r\n                    ]\r\n                },\r\n                \"AUD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":80000.00,\r\n                    \"countries\":[\r\n                        \"AU\"\r\n                    ]\r\n                },\r\n                \"JPY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":6000000.00,\r\n                    \"countries\":[\r\n                        \"JP\"\r\n                    ]\r\n                },\r\n                \"PLN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":200000.00,\r\n                    \"countries\":[\r\n                        \"PL\"\r\n                    ]\r\n                },\r\n                \"GBP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":40000.00,\r\n                    \"countries\":[\r\n                        \"GB\"\r\n                    ]\r\n                },\r\n                \"IDR\":{\r\n                    \"countries\":[\r\n                        \"ID\"\r\n                    ]\r\n                },\r\n                \"HUF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":6306600.00,\r\n                    \"countries\":[\r\n                        \"HU\"\r\n                    ]\r\n                },\r\n                \"KWD\":{\r\n                    \"countries\":[\r\n                        \"KW\"\r\n                    ]\r\n                },\r\n                \"TRY\":{\r\n                    \"countries\":[\r\n                        \"TR\"\r\n                    ]\r\n                },\r\n                \"RUB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":1200000.00,\r\n                    \"countries\":[\r\n                        \"RU\"\r\n                    ]\r\n                },\r\n                \"HKD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":500000.00,\r\n                    \"countries\":[\r\n                        \"HK\"\r\n                    ]\r\n                },\r\n                \"ISK\":{\r\n                    \"countries\":[\r\n                        \"IS\"\r\n                    ]\r\n                },\r\n                \"EUR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":100000.00,\r\n                    \"countries\":[\r\n                        \"AD\",\r\n                        \"AT\",\r\n                        \"BE\",\r\n                        \"BG\",\r\n                        \"CY\",\r\n                        \"DE\",\r\n                        \"EE\",\r\n                        \"ES\",\r\n                        \"FI\",\r\n                        \"FR\",\r\n                        \"GR\",\r\n                        \"IE\",\r\n                        \"IT\",\r\n                        \"LT\",\r\n                        \"LU\",\r\n                        \"LV\",\r\n                        \"MC\",\r\n                        \"MT\",\r\n                        \"NL\",\r\n                        \"PT\",\r\n                        \"RO\",\r\n                        \"SI\",\r\n                        \"SK\",\r\n                        \"SM\",\r\n                        \"VA\"\r\n                    ]\r\n                },\r\n                \"COP\":{\r\n                    \"countries\":[\r\n                        \"CO\"\r\n                    ]\r\n                },\r\n                \"DKK\":{\r\n                    \"countries\":[\r\n                        \"FO\",\r\n                        \"GL\"\r\n                    ]\r\n                },\r\n                \"CAD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":40000.00,\r\n                    \"countries\":[\r\n                        \"CA\"\r\n                    ]\r\n                },\r\n                \"MYR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":215000.00,\r\n                    \"countries\":[\r\n                        \"MY\"\r\n                    ]\r\n                },\r\n                \"USD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":60000.00,\r\n                    \"countries\":[\r\n                        \"PE\",\r\n                        \"PR\",\r\n                        \"US\"\r\n                    ]\r\n                },\r\n                \"NOK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":380000.00,\r\n                    \"countries\":[\r\n                        \"NO\"\r\n                    ]\r\n                },\r\n                \"SGD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":90000.00,\r\n                    \"countries\":[\r\n                        \"SG\"\r\n                    ]\r\n                },\r\n                \"CZK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":800000.00,\r\n                    \"countries\":[\r\n                        \"CZ\"\r\n                    ]\r\n                },\r\n                \"SEK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":300000.00,\r\n                    \"countries\":[\r\n                        \"SE\"\r\n                    ]\r\n                },\r\n                \"NZD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":100000.00,\r\n                    \"countries\":[\r\n                        \"NZ\"\r\n                    ]\r\n                },\r\n                \"BRL\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":125000.00,\r\n                    \"countries\":[\r\n                        \"BR\"\r\n                    ]\r\n                },\r\n                \"UAH\":{\r\n                    \"countries\":[\r\n                        \"UA\"\r\n                    ]\r\n                },\r\n                \"BHD\":{\r\n                    \"countries\":[\r\n                        \"BH\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * PayPal\r\n         * @module payPal\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/paypal\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        payPal: {\r\n            name: \"PayPal\",\r\n            recurringName: \"payPalBilling\",\r\n            elementId: \"dr_payPalBtn\",\r\n            disable: true,\r\n            show: false,\r\n            route: \"confirm\", //info,confirm,thankyou\r\n            style: {\r\n                layout: \"horizontal\",\r\n                label: \"checkout\",\r\n                size: \"responsive\",\r\n                color: \"gold\",\r\n                shape: \"rect\",\r\n                tagline: \"false\"\r\n            },\r\n            classes: {\r\n                base: \"dr_cloudPayBtn\"\r\n            },\r\n            button: {\r\n                funding: {\r\n                    allowed: [\"card\"],\r\n                },\r\n            },\r\n            amountsEstimated: true,\r\n            supportedRecurringPayments: true,\r\n            redirectOverlay: {\r\n                type: \"open\"\r\n            },\r\n            supportedSettings: {\r\n                \"CHF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00,\r\n                    \"countries\":[\r\n                        \"CH\",\r\n                        \"LI\"\r\n                    ]\r\n                },\r\n                \"HKD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":150000.00,\r\n                    \"countries\":[\r\n                        \"HK\"\r\n                    ]\r\n                },\r\n                \"TWD\":{\r\n                    \"countries\":[\r\n                        \"TW\"\r\n                    ]\r\n                },\r\n                \"MXN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":210000.00,\r\n                    \"countries\":[\r\n                        \"MX\"\r\n                    ]\r\n                },\r\n                \"EUR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":15000.00,\r\n                    \"countries\":[\r\n                        \"AD\",\r\n                        \"AT\",\r\n                        \"BE\",\r\n                        \"BG\",\r\n                        \"CY\",\r\n                        \"DE\",\r\n                        \"EE\",\r\n                        \"ES\",\r\n                        \"FI\",\r\n                        \"FR\",\r\n                        \"GF\",\r\n                        \"GR\",\r\n                        \"IE\",\r\n                        \"IT\",\r\n                        \"LT\",\r\n                        \"LU\",\r\n                        \"LV\",\r\n                        \"MC\",\r\n                        \"MT\",\r\n                        \"NL\",\r\n                        \"PM\",\r\n                        \"PT\",\r\n                        \"RE\",\r\n                        \"RO\",\r\n                        \"SI\",\r\n                        \"SK\",\r\n                        \"SM\",\r\n                        \"VA\"\r\n                    ]\r\n                },\r\n                \"DKK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":95000.00,\r\n                    \"countries\":[\r\n                        \"DK\",\r\n                        \"FO\",\r\n                        \"GL\"\r\n                    ]\r\n                },\r\n                \"CAD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":40000.00,\r\n                    \"countries\":[\r\n                        \"CA\"\r\n                    ]\r\n                },\r\n                \"USD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00,\r\n                    \"countries\":[\r\n                        \"AS\",\r\n                        \"BD\",\r\n                        \"DE\",\r\n                        \"EC\",\r\n                        \"FM\",\r\n                        \"GU\",\r\n                        \"IO\",\r\n                        \"MH\",\r\n                        \"MP\",\r\n                        \"PA\",\r\n                        \"PE\",\r\n                        \"PR\",\r\n                        \"SV\",\r\n                        \"TC\",\r\n                        \"UM\",\r\n                        \"US\",\r\n                        \"VE\"\r\n                    ]\r\n                },\r\n                \"NOK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":100000.00,\r\n                    \"countries\":[\r\n                        \"BV\",\r\n                        \"NO\",\r\n                        \"SJ\"\r\n                    ]\r\n                },\r\n                \"VND\":{\r\n                    \"countries\":[\r\n                        \"VN\"\r\n                    ]\r\n                },\r\n                \"THB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":650000.00,\r\n                    \"countries\":[\r\n                        \"TH\"\r\n                    ]\r\n                },\r\n                \"AUD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":20000.00,\r\n                    \"countries\":[\r\n                        \"AU\",\r\n                        \"CC\",\r\n                        \"CX\",\r\n                        \"HM\",\r\n                        \"KI\",\r\n                        \"NF\",\r\n                        \"TV\"\r\n                    ]\r\n                },\r\n                \"ILS\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":70000.00,\r\n                    \"countries\":[\r\n                        \"IL\"\r\n                    ]\r\n                },\r\n                \"SGD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00,\r\n                    \"countries\":[\r\n                        \"SG\"\r\n                    ]\r\n                },\r\n                \"JPY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":1000000.00,\r\n                    \"countries\":[\r\n                        \"JP\"\r\n                    ]\r\n                },\r\n                \"PLN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00,\r\n                    \"countries\":[\r\n                        \"PL\"\r\n                    ]\r\n                },\r\n                \"GBP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":10000.00,\r\n                    \"countries\":[\r\n                        \"GB\",\r\n                        \"GS\",\r\n                        \"TA\"\r\n                    ]\r\n                },\r\n                \"CZK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":800000.00,\r\n                    \"countries\":[\r\n                        \"CZ\"\r\n                    ]\r\n                },\r\n                \"HUF\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00,\r\n                    \"countries\":[\r\n                        \"HU\"\r\n                    ]\r\n                },\r\n                \"SEK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":125000.00,\r\n                    \"countries\":[\r\n                        \"SE\"\r\n                    ]\r\n                },\r\n                \"NZD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":25000.00,\r\n                    \"countries\":[\r\n                        \"CK\",\r\n                        \"NU\",\r\n                        \"NZ\",\r\n                        \"PN\",\r\n                        \"TK\"\r\n                    ]\r\n                },\r\n                \"PHP\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":850000.00,\r\n                    \"countries\":[\r\n                        \"PH\"\r\n                    ]\r\n                },\r\n                \"RUB\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":30000.00,\r\n                    \"countries\":[\r\n                        \"RU\"\r\n                    ]\r\n                }\r\n            },\r\n            saveAsPaymentOption: false,\r\n        },\r\n        payPalCredit: {\r\n            name: \"PayPal Credit\",\r\n            elementId: \"dr_payPalCreditBtn\",\r\n            disable: true,\r\n            show: false,\r\n            route: \"confirm\",\r\n            style: {\r\n                layout: \"horizontal\",\r\n                label: \"credit\",\r\n                size: \"responsive\",\r\n                color: \"darkblue\",\r\n                shape: \"rect\",\r\n                tagline: \"false\"\r\n            },\r\n            classes: {\r\n                base: \"dr_cloudPayBtn\"\r\n            },\r\n            button: {\r\n                funding: {\r\n                    allowed: [\"credit\"],\r\n                },\r\n            },\r\n            amountsEstimated: true,\r\n            supportedRecurringPayments: false,\r\n            redirectOverlay: {\r\n                type: \"open\"\r\n            },\r\n            supportedSettings: {\r\n                \"USD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00,\r\n                    \"countries\":[\r\n                        \"US\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Korean - Payco\r\n         * @module payco\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/korea-bank-transfer\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        payco: {\r\n            name: \"PAYCO\",\r\n            elementId: \"dr_payco\",\r\n            disable: true,\r\n            show: false,\r\n            //oneTimeRedirect: true,\r\n            supportedSettings: {\r\n                \"KRW\":{\r\n                    \"minAmount\":400.00,\r\n                    \"countries\":[\r\n                        \"KR\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Korean - Bank Transfer\r\n         * @module bankTransfer\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/korea-bank-transfer\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        bankTransfer: {\r\n            name: \"Bank Transfer\",\r\n            elementId: \"dr_bankTransfer\",\r\n            disable: true,\r\n            show: false,\r\n            //oneTimeRedirect: true,\r\n            supportedSettings: {\r\n                \"KRW\":{\r\n                    \"minAmount\":400.00,\r\n                    \"countries\":[\r\n                        \"KR\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * bPay\r\n         * @module bPay\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/bpay\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        bPay: {\r\n            name: \"BPAY\",\r\n            elementId: \"dr_bPay\",\r\n            disable: true,\r\n            show: false,\r\n            supportedSettings: {\r\n                \"AUD\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":80000.00,\r\n                    \"countries\":[\r\n                        \"AU\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Internet Bank Payment (IBP)\r\n         * @module onlineBanking\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/internet-bank-payment-ibp\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        onlineBanking: {\r\n            name: \"Online Banking - IBP\",\r\n            elementId: \"dr_onlineBanking\",\r\n            mountElement: {\r\n                elements: {\r\n                    onlinebanking: {\r\n                        id: \"drjs_onlineBankingElement\"\r\n                    }\r\n                },\r\n                required: [\"country\",\"currency\"]\r\n            },\r\n            disable: true,\r\n            show: false,\r\n            classes: {\r\n                base: \"dr_cloudPay\",\r\n                complete: \"dr_complete\",\r\n                empty: \"dr_empty\",\r\n                focus: \"dr_focus\",\r\n                invalid: \"dr_error\"\r\n            },\r\n            supportedPaymentSession: true,\r\n            supportedSettings: {\r\n                \"EUR\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":50000.00,\r\n                    \"countries\":[\r\n                        \"AT\",\r\n                        \"DE\",\r\n                        \"FI\",\r\n                        \"NL\"\r\n                    ]\r\n                },\r\n                \"PLN\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":200000.00,\r\n                    \"countries\":[\r\n                        \"PL\"\r\n                    ]\r\n                },\r\n                \"SEK\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":300000.00,\r\n                    \"countries\":[\r\n                        \"SE\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Konbini\r\n         * @module konbini\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/konbini-1\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        konbini: {\r\n            name: \"コンビニ決済\",\r\n            elementId: \"dr_konbini\",\r\n            mountElement: {\r\n                elements: {\r\n                    konbini: {\r\n                        id:\"drjs_konbiniElement\"\r\n                    }\r\n                },\r\n                required: [\"country\",\"currency\"]\r\n            },\r\n            disable: true,\r\n            show: false,\r\n            supportedPaymentSession: false,\r\n            classes: {\r\n                base: \"dr_cloudPay\",\r\n                complete: \"dr_complete\",\r\n                empty: \"dr_empty\",\r\n                focus: \"dr_focus\",\r\n                invalid: \"dr_error\"\r\n            },\r\n            supportedSettings: {\r\n                \"JPY\":{\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":6000000.00,\r\n                    \"countries\":[\r\n                        \"JP\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Klarna\r\n         * @module klarnaCredit\r\n         * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/klarna\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        klarnaCredit: {\r\n            name: \"Klarna\",\r\n            recurringName: \"klarnaCreditRecurring\",\r\n            elementId: \"dr_klarnaCredit\",\r\n            disable: true,\r\n            show: false,\r\n            supportedRecurringPayments: true,\r\n            supportedSettings: {\r\n                \"CAD\": {\r\n                    \"minAmount\": 35.00,\r\n                    \"maxAmount\": 1500.00,\r\n                    \"countries\": [\r\n                        \"CA\"\r\n                    ]\r\n                },\r\n                \"CHF\": {\r\n                    \"minAmount\": 1.00,\r\n                    \"maxAmount\": 1000.00,\r\n                    \"countries\": [\r\n                        \"CH\"\r\n                    ]\r\n                },\r\n                \"DKK\": {\r\n                    \"minAmount\": 1.00,\r\n                    \"maxAmount\": 20000.00,\r\n                    \"countries\": [\r\n                        \"DK\"\r\n                    ]\r\n                },\r\n                \"EUR\": {\r\n                    \"minAmount\": 0.10,\r\n                    \"maxAmount\": 15000.00,\r\n                    \"countries\": [\r\n                        \"AT\",\r\n                        \"DE\",\r\n                        \"FI\",\r\n                        \"NL\"\r\n                    ]\r\n                },\r\n                \"GBP\": {\r\n                    \"minAmount\": 1.00,\r\n                    \"maxAmount\": 800.00,\r\n                    \"countries\": [\r\n                        \"GB\"\r\n                    ]\r\n                },\r\n                \"NOK\": {\r\n                    \"minAmount\": 1.00,\r\n                    \"maxAmount\": 75000.00,\r\n                    \"countries\": [\r\n                        \"NO\"\r\n                    ]\r\n                },\r\n                \"PLN\": {\r\n                    \"minAmount\": 130.00,\r\n                    \"maxAmount\": 7000.00,\r\n                    \"countries\": [\r\n                        \"PL\"\r\n                    ]\r\n                },\r\n                \"SEK\": {\r\n                    \"minAmount\": 1.00,\r\n                    \"maxAmount\": 100000.00,\r\n                    \"countries\": [\r\n                        \"SE\"\r\n                    ]\r\n                },\r\n                \"USD\": {\r\n                    \"minAmount\": 35.00,\r\n                    \"maxAmount\": 1000.00,\r\n                    \"countries\": [\r\n                        \"US\"\r\n                    ]\r\n                }\r\n            },\r\n            activeAcceptance: true,\r\n            singleSubscriptionForRecurring: true,\r\n            saveAsPaymentOption: false\r\n        },\r\n        /**\r\n         * Alipay\r\n         * @module alipay\r\n         * @see https://docs.digitalriver.com/commerce-api/payment-integrations-1/digitalriver.js/payment-methods/alipay\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        alipay: {\r\n            name: \"Alipay\",\r\n            elementId: \"dr_alipay\",\r\n            disable: true,\r\n            show: false,\r\n            supportedSettings: {\r\n                \"USD\": {\r\n                    \"minAmount\": 0.00,\r\n                    \"maxAmount\": 20000.00,\r\n                    \"countries\": [\r\n                        \"CN\",\r\n                        \"BD\",\r\n                        \"EC\",\r\n                        \"SV\",\r\n                        \"PA\",\r\n                        \"PY\",\r\n                        \"PR\",\r\n                        \"VE\",\r\n                        \"US\"\r\n                    ]\r\n                },\r\n                \"CNY\": {\r\n                    \"minAmount\": 0.00,\r\n                    \"maxAmount\": 420000.00,\r\n                    \"countries\": [\r\n                        \"CN\"\r\n                    ]\r\n                },\r\n            },\r\n        },\r\n        msts: {\r\n            name: \"MSTS\",\r\n            elementId: \"dr_msts\",\r\n            disable: true,\r\n            show: false,\r\n            mountElement: {\r\n                elements: {\r\n                    poNumber: {\r\n                        id: \"drjs_poNumberElement\"\r\n                    },\r\n                    notes: {\r\n                        id: \"drjs_notesElement\"\r\n                    }\r\n                },\r\n                required: [\"country\",\"currency\"]\r\n            },\r\n            supportedRecurringPayments: true,\r\n            supportedSettings: {\r\n                \"CAD\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":40000.00,\r\n                    \"countries\": [\r\n                        \"CA\"\r\n                    ]\r\n                },\r\n                \"CHF\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":70000.00,\r\n                    \"countries\": [\r\n                        \"CH\"\r\n                    ]\r\n                },\r\n                \"AUD\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":80000.00,\r\n                    \"countries\": [\r\n                        \"AU\"\r\n                    ]\r\n                },\r\n                \"NZD\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":100000.00,\r\n                    \"countries\": [\r\n                        \"NZ\"\r\n                    ]\r\n                },\r\n                \"GBP\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00,\r\n                    \"countries\": [\r\n                        \"GB\"\r\n                    ]\r\n                },\r\n                \"EUR\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":45000.00,\r\n                    \"countries\": [\r\n                        \"IE\",\r\n                        \"DE\",\r\n                        \"BE\",\r\n                        \"NL\",\r\n                        \"AT\",\r\n                        \"ES\",\r\n                        \"FR\",\r\n                        //\"CH\",\r\n                        \"LU\"\r\n                    ]\r\n                },\r\n                \"DKK\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":325000.00,\r\n                    \"countries\": [\r\n                        \"DK\"\r\n                    ]\r\n                },\r\n                \"PLN\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":200000.00,\r\n                    \"countries\": [\r\n                        \"PL\"\r\n                    ]\r\n                },\r\n                \"USD\": {\r\n                    \"minAmount\":0.00,\r\n                    \"maxAmount\":60000.00,\r\n                    \"countries\": [\r\n                        \"US\"\r\n                    ]\r\n                },\r\n            },\r\n            activeAcceptance: true,\r\n            enrollNowButton: \"Enroll Now\",\r\n            poNumber:\"Purchase Order #\",\r\n            notes:\"Notes\",\r\n            fieldsTemplate: '<script type=\"text/template\">' +\r\n                '<div>{poNumber}</div>' +\r\n                '<input type=\"text\" id=\"drjs_poNumber\" maxlength=\"255\" />'+\r\n                '<div>{notes}</div>' +\r\n                '<textarea id=\"drjs_notes\" maxlength=\"255\" />'+\r\n                '</script>',\r\n            enrollBtnTemplate: '<script type=\"text/template\">' +\r\n                '<div class=\"\">{enrollNowDescription}</div>' +\r\n                '<a class=\"dr_button\" href=\"{enrollLink}\" target=\"_blank\">{enrollNowButton}</a>' +\r\n                '</script>'\r\n        },\r\n        /**\r\n         * Bancontact\r\n         * @module bancontact\r\n         * @see https://docs.digitalriver.com/commerce-api/payment-integrations-1/digitalriver.js/payment-methods/bancontact\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        bancontact: {\r\n            name: \"Bancontact\",\r\n            elementId: \"dr_bancontact\",\r\n            disable: true,\r\n            show: false,\r\n            supportedSettings: {\r\n                \"EUR\": {\r\n                    \"minAmount\": 0.00,\r\n                    \"maxAmount\": 20000.00,\r\n                    \"countries\": [\r\n                        \"BE\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * CCAvenue\r\n         * @module ccavenue\r\n         * @see \r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        ccavenue: {\r\n            name: \"CCAvenue\",\r\n            elementId: \"dr_ccavenue\",\r\n            disable: true,\r\n            show: false,\r\n            supportedPaymentSession: true,\r\n            supportedSettings: {\r\n                \"INR\": {\r\n                    \"minAmount\": 0.00,\r\n                    \"maxAmount\": 3000000.00,\r\n                    \"countries\": [\r\n                        \"IN\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Trustly\r\n         * @module trustly\r\n         * @see \r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        trustly: {\r\n            name: \"Trustly\",\r\n            elementId: \"dr_trustly\",\r\n            disable: true,\r\n            show: false,\r\n            supportedPaymentSession: true,\r\n            supportedRecurringPayments: false,\r\n            submitThenRedirect: true,\r\n            supportedSettings:{\r\n                \"DKK\": {\r\n                    \"minAmount\": 0.01,\r\n                    \"maxAmount\": 7440.00,\r\n                    \"countries\": [\r\n                        \"DK\"\r\n                    ]\r\n                },\r\n                \"EUR\": {\r\n                    \"minAmount\": 0.01,\r\n                    \"maxAmount\": 1000.00,\r\n                    \"countries\": [\r\n                        \"AT\",\r\n                        \"DE\",\r\n                        \"EE\",\r\n                        \"ES\",\r\n                        \"FI\",\r\n                        \"LT\",\r\n                        \"LV\",\r\n                        \"NL\"\r\n                    ]\r\n                },\r\n                \"GBP\": {\r\n                    \"minAmount\": 0.01,\r\n                    \"maxAmount\": 829.00,\r\n                    \"countries\": [\r\n                        \"GB\"\r\n                    ]\r\n                },\r\n                \"NOK\": {\r\n                    \"minAmount\": 0.01,\r\n                    \"maxAmount\": 9846.00,\r\n                    \"countries\": [\r\n                        \"NO\"\r\n                    ]\r\n                },\r\n                \"SEK\": {\r\n                    \"minAmount\":0.01,\r\n                    \"maxAmount\":21520.00,\r\n                    \"countries\": [\r\n                        \"SE\"\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * CustomerCredit\r\n         * @module customerCredit\r\n         * @see\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        customerCredit: {\r\n            name: \"CustomerCredit\",\r\n            elementId: \"dr_customerCredit\",\r\n            disable: true,\r\n            show: false,\r\n            enumerable: false,\r\n            //oneTimeRedirect: true,\r\n            supportedGeographies: [],\r\n            supportedCurrencies: []\r\n        },\r\n        /**\r\n         * Dropin\r\n         * @module dropin\r\n         * @see https://docs.digitalriver.com/digital-river-api/payment-integrations-1/drop-in\r\n         * @category PaymentMethods\r\n         * @type {module:Config.PaymentConfigDefinition}\r\n         */\r\n        dropin: {\r\n            name: \"Dropin\",\r\n            elementId: \"dr_dropin\",\r\n            mountElement: {\r\n                elements: {\r\n                    dropin: {\r\n                        id: \"drjs_dropinElement\"\r\n                    }\r\n                },\r\n                required: [\"country\",\"currency\"]\r\n            },\r\n            options: {\r\n                flow: \"checkout\",\r\n                showSavePaymentAgreement: false,\r\n                showComplianceSection: false,\r\n            },\r\n            disable: true,\r\n            show: false,\r\n            style: {\r\n                base: {},\r\n                empty: {},\r\n                complete: {},\r\n                invalid: {},\r\n            },\r\n            skipPaymentTypeCheck: true,\r\n        }\r\n    },\r\n    labels: {\r\n        DETAILS: \"details\",\r\n        CLOSE: \"Close\",\r\n        DISCOUNT: \"Discount\",\r\n        TAX: \"Tax\",\r\n        SHIPPING_AND_HANDLING: \"Shipping and Handling\",\r\n        ESTIMATED_SHIPPING_AND_HANDLING: \"Estimated Shipping and Handling\",\r\n        PMT_REDIRECT_NOTICE: \"You are being redirected to the {0} site to complete payment.\",\r\n        CLICKHERE: \"Click here\",\r\n        BACK_TO_CART: \"Back To Shopping Cart\",\r\n        INVALID_BILLING_COUNTRY: \"Invalid Billing Country\",\r\n        SUB_TOTAL: \"Sub Total\",\r\n        TOTAL: \"Total\",\r\n        CHECKOUT_PAYMENT_COMPLETED: \"Payment Completed\",\r\n        VALIDATOR_INVALID_TYPE: \"Enter a valid value.\",\r\n        CHECKOUT: \"Checkout\",\r\n        error: {\r\n            \"PAYMENT_AUTHORIZATION_FAILED\":\"Payment Authorization Failed\",\r\n            \"restricted-ship-to-country\": \"Invalid Shipping Country\",\r\n            \"restricted-bill-to-country\": \"Invalid Billing Country\",\r\n            \"cart-payment-failure\": \"Payment Authorization Failed\",\r\n            \"apply-payment-failure\": \"Payment Authorization Failed\"\r\n        }\r\n    },\r\n    /**\r\n     * The template container.\r\n     * @typedef module:Config.TemplateDefinition\r\n     * @property {string} error - The template for the error dialog.\r\n     * @property {string} payment - The template for the payment in the payment section.\r\n     * @example\r\n     * template: {\r\n     *   error: '<script type=\"text/template\">' +\r\n     *     '<div class=\"modal fade in\" id=\"drjs_errorModal\" role=\"dialog\" aria-hidden=\"true\">' +\r\n     *     '<div class=\"modal-dialog modal-lg modal-content\" role=\"document\">' +\r\n     *     '<div class=\"modal-body\">' +\r\n     *     '<code class=\"dr_error\">{error}</code>' +\r\n     *     '</div>' +\r\n     *     '<div class=\"modal-footer\">' +\r\n     *     '<button type=\"button\" class=\"btn btn-default btn-secondary\" data-dismiss=\"modal\">{close}</button>' +\r\n     *     '</div>' +\r\n     *     '</div>' +\r\n     *     '</div>' +\r\n     *     '</script>',\r\n     *   payment: '<script type=\"text/template\" id=\"dr_paymentTemplate\">' +\r\n     *     '<div class=\"dr_paymentMethodBlock\" id=\"dr_{paymentId}\">' +\r\n     *     '<div class=\"dr_billingColumn\" id=\"dr_{paymentId}RadioSelect\">' +\r\n     *     '<div class=\"radio radio-wide\">' +\r\n     *     '<input type=\"radio\" name=\"paymentMethodID\" id=\"drjs_{paymentId}\" />' +\r\n     *     '<label class=\"dr_label_paymentMethodName\" for=\"drjs_{paymentId}\">' +\r\n     *     '<strong class=\"dr_paymentOptionItem\">{name}</strong>' +\r\n     *     '<span class=\"dr_expandDetails\">(<a href=\"#\" data-expand-section=\"dr_ExpandPaymentDetailsdrjs_{paymentId}\">{details}</a>)</span>' +\r\n     *     '</label>' +\r\n     *     '</div>' +\r\n     *     '</div>' +\r\n     *     '<div class=\"dr_ExpandPaymentDetailsSection\" id=\"dr_ExpandPaymentDetailsdrjs_{paymentId}\" style=\"display: none;\">{description}<div id=\"drjs_{paymentId}Element\"></div>' +\r\n     *     '</div>' +\r\n     *     '</script>'\r\n     * }\r\n     */\r\n    template: {\r\n        error: '<script type=\"text/template\">' +\r\n            '<div class=\"modal fade in\" id=\"drjs_errorModal\" role=\"dialog\" aria-hidden=\"true\">' +\r\n            '<div class=\"modal-dialog modal-lg modal-content\" role=\"document\">' +\r\n            '<div class=\"modal-body\">' +\r\n            '<code class=\"dr_error\">{error}</code>' +\r\n            '</div>' +\r\n            '<div class=\"modal-footer\">' +\r\n            '<button type=\"button\" class=\"btn btn-default btn-secondary\" data-dismiss=\"modal\">{close}</button>' +\r\n            '</div>' +\r\n            '</div>' +\r\n            '</div>' +\r\n            '</script>',\r\n        payment: '<script type=\"text/template\" id=\"dr_paymentTemplate\">' +\r\n            '<div class=\"dr_paymentMethodBlock\" id=\"dr_{paymentId}\">' +\r\n            '<div class=\"dr_billingColumn\" id=\"dr_{paymentId}RadioSelect\">' +\r\n            '<div class=\"radio radio-wide\">' +\r\n            '<input type=\"radio\" name=\"paymentMethodID\" id=\"drjs_{paymentId}\" />' +\r\n            '<label class=\"dr_label_paymentMethodName\" for=\"drjs_{paymentId}\">' +\r\n            '<strong class=\"dr_paymentOptionItem\">{name}</strong>' +\r\n            '<span class=\"dr_expandDetails\">(<a href=\"#\" data-expand-section=\"dr_ExpandPaymentDetailsdrjs_{paymentId}\">{details}</a>)</span>' +\r\n            '</label>' +\r\n            '</div>' +\r\n            '</div>' +\r\n            '<div class=\"dr_ExpandPaymentDetailsSection\" id=\"dr_ExpandPaymentDetailsdrjs_{paymentId}\" style=\"display: none;\">{description}<div id=\"drjs_{paymentId}Element\"></div>' +\r\n            '</div>' +\r\n            '</script>',\r\n    },\r\n    /**\r\n     * The redirect overlay.\r\n     * @typedef module:Config.RedirectOverlayDefinition\r\n     * @property {string} id - The ID of the overlay.\r\n     * @property {string} [type] - The type of overlay: 'open' will popup a new window/tab, 'iframe' will embed an iframe inside the overlay.\r\n     * @property {string} [inlineStyle] - The styles to override the default styles of the overlay.\r\n     * @property {string} [buttonClass] - The class name of the button in the overlay.\r\n     * @property {int} [timeout] - The number of milliseconds to wait before checking the status.\r\n     * @property {int} [iframePadding] - The padding of the iframe.\r\n     * @example\r\n     * redirectOverlay: {\r\n     *   id: \"drjs_overlay\",\r\n     *   type: \"open\", //iframe,open\r\n     *   buttonClass: \"dr_button\",\r\n     *   inlineStyle: \"#drjs_overlay{display: block;position: fixed;top: 0;left: 0;width: 100%;height: 100%;z-index: 9999;background: rgba(1,1,1,0.85);} #drjs_overlay>div{position: absolute; text-align: center; width: 100%;} #drjs_overlay>div.drjs_open{top: 40%;} #drjs_overlay>div.drjs_iframe{padding-top:50px} #drjs_overlay h4 {color:#eee;margin:4px;} #drjs_overlay iframe {width:98%; border:0; } #drjs_overlay .drjs_backToCart { position: absolute; right: 10px; top: 8px; color: #eee; } #drjs_overlay .drjs_close { position: absolute; right: 10px; top: 8px; width: 32px; height: 32px; opacity: 0.3;z-index:10000; } #drjs_overlay .drjs_close:hover { opacity: 1;}#drjs_overlay .drjs_close:before,#drjs_overlay .drjs_close:after { position: absolute; left: 15px; content: ' '; height: 33px; width: 2px;background-color: #fff; } #drjs_overlay .drjs_close:before { transform: rotate(45deg); } #drjs_overlay .drjs_close:after {   transform: rotate(-45deg); }\",\r\n     *   timeout: 5000,\r\n     *   iframePadding: 60\r\n     * }\r\n     */\r\n    redirectOverlay: {\r\n        id: \"drjs_overlay\",\r\n        type: \"open\", //iframe,open\r\n        buttonClass: \"dr_button\",\r\n        inlineStyle: \"#drjs_overlay{display: block;position: fixed;top: 0;left: 0;width: 100%;height: 100%;z-index: 9999;background: rgba(1,1,1,0.85);} #drjs_overlay>div{position: absolute; text-align: center; width: 100%;} #drjs_overlay>div.drjs_open{top: 40%;} #drjs_overlay>div.drjs_iframe{padding-top:50px} #drjs_overlay h4 {color:#eee;margin:4px;} #drjs_overlay iframe {width:98%; border:0; } #drjs_overlay .drjs_backToCart { position: absolute; right: 10px; top: 8px; color: #eee; } #drjs_overlay .drjs_close { position: absolute; right: 10px; top: 8px; width: 32px; height: 32px; opacity: 0.3;z-index:10000; } #drjs_overlay .drjs_close:hover { opacity: 1;}#drjs_overlay .drjs_close:before,#drjs_overlay .drjs_close:after { position: absolute; left: 15px; content: ' '; height: 33px; width: 2px;background-color: #fff; } #drjs_overlay .drjs_close:before { transform: rotate(45deg); } #drjs_overlay .drjs_close:after {   transform: rotate(-45deg); }\",\r\n        timeout: 5000,\r\n        iframePadding: 60\r\n    },\r\n    /**\r\n     * The options for AXIOS.\r\n     * @name apiOption\r\n     * @type {Object}\r\n     * @memberOf module:Config\r\n     * @instance\r\n     * @property {int} [maxRedirects=0]\r\n     * @property {string} [responseType='json']\r\n     * @property {int} [timeout=250000]\r\n     * @property {Object} [headers={}]\r\n     * @property {Object} [params={expand:'all',format:'json'}] - The default parameters.\r\n     */\r\n    apiOption: {\r\n        maxRedirects: 0,\r\n        responseType: 'json',\r\n        timeout: 250000,\r\n        headers: {},\r\n        params: {\r\n            expand: 'all',\r\n            format: 'json'\r\n        }\r\n    },\r\n    /**\r\n     * The external libraries used.\r\n     * @name lib\r\n     * @type {Object}\r\n     * @memberOf module:Config\r\n     * @instance\r\n     * @property {Object} drjs\r\n     * @property {Boolean} drjs.disable=false\r\n     * @property {Boolean} drjs.url=https://js.digitalriverws.com/v1/DigitalRiver.js\r\n     * @property {string} jQuery\r\n     * @property {Boolean} jQuery.disable=true - Enable if there is a jQuery conflict or if a legacy version was loaded.\r\n     * @property {string} jQuery.url=https://ui1.img.digitalrivercontent.net/Storefront/jquery/jquery-3.3.1.min.js\r\n     * @property {string} paypal\r\n     * @property {string} paypal.url=https://www.paypalobjects.com/api/checkout.js - The PayPal API SDK.\r\n     * @property {string} gibberishAES\r\n     * @property {string} gibberishAES.url=https://cdnjs.cloudflare.com/ajax/libs/gibberish-aes/1.0.0/gibberish-aes.min.js - The library for payload encryption.\r\n     */\r\n    lib: {\r\n        drjs: {\r\n            disable: false,\r\n            url: \"https://js.digitalriverws.com/v1/DigitalRiver.js\",\r\n            css: \"https://js.digitalriverws.com/v1/css/DigitalRiver.css\",\r\n            options: {}\r\n        },\r\n        jQuery: {\r\n            disable: true,\r\n            url: \"https://ui1.img.digitalrivercontent.net/Storefront/jquery/jquery-3.3.1.min.js\"\r\n        },\r\n        paypal: {\r\n            url: \"https://www.paypalobjects.com/api/checkout.js\"\r\n        },\r\n        gibberishAES: {\r\n            url: \"https://cdnjs.cloudflare.com/ajax/libs/gibberish-aes/1.0.0/gibberish-aes.min.js\"\r\n        }\r\n    },\r\n    cloudPayPayload: {},\r\n    entity: {\r\n        code: '',\r\n    },\r\n    consoleLog: true,\r\n    debug: false,\r\n};\r\n","import {Util, Global, extend} from '../util';\r\nimport {LOGGING, _CHECKOUTJS, DRJS, CONFIG, UTIL, SHOPPER, SHOPPERAPI} from '../keywords';\r\nimport {ShopperGC, ConfigGC, $} from \"./globalCommerce\";\r\nimport {Shopper} from \"../shopper\";\r\n\r\nconst document = Global.document;\r\nconst loadScriptPromise = {};\r\n/**\r\n * @class BrowserUtil\r\n * @classdesc A collection of utilities for the browser.\r\n * @extends Util\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {Session} [session]\r\n * @category Utility\r\n */\r\nclass BrowserUtil extends Util {\r\n\r\n    constructor(parent, collection, session) {\r\n        super(parent, extend({\r\n            excludeMethods: {constructor: true},\r\n            excludeBindMethods: {\r\n                loadScript: true,\r\n                loadCss: true,\r\n                axios: true,\r\n            },\r\n            writableMethods: {\r\n                loadScript: true,\r\n                loadCss: true,\r\n                log: true,\r\n                errorMessage: true,\r\n                axios: true,\r\n                error: true,\r\n                setCookie: true,\r\n                getCookie: true\r\n            }\r\n        }, collection), session ? session : Global.sessionStorage);\r\n    }\r\n\r\n    static getCurrentScript() {\r\n        if (document.currentScript) {\r\n            return document.currentScript;\r\n        }\r\n        const scripts = document.scripts || document.getElementsByTagName('script'); // Live NodeList collection\r\n        try {\r\n            // noinspection ExceptionCaughtLocallyJS\r\n            throw new Error();\r\n        } catch (err) {\r\n            // eslint-disable-next-line no-useless-escape\r\n            let i, res = ((/.*at [^\\(]*\\((.*):.+:.+\\)$/ig).exec(err.stack) || [false])[1];\r\n            for (i in scripts) {\r\n                if (scripts[i].src === res || scripts[i].readyState === \"interactive\") {\r\n                    return scripts[i];\r\n                }\r\n            }\r\n            return document.getElementById('dr_checkoutjs');\r\n        }\r\n    }\r\n\r\n    async log() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _log = _config.debug ? console.log.bind(Global.console) : Global.console.log;\r\n        if(_config.consoleLog) {\r\n            if (typeof arguments[0] == 'string' && arguments[0].indexOf(':')) {\r\n                let args = arguments[0].split(':');\r\n                if (args.length === 1) {\r\n                    arguments[0] = '%c' + args[0];\r\n                    Array.prototype.splice.call(arguments, 1, 0, 'color: blue; text-transform: capitalize');\r\n                } else if (args.length === 2) {\r\n                    arguments[0] = '%c' + args[0] + ': %c' + args[1];\r\n                    Array.prototype.splice.call(arguments, 1, 0, 'color: blue; text-transform: capitalize', 'color: green; ');\r\n                }\r\n            }\r\n            _log.apply(_cjs, arguments);\r\n        }\r\n    }\r\n\r\n    async setCookie(name, value, days) {\r\n        let expires = \"\";\r\n        if (days) {\r\n            let date = new Date();\r\n            if (!days) days = 1 / 24;\r\n            date.setTime(date.getTime() + (days * 24 * 60 * 1000));\r\n            expires = \"; expires=\" + date.toUTCString();\r\n        }\r\n        document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\r\n    }\r\n\r\n    async getCookie(name) {\r\n        let nameEQ = name + \"=\";\r\n        let ca = document.cookie.split(';');\r\n        for (let i = 0; i < ca.length; i++) {\r\n            let c = ca[i];\r\n            while (c.charAt(0) === ' ') c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\r\n        }\r\n    }\r\n\r\n    async eraseCookie(name) {\r\n        document.cookie = name + '=; Max-Age=-99999999;';\r\n    }\r\n\r\n    async errorMessage(msg) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _error = _cjs[CONFIG].debug ? console.error.bind(Global.console) : Global.console.error;\r\n        _error.apply(_cjs, arguments);\r\n        const errorJson = JSON.stringify(msg, _cjs[UTIL].replaceErrors, 2);\r\n        let errorMessage = await this.extractErrorMessage(msg);\r\n        if (!errorMessage || errorMessage.length === 0) {\r\n            errorMessage = msg;\r\n        }\r\n        let errorId = await this.extractErrorId(msg);\r\n        _cjs.emit(LOGGING, {\r\n            id: _cjs[UTIL].getTime(),\r\n            api: DRJS,\r\n            method: 'error',\r\n            responseBody: errorJson\r\n        });\r\n        if (_cjs[CONFIG].page.length && $) {\r\n            if ($().modal) {\r\n                let template = _cjs[UTIL].format($(_cjs[CONFIG].template.error).html(), {\r\n                    error: errorMessage,\r\n                    errorJson: errorJson,\r\n                    errorId: errorId,\r\n                    close: _cjs[CONFIG].labels.CLOSE\r\n                });\r\n                $('body').append(template);\r\n                $(_cjs[CONFIG].selector.errorModal).on('hidden.bs.modal', function () {\r\n                    $(_cjs[CONFIG].selector.errorModal).remove();\r\n                }).modal('show');\r\n            } else {\r\n                alert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    async updateConfig(url, refresh) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        if (_cjs[CONFIG].drCheckoutJS !== false) {\r\n            const options = _util.extend({}, _cjs[CONFIG].apiOption, {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                method: refresh ? \"post\" : \"get\",\r\n                data: `locale=${_cjs[CONFIG].locale}&currency=${_cjs[CONFIG].currency}`,\r\n                url: url,\r\n                params: {},\r\n                withCredentials: true\r\n            });\r\n            const log = {\r\n                id: _util.getTime(),\r\n                api: 'util',\r\n                method: 'updateConfig',\r\n                requestParams: options.params,\r\n                requestBody: options.data,\r\n                type: 'post',\r\n                url: options.url\r\n            };\r\n            _cjs.emit(LOGGING, log);\r\n            try {\r\n                const response = await _cjs[UTIL].axios(options);\r\n                if (response) {\r\n                    if (response.data) {\r\n                        const _cfg = response.data;\r\n                        if (_cfg && typeof _cfg.apiKey === 'object' && _cfg.apiKey.apiKey && typeof _cfg.apiKey.apiKey === 'string' ) {\r\n                            _util.extend(_cfg, _cfg.apiKey);\r\n                        }\r\n                        if (_cfg && _cfg.locale && _cfg.currency) {\r\n                            await _cjs[SHOPPER].setShopper({\r\n                                locale: _cfg.locale,\r\n                                currency: _cfg.currency,\r\n                                //isAuthenticated: _cfg.isAuthenticated,\r\n                            });\r\n                        }\r\n                        log.responseBody = response.data;\r\n                        _cjs.emit(LOGGING, log);\r\n                        return _cfg;\r\n                    }\r\n                }\r\n            } catch (ex) {\r\n                return Promise.reject(ex);\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadScript(url) {\r\n        if(loadScriptPromise.hasOwnProperty(url)) return loadScriptPromise[url];\r\n\r\n        const head = document.getElementsByTagName(\"head\")[0] || document.documentElement;\r\n        const script = document.createElement(\"script\");\r\n\r\n        script.setAttribute(\"async\", \"true\");\r\n        script.setAttribute(\"charset\", \"utf-8\");\r\n        script.setAttribute(\"type\", \"text/javascript\");\r\n        script.setAttribute(\"src\", url);\r\n        const _promise = new Promise(function (resolve) {\r\n            let done = false;\r\n            script.onload = script.onreadystatechange = function () {\r\n                if (!done && (!this.readyState ||\r\n                    this.readyState === \"loaded\" ||\r\n                    this.readyState === \"complete\")) {\r\n                    done = true;\r\n\r\n                    // Handle memory leak in IE\r\n                    script.onload = script.onreadystatechange = null;\r\n                    if (head && script.parentNode) {\r\n                        head.removeChild(script);\r\n                    }\r\n                    resolve();\r\n                }\r\n            };\r\n            head.appendChild(script);\r\n        });\r\n        loadScriptPromise[url] = _promise;\r\n        return _promise;\r\n    }\r\n\r\n    async loadCss(url) {\r\n        const head = document.getElementsByTagName(\"head\")[0] || document.documentElement;\r\n        const link = document.createElement(\"link\");\r\n\r\n        link.setAttribute(\"rel\", \"stylesheet\");\r\n        link.setAttribute(\"type\", \"text/css\");\r\n        link.setAttribute(\"href\", url);\r\n        return new Promise(function (resolve) {\r\n            let done = false;\r\n            link.onload = link.onreadystatechange = function () {\r\n                if (!done && (!this.readyState ||\r\n                    this.readyState === \"loaded\" ||\r\n                    this.readyState === \"complete\")) {\r\n                    done = true;\r\n                    resolve();\r\n                }\r\n            };\r\n            head.appendChild(link);\r\n        });\r\n    }\r\n\r\n    async loadingOverlay(close, redirectOverlay) {\r\n        if (!close) {\r\n            const _cjs = this[_CHECKOUTJS];\r\n            redirectOverlay = redirectOverlay || _cjs[UTIL].extend({}, _cjs[CONFIG].redirectOverlay);\r\n            let overlay = document.getElementById(redirectOverlay.id);\r\n            if(!overlay) {\r\n                overlay = document.createElement('div');\r\n                overlay.id = redirectOverlay.id;\r\n                const container = document.createElement('div');\r\n                container.className = \"drjs_iframe\";\r\n                const style = document.createElement('style');\r\n                style.innerHTML = redirectOverlay.inlineStyle;\r\n                overlay.append(style);\r\n                const iframe = document.createElement('iframe');\r\n                iframe.src = _cjs[CONFIG].url.paymentCallBack;\r\n                container.append(iframe);\r\n\r\n                const message = function (e) {\r\n                    if (e.data && e.data.close) {\r\n                        complete(overlay);\r\n                    }\r\n                };\r\n                Global.addEventListener('message', message, false);\r\n\r\n                overlay.append(container);\r\n                document.body.append(overlay);\r\n\r\n                const complete = function (overlay) {\r\n                    overlay.parentNode.removeChild(overlay);\r\n                    Global.removeEventListener('message', message);\r\n                };\r\n            }\r\n        } else {\r\n            Global.postMessage({\r\n                close: true\r\n            }, '*');\r\n        }\r\n    }\r\n\r\n    async _initConfig(cfg) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const currentScript = BrowserUtil.getCurrentScript.call(_cjs);\r\n        const siteId = currentScript.getAttribute(\"data-siteid\");\r\n        const config = currentScript.getAttribute(\"data-config\");\r\n\r\n        if (currentScript && siteId) {\r\n            _cjs[CONFIG].siteId = siteId;\r\n        }\r\n        if (currentScript && currentScript.src) {\r\n            _cjs[CONFIG]._src = currentScript.src;\r\n        }\r\n        let _config = null;\r\n        if (!cfg && config) {\r\n            _config = config.trim();\r\n        } else if (typeof cfg === 'string') {\r\n            _config = cfg.trim();\r\n        }\r\n        let _cfg = {};\r\n        if (_config) {\r\n            if (typeof _config === 'string') {\r\n                try {\r\n                    if (_config.startsWith('{')) {\r\n                        _cfg = JSON.parse(_config);\r\n                        if(_cfg._debug) _cfg.debug = true;\r\n                    }\r\n                } catch (e) {\r\n                    console.error(_config, e);\r\n                }\r\n                if (Object.keys(_cfg).length === 0 && _cjs[CONFIG].siteId.length === 0) {\r\n                    let urlParam = _cjs[UTIL].parseURL(_config).path.split('/');\r\n                    if (urlParam && urlParam[1] === 'store' && urlParam.length >= 2) {\r\n                        _cjs[CONFIG].siteId = urlParam[2];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * The current shopper instance.\r\n         * @name shopper\r\n         * @type Shopper|ShopperGC\r\n         * @memberof CheckoutJS\r\n         * @see {@link Shopper}\r\n         * @see {@link ShopperGC} - for Global Commerce hosted sites\r\n         * @instance\r\n         * @readonly\r\n         */\r\n        if (_cjs[UTIL].isGCPage(_cfg)) {\r\n            _cfg = _cjs[UTIL].extend(ConfigGC, _cfg);\r\n            await new ShopperGC(_cjs);\r\n        } else {\r\n            await new Shopper(_cjs);\r\n        }\r\n        if (_cfg && _cfg.locale && _cfg.currency) {\r\n            await _cjs[SHOPPER].setShopper({\r\n                locale: _cfg.locale,\r\n                currency: _cfg.currency,\r\n                isAuthenticated: !!_cfg.isAuthenticated,\r\n            });\r\n        }\r\n        if (_config && typeof _config === 'string' && _cjs[CONFIG].apiKey.length === 0 && Object.keys(_cfg).length === 0) {\r\n            _cfg = await _cjs[UTIL].updateConfig(_config);\r\n        }\r\n        return Promise.resolve(_cfg);\r\n    }\r\n\r\n    static async ready(cb) {\r\n        return new Promise(function (resolve) {\r\n            if (Global.document.readyState === 'complete') {\r\n                cb().then(resolve);\r\n            } else {\r\n                Global.document.addEventListener('readystatechange', () => {\r\n                    if (Global.document.readyState === 'complete') {\r\n                        cb().then(resolve);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    async formHelper(path, params, method = 'post') {\r\n        const form = document.createElement('form');\r\n        form.method = method;\r\n        form.action = path;\r\n        for (const key in params) {\r\n            if (params.hasOwnProperty(key)) {\r\n                const hiddenField = document.createElement('input');\r\n                hiddenField.type = 'hidden';\r\n                hiddenField.name = key;\r\n                hiddenField.value = params[key];\r\n                form.appendChild(hiddenField);\r\n            }\r\n        }\r\n        document.body.appendChild(form);\r\n        form.submit();\r\n    }\r\n\r\n    async encryptPayload(text) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const AESKey = _cjs[CONFIG].encryptionKey;\r\n        if (!Global.GibberishAES) {\r\n            await _cjs[UTIL].loadScript(_cjs[CONFIG].lib.gibberishAES.url);\r\n        }\r\n        if (typeof text === 'object') {\r\n            text = JSON.stringify(text).trim();\r\n        }\r\n        Global.GibberishAES.size(128);\r\n        const key = Global.GibberishAES.s2a(AESKey, false);\r\n        const iv = Global.GibberishAES.s2a(AESKey, false);\r\n        const plaintext = Global.GibberishAES.s2a(text, false);\r\n        const result = Global.GibberishAES.Base64.encode(Global.GibberishAES.rawEncrypt(plaintext, key, iv));\r\n        return result;\r\n    }\r\n\r\n    async jsonp(url, options) {\r\n        options = options || {};\r\n\r\n        const prefix = options.prefix || '_';\r\n        const params = options.params || {};\r\n        const callback = options.callback || 'callback';\r\n        const timeout = options.timeout ? options.timeout : 15000;\r\n        const target = document.getElementsByTagName('script')[0] || document.head;\r\n        let script;\r\n        let timer;\r\n        let cleanup;\r\n        let promise;\r\n\r\n        const id = prefix + (new Date().getTime());\r\n\r\n        cleanup = function () {\r\n\r\n            if (script && script.parentNode) {\r\n                script.parentNode.removeChild(script);\r\n            }\r\n\r\n            Global[id] = null;\r\n\r\n            if (timer) {\r\n                clearTimeout(timer);\r\n            }\r\n        };\r\n\r\n        promise = new Promise(function (resolve, reject) {\r\n            if (timeout) {\r\n                timer = setTimeout(function () {\r\n                    cleanup();\r\n                    reject(new Error('Timeout - ' + url));\r\n                }, timeout);\r\n            }\r\n\r\n            Global[id] = function (data) {\r\n                cleanup();\r\n                resolve(data);\r\n            };\r\n\r\n            Object.getOwnPropertyNames(params).forEach(function (key) {\r\n                url += (~url.indexOf('?') ? '&' : '?') + key + '=' + encodeURIComponent(params[key]);\r\n            });\r\n\r\n            url += (~url.indexOf('?') ? '&' : '?') + callback + '=' + encodeURIComponent(id);\r\n            url = url.replace('?&', '?');\r\n\r\n            script = document.createElement('script');\r\n            script.src = url;\r\n            target.parentNode.insertBefore(script, target);\r\n        });\r\n\r\n        return promise;\r\n    }\r\n}\r\n\r\nexport {BrowserUtil};\r\n","import {Base} from './base';\r\nimport {Global} from './util';\r\nimport {LOGGING, GET, POST, SHOPPERAPI, _CHECKOUTJS, CONFIG, UTIL, SHOPPER, UNDEFINED, CARTDATA} from './keywords';\r\n\r\nconst document = Global.document;\r\n\r\n/**\r\n * The cart object.\r\n * @typedef CartDataObject\r\n * @memberOf ShopperApi\r\n * @type {Object}\r\n * @property {Object} cart\r\n * @property {string} cart.id - Requisition/Cart id\r\n * @property {string} cart.businessEntityCode\r\n * @property {int} cart.totalItemsInCart\r\n * @property {ShopperApi.AddressObject} cart.billingAddress\r\n * @property {ShopperApi.AddressObject} cart.shippingAddress\r\n * @property {Object} cart.lineItems\r\n * @property {ShopperApi.LineItemObject[]} cart.lineItems.lineItem\r\n * @property {Object} cart.shippingOptions\r\n * @property {Object} cart.pricing\r\n * @property {string} cart.termsOfSalesAcceptance - \"true\"\r\n * @property {string} cart.sendEmail - \"false\"\r\n * @property {string} cart.testOrder - \"false\"\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst CartDataObject = {};\r\n\r\n/**\r\n * The query parameters.\r\n * @typedef QueryParams\r\n * @memberOf ShopperApi\r\n * @type {Object.<string, string>}\r\n * @example params: {\r\n    productID: 12345\r\n  }\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst QueryParams = {};\r\n\r\n/**\r\n * The address object.\r\n * @typedef AddressObject\r\n * @memberOf ShopperApi\r\n * @type {Object}\r\n * @property {string} id - The address type, e.g. 'billingAddress', 'shippingAddress'.\r\n * @property {string} firstName - First name\r\n * @property {string} lastName - Last name\r\n * @property {string} line1 - Address line 1\r\n * @property {string} line2 - Address line 2\r\n * @property {string} line3 - Address line 3\r\n * @property {string} phoneNumber - Phone number\r\n * @property {string} city - City\r\n * @property {string} countrySubdivision - State\r\n * @property {string} postalCode - Zip code\r\n * @property {string} country - Two-digit country code\r\n * @property {string} emailAddress - E-mail address\r\n * @property {string} phoneticFirstName - Phonetic first name\r\n * @property {string} phoneticLastName - Phonetic last name\r\n * @property {string} division - Division\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst AddressObject = {};\r\n\r\n/**\r\n * The shopper object.\r\n * @typedef ShopperObject\r\n * @memberOf ShopperApi\r\n * @type {Object}\r\n * @property {Object} shopper\r\n * @property {string} shopper.firstName - First name\r\n * @property {string} shopper.lastName - Last name\r\n * @property {string} shopper.emailAddress - Email address\r\n * @property {string} shopper.password - Password\r\n * @property {string} shopper.externalReferenceId - External reference id\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst ShopperObject = {};\r\n\r\n/**\r\n * The access token object.\r\n * @typedef AccessTokenObject\r\n * @memberOf ShopperApi\r\n * @type {Object}\r\n * @property {string} access_token - The access token.\r\n * @property {int} expires_in - The time in seconds until this token expires.\r\n * @property {string} refresh_token - Use the refresh token to obtain new access tokens.\r\n * @property {string} token_type - The type of token, e.g. \"bearer\".\r\n * @see https://commerceapi.digitalriver.com/reference#access-tokens\r\n * @example\r\n * {\r\n *  access_token: \"d93f132d7c61582472ada8caec64936e05ad0cd1b7a5802bd1…94c5286c825b189a0992c758abe0b860eb66bf36cd6289301\",\r\n *  token_type: \"bearer\",\r\n *  expires_in: 86399,\r\n *  refresh_token:\"d93f132d7c61582472ada8caec64936e05ad0cd1b7a5802bd1…2c0161a20099edca1ad68bd4d97820f62970fd08553656ac4\",\r\n *  token_type: \"bearer\"\r\n * }\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst AccessTokenObject = {};\r\n\r\n/**\r\n * The Axios options.\r\n * @typedef AxiosOptions\r\n * @memberOf ShopperApi\r\n * @type {Object}\r\n * @see https://github.com/axios/axios#request-config\r\n * @example {\r\n *  params: {},\r\n *  headers: {},\r\n *  data: {},\r\n *  auth: {}\r\n * }\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst AxiosOptions = {}\r\n\r\n/**\r\n * @class ShopperApi\r\n * @classdesc A collection of Commerce API (Shopper API) calls using the public key.\r\n * @extends Base\r\n * @param {CheckoutJS} parent\r\n * @returns {Promise<ShopperApi>}\r\n * @see https://commerceapi.digitalriver.com/reference\r\n * @category CommerceAPI\r\n */\r\nclass ShopperApi extends Base {\r\n\r\n    constructor(parent) {\r\n        super(parent, {\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {}\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retrieves the value of the specified text key - URI> GET /v1/site/text-attributes/{text}\r\n     * @param {string} text - The text string attribute\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @example\r\n     * checkoutJS.shopperApi.getText('BTN_BUY');\r\n     * @returns {Promise<{attribute:{}}>}\r\n     */\r\n    async getText(text, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({apiKey: true, authentication:true});\r\n        Object.assign(options.params, params);\r\n        const data = {};\r\n        const _text = text || '';\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/site/text-attributes/\" + _text ;\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getText';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getText',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        //\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    async getTexts(texts, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const array = [];\r\n        if(texts && Array.isArray(texts)) {\r\n            for(let i=0;i<texts.length;i++){\r\n                try {\r\n                    const data = await _cjs[SHOPPERAPI].getText(texts[i], params);\r\n                    array.push(data);\r\n                }catch(e){\r\n\r\n                }\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the site data - URI> GET /v1/shoppers/site\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @example\r\n     * checkoutJS.shopperApi.getSiteInfo();\r\n     * @returns {Promise<{site:{}}>}\r\n     */\r\n    async getSiteInfo(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        Object.assign(options.params, params);\r\n        const data = {};\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/site\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getSiteInfo';\r\n        return _cjs[UTIL].APIRequest(options);\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getSiteInfo',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the value of the specified site setting key - URI> GET /v1/site/settings/{text}\r\n     * @param {string} [text] - The site setting attribute\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @example\r\n     * checkoutJS.shopperApi.getSiteSettings('CUST_SERVICE_URL');\r\n     * @returns {Promise<{settings:{}}>}\r\n     */\r\n    async getSiteSettings(text, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({apiKey:true});\r\n        Object.assign(options.params, params);\r\n        const data = {};\r\n        const _text = text || '';\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/site/settings/\" + _text ;\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getSiteSettings';\r\n        return _cjs[UTIL].APIRequest(options);\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getSiteSettings',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    async getCartPageLink() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const url = _cjs[UTIL].parseURL(_cjs[CONFIG].drUrl);\r\n        const newUrl = _cjs[UTIL].format(_cjs[CONFIG].url.cart, {\r\n            domain: url.hostname,\r\n            siteId: _cjs[CONFIG].siteId\r\n        });\r\n        return newUrl;\r\n    }\r\n\r\n    async getInfoPageLink() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const url = _cjs[UTIL].parseURL(_cjs[CONFIG].drUrl);\r\n        const newUrl = _cjs[UTIL].format(_cjs[CONFIG].url.info, {\r\n            domain: url.hostname,\r\n            siteId: _cjs[CONFIG].siteId\r\n        });\r\n        return newUrl;\r\n    }\r\n\r\n    async getConfirmOrderPageLink() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const url = _cjs[UTIL].parseURL(_cjs[CONFIG].drUrl);\r\n        const newUrl = _cjs[UTIL].format(_cjs[CONFIG].url.confirmOrder, {\r\n            domain: url.hostname,\r\n            siteId: _cjs[CONFIG].siteId\r\n        });\r\n        return newUrl;\r\n    }\r\n\r\n    async getThankYouPageLink(requisitionId) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const url = _cjs[UTIL].parseURL(_cjs[CONFIG].drUrl);\r\n        const newUrl = _cjs[UTIL].format(_cjs[CONFIG].url.thankYou, {\r\n            domain: url.hostname,\r\n            siteId: _cjs[CONFIG].siteId,\r\n            requisitionId: requisitionId\r\n        });\r\n        return newUrl;\r\n    }\r\n\r\n    /**\r\n     * Retrieves Axios options.\r\n     * @param {Object} [setting]\r\n     * @param {Boolean} [setting.authentication] - Set to true if access token is required.\r\n     * @param {Boolean} [setting.apiKey] - Set to true to append the API key.\r\n     * @param {Boolean} [setting.authorization] - Set to false to not apply the authorization header.\r\n     * @returns {Promise<AxiosOptions>}\r\n     */\r\n    async getAPIOption(setting={}) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[UTIL].extend({\r\n            params: {\r\n            }\r\n        }, _cjs[CONFIG].apiOption);\r\n        if(setting.authorization!==false) {\r\n            const _token = await _cjs[SHOPPER].getAccessToken(setting);\r\n            if (_token) {\r\n                _config.headers['Authorization'] = 'bearer ' + _token;\r\n            } else {\r\n                setting.apiKey = true;\r\n            }\r\n        }\r\n        if(setting.apiKey){\r\n            _config.params.apiKey = _cjs[CONFIG].apiKey;\r\n        }\r\n        return _config;\r\n    }\r\n\r\n    /**\r\n     * Applies the source ID to the cart - URI> POST /v1/shoppers/me/carts/active/apply-payment-method\r\n     * @param {string} sourceId - The payment source ID.\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.applySourceToCart(\"ffffffff-ffff-ffff-ffff-ffffffffffff\");\r\n     */\r\n    async applySourceToCart(sourceId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        Object.assign(options.params, params);\r\n        const data = {\r\n            \"paymentMethod\": {\r\n                \"sourceId\": sourceId\r\n            }\r\n        };\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/apply-payment-method\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'applySourceToCart';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'applySourceToCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n        //         _cjs.emit('cartUpdated', log.responseBody);\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Applies a payment to the cart - URI> POST /v1/shoppers/me/carts/active/apply-payment-method\r\n     * @param {Object} data - The payment data, for non-DigitalRiver.js payments.\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @deprecated\r\n     * @example\r\n     * checkoutJS.shopperApi.applyPaymentToCart({type:\"wireTransfer\"});\r\n     */\r\n    async applyPaymentToCart(data, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/apply-payment-method\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'applyPaymentToCart';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'applyPaymentToCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         await _cjs[UTIL].setValue(CARTDATA, response.data);\r\n        //         _cjs.emit('cartUpdated', response.data);\r\n        //         return (response.data);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Applies the shopper's addresses to the cart - URI> POST /v1/shoppers/me/carts/active\r\n     * @param {ShopperApi.AddressObject} [billingAddress] - The billing address.\r\n     * @param {ShopperApi.AddressObject} [shippingAddress] - The shipping address.\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.applyAddressToCart({country:'US'});\r\n     */\r\n    async applyAddressToCart(billingAddress, shippingAddress, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {\r\n            \"cart\": {}\r\n        };\r\n        if (billingAddress) {\r\n            data.cart['billingAddress'] = billingAddress;\r\n        }\r\n        if (shippingAddress) {\r\n            data.cart['shippingAddress'] = shippingAddress;\r\n        }\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'applyAddressToCart';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'applyAddressToCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n        //         _cjs.emit('cartUpdated', log.responseBody);\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Updates the shipping method of the cart - URI> POST /v1/shoppers/me/carts/active/apply-shipping-option\r\n     * @param {string} shippingMethodId\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.updateSelectedShippingMethodOnCart('123456');\r\n     */\r\n    async updateSelectedShippingMethodOnCart(shippingMethodId,params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        options.params.shippingOptionId = shippingMethodId;\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/apply-shipping-option\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'updateSelectedShippingMethodOnCart';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'updateSelectedShippingMethodOnCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n        //         _cjs.emit('cartUpdated', log.responseBody);\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Submits the cart - URI> POST /v1/shoppers/me/carts/active/submit-cart\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{submitCart:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.submitCart();\r\n     */\r\n    async submitCart(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/submit-cart\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'submitCart';\r\n        return _cjs[UTIL].APIRequest(options);\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'submitCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the session token - URI> GET https://{gc-domain}/store/{siteId}/SessionToken\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<string>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getSessionToken();\r\n     */\r\n    async getSessionToken(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        if(_cjs[CONFIG].drUrl.length) {\r\n            const url = _cjs[UTIL].parseURL(_cjs[CONFIG].drUrl);\r\n            const options = _cjs[UTIL].extend({\r\n                headers: {}\r\n            }, _cjs[CONFIG].apiOption);\r\n\r\n            await _cjs[SHOPPER].applyHeaders(options);\r\n            Object.assign(options.params, params);\r\n            const requestUrl = \"https://\" + url.hostname + \"/store/\" + _cjs[CONFIG].siteId + \"/SessionToken\";\r\n            let response;\r\n            if (options.params.format === 'jsonp') {\r\n                response = await _cjs[UTIL].jsonp(requestUrl, options);\r\n                if (response) {\r\n                    await _cjs[SHOPPER].setShopper({\r\n                        sessionToken: response\r\n                    });\r\n                }\r\n            } else {\r\n                response = await _cjs[UTIL].axios.get(requestUrl, options);\r\n                if (response) {\r\n                    await _cjs[SHOPPER].setShopper({\r\n                        sessionToken: response.data,\r\n                        gcCookies: response.headers ? response.headers[\"set-cookie\"] : null\r\n                    });\r\n                }\r\n            }\r\n            return (_cjs[SHOPPER].sessionToken);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the shopper access token - URI> GET /v1/shoppers/token\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.AccessTokenObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getShopperAccessToken();\r\n     */\r\n    async getShopperAccessToken(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:false});\r\n        const data = { };\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/token\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getShopperAccessToken';\r\n        return _cjs[UTIL].APIRequest(options,async(log,response)=>{\r\n            await _cjs[SHOPPER].setShopper({\r\n                sessionToken: response.data\r\n            });\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getShopperAccessToken',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[SHOPPER].setShopper({\r\n        //             sessionToken: response.data\r\n        //         });\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Creates an OAuth Token - URI> POST /oauth20/token\r\n     * @param {Object} data\r\n     * @param {Object} data.grant_type - Available types are 'password' or 'client_credentials'.\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.AccessTokenObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.createOAuthToken({\r\n            grant_type:'password',\r\n            username:'guest',\r\n            password:'BASE64_PASSWORD'\r\n        });\r\n     */\r\n    async createOAuthToken(data={grant_type:'password'}, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        };\r\n\r\n        if(data.grant_type === 'client_credentials') {\r\n            headers['Authorization'] = 'Basic '+ _cjs[UTIL].base64Encode(_cjs[CONFIG].authUserName + ':' + _cjs[CONFIG].authPassword);\r\n        }\r\n\r\n        Object.assign(options.headers, headers);\r\n\r\n        const _data = Object.entries(data)\r\n            .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\r\n            .join('&');\r\n\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/oauth20/token\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'createOAuthToken';\r\n        return _cjs[UTIL].APIRequest(options,async(log,response)=>{\r\n            await _cjs[SHOPPER].setShopper({\r\n                sessionToken: response.data,\r\n                gcCookies: response.headers ? response.headers[\"set-cookie\"] : null\r\n            });\r\n            await _cjs[SHOPPERAPI].getShopper();\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'createOAuthToken',\r\n        //     requestParams: options.params,\r\n        //     requestBody: _data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, _data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[SHOPPER].setShopper({\r\n        //             sessionToken: response.data,\r\n        //             gcCookies: response.headers ? response.headers[\"set-cookie\"] : null\r\n        //         });\r\n        //         await _cjs[SHOPPERAPI].getShopper();\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Deletes the access token - URI> DELETE /oauth20/access-tokens\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<void>}\r\n     * @example\r\n     * checkoutJS.shopperApi.deleteToken();\r\n     */\r\n    async deleteToken(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:false});\r\n        const data = {};\r\n        Object.assign(options.params, params, {token: _cjs[SHOPPER].sessionToken.access_token});\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/oauth20/access-tokens\";\r\n        options.method = 'delete';\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'deleteToken';\r\n        return _cjs[UTIL].APIRequest(options);\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'deleteToken',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:'delete',\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.delete(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the access token - URI> GET /oauth20/access-tokens\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<Object>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getTokenInfo();\r\n     */\r\n    async getTokenInfo(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params, {token: _cjs[SHOPPER].sessionToken.access_token});\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/oauth20/access-tokens\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getTokenInfo';\r\n        return _cjs[UTIL].APIRequest(options,async(log,response)=>{\r\n            await _cjs[SHOPPER].setShopper({\r\n                locale: response.data['locale'],\r\n                currency: response.data['currency'],\r\n                tokenInfo: response.data,\r\n                isAuthenticated: ('true' === response.data['authenticated'])\r\n            });\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getTokenInfo',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         await _cjs[SHOPPER].setShopper({\r\n        //             locale: response.data['locale'],\r\n        //             currency: response.data['currency'],\r\n        //             tokenInfo: response.data,\r\n        //             isAuthenticated: ('true' === response.data['authenticated'])\r\n        //         });\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Refreshes the access token - URI> POST /oauth20/token\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.AccessTokenObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.refreshToken();\r\n     */\r\n    async refreshToken(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _shopper = _cjs[SHOPPER];\r\n        const _config = _cjs[CONFIG];\r\n        if(_shopper.sessionToken && _shopper.sessionToken.refresh_token) {\r\n            const options = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                params: {\r\n                    expand: 'all',\r\n                    format: 'json'\r\n                },\r\n                skipError: true,\r\n            };\r\n            const data = Object.entries({\r\n                client_id: _config.apiKey,\r\n                refresh_token: _shopper.sessionToken.refresh_token || '',\r\n                grant_type: 'refresh_token'\r\n            }).map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\r\n                .join('&');\r\n            Object.assign(options.params, params);\r\n            const url = _config.apiRequestUrlBase + \"/oauth20/token\";\r\n            options.method = POST;\r\n            options.url = url;\r\n            options.data = data;\r\n            options.api = SHOPPERAPI;\r\n            options.callby = 'refreshToken';\r\n            return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n                await _shopper.setShopper({\r\n                    sessionToken: log.responseBody\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Redirects a shopper to a Global Commerce hosted checkout experience - URI> GET /v1/shoppers/me/carts/active/web-checkout\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @param {string} [params.externalReferenceId]\r\n     * @param {string} [params.productId]\r\n     * @param {string} [params.themeId]\r\n     * @returns {Promise<string>}\r\n     * @example\r\n     * checkoutJS.shopperApi.webCheckout();\r\n     */\r\n    async webCheckout(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        //const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:false});\r\n        //const data = {};\r\n        const _params = Object.assign({token:await _cjs[SHOPPER].getAccessToken({authentication:true})}, params);\r\n        const _query = Object.entries(_params)\r\n            .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\r\n            .join('&');\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/web-checkout?\"+_query;\r\n        const log = {\r\n            id: _cjs[UTIL].getTime(),\r\n            api:SHOPPERAPI,\r\n            method:'webCheckout',\r\n            requestParams: params,\r\n            requestBody: {},\r\n            type:GET,\r\n            url:url\r\n        };\r\n        _cjs.emit(LOGGING,log);\r\n        return url;\r\n        /*\r\n         * not work for browser\r\n        if(isBrowser){\r\n            _cjs[UTIL].formHelper(options.url,options.params);\r\n        }else {\r\n            try {\r\n                const response = await _cjs[UTIL].axios(options);\r\n                if (response) {\r\n                    const fetchedUrls = response.request.response.fetchedUrls;\r\n                    _cjs[UTIL].log('shopperApi:webCheckout', fetchedUrls);\r\n                    return Promise.resolve(fetchedUrls);\r\n                }\r\n            } catch (ex) {\r\n                if (302 === ex.response.status) {\r\n                    return Promise.resolve(ex.response.headers.location);\r\n                } else {\r\n                    throw ex;\r\n                }\r\n            }\r\n        }\r\n        return Promise.resolve();\r\n\r\n        */\r\n    }\r\n\r\n    async createWebCheckout(data,params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:false});\r\n        Object.assign(options.params, params);\r\n        const url = _config.apiRequestUrlBase + \"/v1/shoppers/me/carts/active/web-checkout\";\r\n        let _data = _cjs[UTIL].extend(data);\r\n        if (_data && _data.cart) {\r\n            if(_data.cart.password){\r\n                _data.cart.password = _cjs[UTIL].base64Encode(_data.cart.password);\r\n            }\r\n            if(_config.encryptionKey.length){\r\n                _data = await _cjs[UTIL].encryptPayload(_data);\r\n                options.headers['Content-Type'] = 'application/json';\r\n            }else {\r\n                if (_data.cart.lineItems && _data.cart.lineItems.lineItem) {\r\n                    let items = _data.cart.lineItems.lineItem;\r\n                    items.forEach(function (lineItem) {\r\n                        if( _config.encryptionKey.length === 0 ) {\r\n                            delete lineItem.pricing;\r\n                            delete lineItem.customAttributes;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'createWebCheckout';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retrieves the cart - URI> GET /v1/shoppers/me/carts/active\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getCart();\r\n     */\r\n    async getCart(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = {};\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getCart';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response && response.data) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n        //         _cjs.emit('cartUpdated', log.responseBody);\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Updates the cart - URI> GET /v1/shoppers/me/carts/active\r\n     * @param {ShopperApi.CartDataObject} data\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @param {string} [params.externalReferenceId] - The external reference ID.\r\n     * @param {string} [params.offerId] - The offer ID.\r\n     * @param {string} [params.productId] - The product ID.\r\n     * @param {string} [params.quantity] - The number of products.\r\n     * @param {string} [params.promoCode] - The promotional code.\r\n     * @param {string} [params.termId] - The finance term ID.\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.updateCart({\r\n     *     cart:{\r\n     *         testOrder:true\r\n     *     }\r\n     * });\r\n     */\r\n    async updateCart(data, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        Object.assign(options.params, params);\r\n        const url = _config.apiRequestUrlBase + \"/v1/shoppers/me/carts/active\";\r\n        let _data = _cjs[UTIL].extend(data);\r\n\r\n        if (_data && _data.cart) {\r\n            if(_data.cart.password){\r\n                _data.cart.password = _cjs[UTIL].base64Encode(_data.cart.password);\r\n            }\r\n            if(_config.encryptionKey.length){\r\n                _data = await _cjs[UTIL].encryptPayload(_data);\r\n                options.headers['Content-Type'] = 'application/json';\r\n            }else {\r\n                if (_data.cart.lineItems && _data.cart.lineItems.lineItem) {\r\n                    let items = _data.cart.lineItems.lineItem;\r\n                    items.forEach(function (lineItem) {\r\n                        if( _config.encryptionKey.length === 0 ) {\r\n                            delete lineItem.pricing;\r\n                            delete lineItem.customAttributes;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'updateCart';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'updateCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: _data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, _data, options);\r\n        //     if (response && response.data) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n        //         _cjs.emit('cartUpdated', log.responseBody);\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Adds a product to cart - URI> GET /v1/shoppers/me/carts/active<br/>\r\n     * Looks up the &lt;input name='productID'/&gt; or &lt;input name='externalReferenceId'/&gt; fields to use as parameters.\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @param {string} [params.productID]\r\n     * @param {string} [params.externalReferenceId]\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.addToCart({productID:'1234'});\r\n     * checkoutJS.shopperApi.addToCart({externalReferenceId:'1234'});\r\n     */\r\n    async addToCart(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = Object.assign({}, params);\r\n\r\n        if (!params) {\r\n            let x = document.getElementsByName(\"productID\");\r\n            if (x && x.length) {\r\n                data.productID = x[0].value;\r\n            }\r\n            let y = document.getElementsByName(\"externalReferenceId\");\r\n            if (y && y.length) {\r\n                data.externalReferenceId = y[0].value;\r\n            }\r\n        }\r\n        Object.assign(options.params, data);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'addToCart';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'addToCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n        //         _cjs.emit('cartUpdated', log.responseBody);\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    async clearCart(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const cartData = await _cjs[UTIL].getValue(CARTDATA) || await this.getCart();\r\n        if (cartData && cartData.cart.lineItems && cartData.cart.lineItems.lineItem) {\r\n            for (let i = 0; i < cartData.cart.lineItems.lineItem.length; i++) {\r\n                const lineItem = cartData.cart.lineItems.lineItem[i];\r\n                lineItem.quantity = 0;\r\n            }\r\n        }\r\n        return this.updateCart(cartData, params);\r\n    }\r\n\r\n    /**\r\n     * Deletes the specified line item in the cart - URI> DELETE /v1/shoppers/me/carts/active/line-items/{lineItemId}\r\n     * @param {string} lineItemId - The line item ID.\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.deleteLineItem('2342342134');\r\n     */\r\n    async deleteLineItem(lineItemId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/line-items/\" + lineItemId;\r\n        options.method = 'delete';\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'deleteLineItem';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'deleteLineItem',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:'delete',\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.delete(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Applies a coupon code to the cart - URI> POST /v1/shoppers/me/carts/active\r\n     * @param {ShopperApi.QueryParams|string} [params] - The coupon code.\r\n     * @param {string} [params.promoCode] - The coupon code.\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.applyCouponToCart('COUPONCODE');\r\n     * checkoutJS.shopperApi.applyCouponToCart({promoCode:'COUPONCODE'});\r\n     */\r\n    async applyCouponToCart(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n\r\n        if(typeof params === 'string'){\r\n            options.params.promoCode = params;\r\n        }else if(typeof params === 'object') {\r\n            Object.assign(options.params, params);\r\n        }\r\n\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'applyCouponToCart';\r\n        return _cjs[UTIL].APIRequest(options,async(log)=>{\r\n            await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n            _cjs.emit('cartUpdated', log.responseBody);\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'applyCouponToCart',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[UTIL].setValue(CARTDATA, log.responseBody);\r\n        //         _cjs.emit('cartUpdated', log.responseBody);\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n\r\n    async getTaxRegistrations(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        Object.assign(options.params, params);\r\n        const cartData = await _cjs[UTIL].getValue(CARTDATA) || await this.getCart();\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/carts/\"+cartData.cart.id+\"/tax-registrations\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = {};\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getTaxRegistrations';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n\r\n    /**\r\n     * Retrieves the shopper data - URI> GET /v1/shoppers/me\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.CartDataObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getShopper();\r\n     */\r\n    async getShopper(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getShopper';\r\n        return _cjs[UTIL].APIRequest(options,async(log,response)=>{\r\n            await _cjs[SHOPPER].setShopper({\r\n                locale: response.data.shopper.locale,\r\n                currency: response.data.shopper.currency,\r\n                isAuthenticated: !!response.data.shopper.username,\r\n            });\r\n        });\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getShopper',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         await _cjs[SHOPPER].setShopper({\r\n        //             locale: response.data.shopper.locale,\r\n        //             currency: response.data.shopper.currency,\r\n        //             isAuthenticated: !!response.data.shopper.username,\r\n        //         });\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Creates an OAuth token for an authenticated shopper, i.e. shopper logs in.\r\n     * @param {string} username\r\n     * @param {string} password\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.AccessTokenObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.login('username','password');\r\n     */\r\n    async login(username, password, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _params = {\r\n            grant_type:'password',\r\n            username:username,\r\n            password:_cjs[UTIL].base64Encode(password),\r\n            dr_limited_token: (await _cjs[SHOPPER].getAccessToken()) || ''\r\n        };\r\n\r\n        try {\r\n            const access_token = await this.createOAuthToken(_params,params);\r\n            return access_token;\r\n        }catch(ex){\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes the access token for an authenticated shopper, i.e. shopper logs out.\r\n     * @returns {Promise<void>}\r\n     * @example\r\n     * checkoutJS.shopperApi.logout();\r\n     */\r\n    async logout() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        await this.deleteToken();\r\n        await _cjs[SHOPPER].destroy();\r\n    }\r\n\r\n    /**\r\n     * Creates a shopper record - URI> POST /v1/shoppers\r\n     * @param {ShopperApi.ShopperObject} data\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.AccessTokenObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.createShopper({\r\n     *     shopper:{\r\n     *         username: 'test@email.com',\r\n     *         emailAddress: 'test@email.com',\r\n     *         externalReferenceId: 'test',\r\n     *         firstName: 'firstName',\r\n     *         lastName: 'lastName',\r\n     *         password: 'password',\r\n     *     }\r\n     * });\r\n     */\r\n    async createShopper(data, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        const _data = _cjs[UTIL].extend({},data);\r\n        Object.assign(options.params, params);\r\n        if(_data.shopper && _data.shopper.password) {\r\n            _data.shopper.password = _cjs[UTIL].base64Encode(_data.shopper.password);\r\n        }\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'createShopper';\r\n        return _cjs[UTIL].APIRequest(options,async()=>{\r\n            return this.login(data.shopper.username,data.shopper.password);\r\n        });\r\n\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'createShopper',\r\n        //     requestParams: options.params,\r\n        //     requestBody: _data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     await _cjs[UTIL].axios.post(url, _data, options);\r\n        //     const response =  await this.login(data.shopper.username,data.shopper.password);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Updates the shopper record - URI> POST /v1/shoppers/me\r\n     * @param {ShopperApi.ShopperObject} data\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.ShopperObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.updateShopper({\r\n     *     shopper:{\r\n     *         username: 'test@email.com',\r\n     *         emailAddress: 'test@email.com',\r\n     *         externalReferenceId: 'test',\r\n     *         firstName: 'firstName',\r\n     *         lastName: 'lastName',\r\n     *         password: 'password',\r\n     *     }\r\n     * });\r\n     */\r\n    async updateShopper(data, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const _data = _cjs[UTIL].extend({},data);\r\n        Object.assign(options.params, params);\r\n        if(_data.shopper && _data.shopper.password) {\r\n            _data.shopper.password = _cjs[UTIL].base64Encode(_data.shopper.password);\r\n        }\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'updateShopper';\r\n        return _cjs[UTIL].APIRequest(options,async()=>{\r\n            return (await _cjs[SHOPPERAPI].getShopper() || {});\r\n        });\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'updateShopper',\r\n        //     requestParams: options.params,\r\n        //     requestBody: _data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, _data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = await _cjs[SHOPPERAPI].getShopper() || {};\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    async getPaymentOptions(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/payment-options\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getPaymentOptions';\r\n        return _cjs[UTIL].APIRequest(options);\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getPaymentOptions',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url: url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    async getPaymentOption(paymentOptionId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/payment-options/\"+paymentOptionId;\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getPaymentOption';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getPaymentOption',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url: url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    async updatePaymentOption(data, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication: true});\r\n        const _data = _cjs[UTIL].extend({},data);\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/payment-options/\" + data.paymentOption.id;\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'updatePaymentOption';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n    async deletePaymentOption(paymentOptionId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication: true});\r\n        const _data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/payment-options/\" + paymentOptionId;\r\n        options.method = 'delete';\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'deletePaymentOption';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n    async getAddresses(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/addresses\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getAddresses';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n    async updateAddress(data, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication: true});\r\n        const _data = _cjs[UTIL].extend({},data);\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/addresses/\" + data.address.id;\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'updateAddress';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n    async deleteAddress(addressId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication: true});\r\n        const _data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/addresses/\" + addressId;\r\n        options.method = 'delete';\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'deleteAddress';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the account page URL - URI> GET /v1/shoppers/me/account\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<string>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getShopperAccountPage().then(function(url){\r\n     *     location.href=url;\r\n     * });\r\n     */\r\n    async getShopperAccountPage(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _params = Object.assign({token:await _cjs[SHOPPER].getAccessToken({authentication:true})}, params);\r\n        const _query = Object.entries(_params)\r\n            .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\r\n            .join('&');\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/account?\"+_query;\r\n        const log = {\r\n            id: _cjs[UTIL].getTime(),\r\n            api:SHOPPERAPI,\r\n            method:'getShopperAccount',\r\n            requestParams: _params,\r\n            requestBody: {},\r\n            type:GET,\r\n            url:url\r\n        };\r\n        _cjs.emit(LOGGING,log);\r\n        return (url);\r\n    }\r\n\r\n    /**\r\n     * Applies the payment source to the shopper - URI> GET /v1/shoppers/me/account\r\n     * @param {string} sourceId - The unique identifier for the payment option.\r\n     * @param {string} nickName - The nickname associated with the payment option.\r\n     * @param {string} isDefault - When this value is set to true, the payment option is the shopper's default payment option.\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<void>}\r\n     * @example\r\n     * checkoutJS.shopperApi.applySourceToShopper('ffffffff-ffff-ffff-ffff-ffffffffffff','My Visa','false');\r\n     */\r\n    async applySourceToShopper(sourceId, nickName, isDefault='false', params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {\r\n            \"paymentOption\": {\r\n                \"nickName\": nickName.toString(),\r\n                \"isDefault\": isDefault.toString(),\r\n                \"sourceId\": sourceId\r\n            }\r\n        };\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/payment-options\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'applySourceToShopper';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'applySourceToShopper',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Applies the shopper data to the cart - URI> GET /v1/shoppers/me/carts/active/apply-shopper\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @param {string} [params.paymentOptionId] - The payment option ID.\r\n     * @param {string} [params.billingAddressId] - The billing address ID.\r\n     * @param {string} [params.shippingAddressId] - The shipping address ID.\r\n     * @returns {Promise<void>}\r\n     * @example\r\n     * checkoutJS.shopperApi.applyShopperToCart({paymentOptionId:'10659974519'});\r\n     */\r\n    async applyShopperToCart(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/apply-shopper\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'applyShopperToCart';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n    /**\r\n     * The generic API call method.\r\n     * @param {string} uri - The URI of the request.\r\n     * @param {string} data - The data to be sent with the request.\r\n     * @param {string} method - The HTTP method to use for the request, e.g. 'get', 'post', 'delete'.\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<Object>}\r\n     * @example\r\n     * checkoutJS.shopperApi.applyUri('https://api.digitalriver.com/v1/shoppers/me/carts/active',{},'get');\r\n     */\r\n    async applyUri(uri, data, method, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        Object.assign(options.params, params);\r\n        if(uri.startsWith('/')) {\r\n            uri+= _config.apiRequestUrlBase + uri;\r\n        }\r\n        data = data || {};\r\n        options.method = method ? method : GET;\r\n        options.url = uri;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'applyUri';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'applyUri',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:options.method,\r\n        //     url:options.url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        //\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios(options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrives a list of all available payment methods for the cart - URI> GET /v1/shoppers/me/carts/active/payment-methods\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{paymentMethods:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getPaymentMethods();\r\n     */\r\n    async getPaymentMethods(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/payment-methods\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getPaymentMethods';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getPaymentMethods',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url: url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the product data of the specified product - URI> GET /v1/shoppers/me/products/{productID}\r\n     * @param {string} productID\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{product:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getProduct('12345678');\r\n     */\r\n    async getProduct(productID, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/products/\"+productID;\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getProduct';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getProduct',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of all the products in the catalog - URI> GET /v1/shoppers/me/products\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{products:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getProducts();\r\n     */\r\n    async getProducts(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/products\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getProducts';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getProducts',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the product family attributes of the specified product - URI> GET /v1/shoppers/me/products/{productID}/family-attributes\r\n     * @param {string} productID\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{familyAttributes:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getProductsFamilyAttributes('12345678');\r\n     */\r\n    async getProductsFamilyAttributes(productID, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/products/\"+productID+\"/family-attributes\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getProductsFamilyAttributes';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getProducts',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of the product categories or the specified category if the category ID is provided - URI> GET /v1/shoppers/me/categories\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{categories:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getProductCategory('12345678');\r\n     */\r\n    async getCategories( params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        Object.assign(options.params, params);\r\n        const data = {};\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/categories\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getCategories';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the product category data of the specified category - URI> GET /v1/shoppers/me/categories/{categoryId}\r\n     * @param {string} categoryId\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{products:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getProductCategory('12345678');\r\n     */\r\n    async getProductCategory(categoryId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        if (categoryId) {\r\n            const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n            Object.assign(options.params, params);\r\n            const data = {};\r\n            const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/categories/\" + categoryId;\r\n            options.method = GET;\r\n            options.url = url;\r\n            options.data = data;\r\n            options.api = SHOPPERAPI;\r\n            options.callby = 'getProductCategory';\r\n            return _cjs[UTIL].APIRequest(options);\r\n\r\n            // const log = {\r\n            //     id: getTime(),\r\n            //     api:SHOPPERAPI,\r\n            //     method:'getProductCategory',\r\n            //     requestParams: options.params,\r\n            //     requestBody: {},\r\n            //     type:GET,\r\n            //     url:url\r\n            // };\r\n            // _cjs.emit(_logging,log);\r\n            // try {\r\n            //     const response = await _cjs[UTIL].axios.get(url, options);\r\n            //     if (response) {\r\n            //         log.responseBody = response.data;\r\n            //         _cjs.emit(_logging,log);\r\n            //         return (log.responseBody);\r\n            //     }\r\n            // }catch(ex){\r\n            //     log.error = ex;\r\n            //     _cjs.emit(_logging,log);\r\n            //     throw ex;\r\n            // }\r\n        }\r\n        return Promise.reject(new Error(\"categoryId could not null\"));\r\n    }\r\n\r\n    /**\r\n     * Retrieves the products of the specified category - URI> GET /v1/shoppers/me/categories/{categoryId}\r\n     * @param {string} categoryId\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{products:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getProductsInCategory('12345678');\r\n     */\r\n    async getProductsInCategory(categoryId,params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        if (categoryId) {\r\n            const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n            Object.assign(options.params, params);\r\n            const data = {};\r\n            const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/categories/\" + categoryId + \"/products\";\r\n            options.method = GET;\r\n            options.url = url;\r\n            options.data = data;\r\n            options.api = SHOPPERAPI;\r\n            options.callby = 'getProductsInCategory';\r\n            return _cjs[UTIL].APIRequest(options);\r\n\r\n            // const log = {\r\n            //     id: getTime(),\r\n            //     api:SHOPPERAPI,\r\n            //     method:'getProductsInCategory',\r\n            //     requestParams: options.params,\r\n            //     requestBody: {},\r\n            //     type:GET,\r\n            //     url:url\r\n            // };\r\n            // _cjs.emit(_logging,log);\r\n            // try {\r\n            //     const response = await _cjs[UTIL].axios.get(url, options);\r\n            //     if (response) {\r\n            //         log.responseBody = response.data;\r\n            //         _cjs.emit(_logging,log);\r\n            //         return (log.responseBody);\r\n            //     }\r\n            // }catch(ex){\r\n            //     log.error = ex;\r\n            //     _cjs.emit(_logging,log);\r\n            //     throw ex;\r\n            // }\r\n        }\r\n        return Promise.reject(new Error(\"categoryId could not null\"));\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data of the spcified offer - URI> GET /v1/shoppers/me/offers/{offerId}\r\n     * @param {string} offerId\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{offer:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getOffer('12345678');\r\n     */\r\n    async getOffer(offerId,params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        if (offerId) {\r\n            const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n            const data = {};\r\n            Object.assign(options.params, params);\r\n            const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/offers/\" + offerId;\r\n            options.method = GET;\r\n            options.url = url;\r\n            options.data = data;\r\n            options.api = SHOPPERAPI;\r\n            options.callby = 'getOffer';\r\n            return _cjs[UTIL].APIRequest(options);\r\n\r\n            // const log = {\r\n            //     id: getTime(),\r\n            //     api:SHOPPERAPI,\r\n            //     method:'getOffer',\r\n            //     requestParams: options.params,\r\n            //     requestBody: {},\r\n            //     type:GET,\r\n            //     url:url\r\n            // };\r\n            // _cjs.emit(_logging,log);\r\n            // try {\r\n            //     const response = await _cjs[UTIL].axios.get(url, options);\r\n            //     if (response) {\r\n            //         log.responseBody = response.data;\r\n            //         _cjs.emit(_logging,log);\r\n            //         return (log.responseBody);\r\n            //     }\r\n            // }catch(ex){\r\n            //     log.error = ex;\r\n            //     _cjs.emit(_logging,log);\r\n            //     throw ex;\r\n            // }\r\n        }\r\n        return Promise.reject( new Error(\"offerId could not null\"));\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of the cart-specific point of promotions - URI> GET /v1/shoppers/me/carts/active/point-of-promotions\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{pointOfPromotions:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getCartPointOfPromotions();\r\n     */\r\n    async getCartPointOfPromotions(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/carts/active/point-of-promotions\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getCartPointOfPromotions';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getCartPointOfPromotions',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of point of promotions from the shopper - URI> GET /v1/shoppers/me/point-of-promotions\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{pointOfPromotions:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getPointOfPromotions();\r\n     */\r\n    async getPointOfPromotions(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/point-of-promotions\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getPointOfPromotions';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getPointOfPromotions',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the data of the specified point of promotion - URI> GET /v1/shoppers/me/carts/active/point-of-promotions/{popName}\r\n     * @param {string} popName\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{pointOfPromotion:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getPointOfPromotion('Banner_ShoppingCartLocal');\r\n     */\r\n    async getPointOfPromotion(popName,params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n        if (popName) {\r\n            const data = {};\r\n            Object.assign(options.params, params);\r\n            const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/point-of-promotions/\" + popName;\r\n            options.method = GET;\r\n            options.url = url;\r\n            options.data = data;\r\n            options.api = SHOPPERAPI;\r\n            options.callby = 'getPointOfPromotion';\r\n            return _cjs[UTIL].APIRequest(options);\r\n\r\n            // const log = {\r\n            //     id: getTime(),\r\n            //     api:SHOPPERAPI,\r\n            //     method:'getPointOfPromotion',\r\n            //     requestParams: options.params,\r\n            //     requestBody: {},\r\n            //     type:GET,\r\n            //     url:url\r\n            // };\r\n            // _cjs.emit(_logging,log);\r\n            // try {\r\n            //     const response = await _cjs[UTIL].axios.get(url, options);\r\n            //     if (response) {\r\n            //         log.responseBody = response.data;\r\n            //         _cjs.emit(_logging,log);\r\n            //         return (log.responseBody);\r\n            //     }\r\n            // }catch(ex){\r\n            //     log.error = ex;\r\n            //     _cjs.emit(_logging,log);\r\n            //     throw ex;\r\n            // }\r\n        }\r\n        return Promise.reject(new Error(\"popName could not null\"));\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of all the offers of the specified point of promotion - URI> GET /v1/shoppers/me/point-of-promotions/{popName}/offers\r\n     * @param {string} popName\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{offers:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getPointOfPromotionOffer('Banner_ShoppingCartLocal');\r\n     */\r\n    async getPointOfPromotionOffer(popName,params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        let options = await _cjs[SHOPPERAPI].getAPIOption({});\r\n        if (popName) {\r\n            const data = {};\r\n            Object.assign(options.params, params);\r\n            const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/point-of-promotions/\" + popName + \"/offers\";\r\n            options.method = GET;\r\n            options.url = url;\r\n            options.data = data;\r\n            options.api = SHOPPERAPI;\r\n            options.callby = 'getPointOfPromotionOffer';\r\n            return _cjs[UTIL].APIRequest(options);\r\n\r\n            // const log = {\r\n            //     id: getTime(),\r\n            //     api:SHOPPERAPI,\r\n            //     method:'getPointOfPromotion',\r\n            //     requestParams: options.params,\r\n            //     requestBody: {},\r\n            //     type:GET,\r\n            //     url:url\r\n            // };\r\n            // _cjs.emit(_logging,log);\r\n            // try {\r\n            //     const response = await _cjs[UTIL].axios.get(url, options);\r\n            //     if (response) {\r\n            //         log.responseBody = response.data;\r\n            //         _cjs.emit(_logging,log);\r\n            //         return (log.responseBody);\r\n            //     }\r\n            // }catch(ex){\r\n            //     log.error = ex;\r\n            //     _cjs.emit(_logging,log);\r\n            //     throw ex;\r\n            // }\r\n        }\r\n        return Promise.reject(new Error(\"popName could not null\"));\r\n    }\r\n\r\n    /**\r\n     * Retrieves the order data of the specified order - URI> GET /v1/shoppers/me/orders/{orderId}\r\n     * @param {string} orderId\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{order:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getOrder('12345678');\r\n     */\r\n    async getOrder(orderId,params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        if (orderId) {\r\n            const data = {};\r\n            Object.assign(options.params, params);\r\n            const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/orders/\" + orderId;\r\n            options.method = GET;\r\n            options.url = url;\r\n            options.data = data;\r\n            options.api = SHOPPERAPI;\r\n            options.callby = 'getOrder';\r\n            return _cjs[UTIL].APIRequest(options);\r\n\r\n            // const log = {\r\n            //     id: getTime(),\r\n            //     api:SHOPPERAPI,\r\n            //     method:'getOrder',\r\n            //     requestParams: options.params,\r\n            //     requestBody: {},\r\n            //     type:GET,\r\n            //     url:url\r\n            // };\r\n            // _cjs.emit(_logging,log);\r\n            // try {\r\n            //     const response = await _cjs[UTIL].axios.get(url, options);\r\n            //     if (response) {\r\n            //         log.responseBody = response.data;\r\n            //         _cjs.emit(_logging,log);\r\n            //         return (log.responseBody);\r\n            //     }\r\n            // }catch(ex){\r\n            //     log.error = ex;\r\n            //     _cjs.emit(_logging,log);\r\n            //     throw ex;\r\n            // }\r\n        }\r\n        return Promise.reject(new Error(\"orderId could not null\"));\r\n    }\r\n\r\n    //TODO: under in develop\r\n    async getOrderDetail(requisitionId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        if (requisitionId) {\r\n            const data = {};\r\n            Object.assign(options.params, params);\r\n            const _url = _cjs[UTIL].parseURL(_cjs[CONFIG].drUrl);\r\n            const url = _cjs[UTIL].format(_cjs[CONFIG].url.orderDetail, {\r\n                domain: _url.hostname,\r\n                siteId: _cjs[CONFIG].siteId,\r\n                requisitionId: requisitionId\r\n            });\r\n            options.method = GET;\r\n            options.url = url;\r\n            options.data = data;\r\n            options.api = SHOPPERAPI;\r\n            options.callby = 'getOrderDetail';\r\n            return _cjs[UTIL].APIRequest(options);\r\n\r\n            // const log = {\r\n            //     id: getTime(),\r\n            //     api:SHOPPERAPI,\r\n            //     method:'getOrderDetail',\r\n            //     requestParams: options.params,\r\n            //     requestBody: {},\r\n            //     type:GET,\r\n            //     url:url\r\n            // };\r\n            // _cjs.emit(_logging,log);\r\n            // try {\r\n            //     const response = await _cjs[UTIL].axios.get(url, options);\r\n            //     if (response) {\r\n            //         log.responseBody = response.data;\r\n            //         _cjs.emit(_logging,log);\r\n            //         return (log.responseBody);\r\n            //     }\r\n            // }catch(ex){\r\n            //     log.error = ex;\r\n            //     _cjs.emit(_logging,log);\r\n            //     throw ex;\r\n            // }\r\n        }\r\n        return Promise.reject(new Error(\"orderId could not null\"));\r\n    }\r\n\r\n    /**\r\n     * Retrieves the history of orders for the shopper. - URI> GET /v1/shoppers/me/orders\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{orders:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getOrders();\r\n     */\r\n    async getOrders(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/orders\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getOrders';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getOrders',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the return data of the specified order. - URI> GET /v1/shoppers/me/orders/{orderId}/returns\r\n     * @param {string} orderId\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{returns:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getOrderReturns('12345678');\r\n     */\r\n    async getOrderReturns(orderId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/orders/\"+orderId+\"/returns\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getOrderReturns';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getOrderReturns',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of subscriptions - URI> GET /v1/shoppers/me/subscriptions\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{subscriptions:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getSubscriptions();\r\n     */\r\n    async getSubscriptions(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/subscriptions\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getSubscriptions';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getSubscriptions',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves the subscription data of the specified subscription - URI> GET /v1/shoppers/me/subscriptions/{subscriptionId}\r\n     * @param {string} subscriptionId\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{subscription:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getSubscription('12345678');\r\n     */\r\n    async getSubscription(subscriptionId, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/subscriptions/\"+subscriptionId;\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getSubscription';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getSubscription',\r\n        //     requestParams: options.params,\r\n        //     requestBody: {},\r\n        //     type:GET,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.get(url, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Retrieves a shopper-specific private store - URI> GET /v1/shoppers/me/purchase-plan\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{purchasePlan:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.getPrivateStores();\r\n     */\r\n    async getPrivateStores(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/purchase-plan\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'getPrivateStores';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n    }\r\n\r\n    /**\r\n     * Retrieves a list of private stores via search parameters - URI> GET /v1/shoppers/me/purchase-plan/search\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @param {string} [params.emailAddress] - The email address to use for the search.\r\n     * @param {string} [params.emailDomain] - The email domain to use for the search.\r\n     * @param {string} [params.emailInvitationAddress] - An email address associated with an invitation to a private store. When a private store shopper invites a friend to view a private store, the invitation email address is that of the inviter.\r\n     * @param {string} [params.emailInvitationPin] - A PIN associated with an email invitation. If a private store shopper invites a friend to view a private store, the PIN is provided with the invitation. Note, Required only if emailInvitationAddress was provided.\r\n     * @param {string} [params.genericIdentifier]\r\n     * @param {string} [params.genericIdentifierPin]\r\n     * @param {string} [params.ipAddress]\r\n     * @param {string} [params.referralUrl]\r\n     * @returns {Promise<{purchasePlan:{}}>}\r\n     * @see https://commerceapi.digitalriver.com/reference#v1shoppersmepurchaseplansearchget\r\n     * @example\r\n     * checkoutJS.shopperApi.searchPrivateStores({\r\n     *     emailDomain:\"digitalriver.com\"\r\n     * });\r\n     */\r\n    async searchPrivateStores(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        const data = {};\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/purchase-plan/search\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'searchPrivateStores';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n    }\r\n\r\n    /**\r\n     * Retrieves a shopper-specific private store - URI> GET /v1/shoppers/me/purchase-plan/authorize\r\n     * @param {ShopperApi.QueryParams} data\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<{purchasePlan:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.authorizePrivateStore({\r\n     *      \"purchasePlanAuthorize\": {\r\n     *          \"id\": \"878409610016\",\r\n     *          \"targetMarketId\": \"878394610016\",\r\n     *          \"emailDomain\": \"digitalriver.com\"\r\n     *      }\r\n     *  });\r\n     *  checkoutJS.shopperApi.authorizePrivateStore({\r\n     *      \"purchasePlanAuthorize\": {\r\n     *          \"id\": \"878409610016\",\r\n     *          \"targetMarketId\": \"878394610016\",\r\n     *          \"emailAddress\": \"oiong@digitalriver.com\"\r\n     *      }\r\n     *  })\r\n     *  checkoutJS.shopperApi.authorizePrivateStore({\r\n     *      \"purchasePlanAuthorize\": {\r\n     *          \"id\": \"878409610016\",\r\n     *          \"targetMarketId\": \"878394610016\",\r\n     *          \"ipAddress\": \"1.2.3.4\"\r\n     *      }\r\n     *  })\r\n     *  checkoutJS.shopperApi.authorizePrivateStore({\r\n     *      \"purchasePlanAuthorize\": {\r\n     *          \"id\": \"878409610016\",\r\n     *          \"targetMarketId\": \"878394610016\",\r\n     *          \"referralUrl\": \"https://gc.digitalriver.com/\"\r\n     *      }\r\n     *  })\r\n     *  checkoutJS.shopperApi.authorizePrivateStore({\r\n     *      \"purchasePlanAuthorize\": {\r\n     *          \"id\": \"878409610016\",\r\n     *          \"targetMarketId\": \"878394610016\",\r\n     *          \"emailInvitationAddress\": \"oiong@digitalriver.com\",\r\n     *          \"emailInvitationPin\": \"I2wbfVSg\"\r\n     *      }\r\n     *  })\r\n\r\n     */\r\n    async authorizePrivateStore(data, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption({authentication:true});\r\n        Object.assign(options.params, params);\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/me/purchase-plan/authorize\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'authorizePrivateStore';\r\n        return _cjs[UTIL].APIRequest(options);\r\n    }\r\n\r\n    /**\r\n     * Looks up an order - URI> GET /v1/shoppers/order-lookup\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @param {string} [params.orderId] - The order ID for the order ID and password lookup option.\r\n     * @param {string} [params.password] - The order password for the order ID and password lookup option.\r\n     * @param {string} [params.creditCardLastDigits] - The last 4 digits of the credit card used to place the order for the credit card and e-mail address lookup option.\r\n     * @param {string} [params.emailAddress] - The e-mail address used to place the order for the credit card and e-mail address lookup option.\r\n     * @returns {Promise<{orders:{}}>}\r\n     * @example\r\n     * checkoutJS.shopperApi.lookUpOrder({\r\n     *     orderId: '1234567',\r\n     *     password: 'password'\r\n     * });\r\n     * checkoutJS.shopperApi.lookUpOrder({\r\n     *     creditCardLastDigits: '1234',\r\n     *     emailAddress: 'test@email.com'\r\n     * });\r\n     */\r\n    async lookUpOrder(params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const options = await _cjs[SHOPPERAPI].getAPIOption();\r\n\r\n        Object.assign(options.params, params);\r\n        const _params = Object.assign({token:await _cjs[SHOPPER].getAccessToken({authentication:true})}, params);\r\n        const data = Object.entries(_params)\r\n            .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\r\n            .join('&');\r\n        const url = _cjs[CONFIG].apiRequestUrlBase + \"/v1/shoppers/order-lookup\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = SHOPPERAPI;\r\n        options.callby = 'lookUpOrder';\r\n        return _cjs[UTIL].APIRequest(options);\r\n\r\n        // const log = {\r\n        //     id: getTime(),\r\n        //     api:SHOPPERAPI,\r\n        //     method:'getCurrentOrder',\r\n        //     requestParams: options.params,\r\n        //     requestBody: data,\r\n        //     type:POST,\r\n        //     url:url\r\n        // };\r\n        // _cjs.emit(_logging,log);\r\n        // try {\r\n        //     const response = await _cjs[UTIL].axios.post(url, data, options);\r\n        //     if (response) {\r\n        //         log.responseBody = response.data;\r\n        //         _cjs.emit(_logging,log);\r\n        //         return (log.responseBody);\r\n        //     }\r\n        // }catch(ex){\r\n        //     log.error = ex;\r\n        //     _cjs.emit(_logging,log);\r\n        //     throw ex;\r\n        // }\r\n    }\r\n\r\n    async convertPaymentRequestAddressToShopperApiAddress(prAddressObject, addressType) {\r\n        const _undefined = UNDEFINED;\r\n        let name, firstName, lastName, phone, email, line1, line2, city, postalCode, state, phoneticFirstName, phoneticLastName, companyName, division , country = '';\r\n        if (prAddressObject) {\r\n            if (typeof prAddressObject.name !== _undefined) {\r\n                name = prAddressObject.name;\r\n            }\r\n\r\n            if (typeof prAddressObject.firstName !== _undefined) {\r\n                firstName = prAddressObject.firstName;\r\n            }\r\n\r\n            if (typeof prAddressObject.lastName !== _undefined) {\r\n                lastName = prAddressObject.lastName;\r\n            }\r\n\r\n            if (typeof prAddressObject.phone !== _undefined) {\r\n                phone = prAddressObject.phone;\r\n            }\r\n\r\n            if (typeof prAddressObject.email !== _undefined) {\r\n                email = prAddressObject.email;\r\n            }\r\n\r\n            if (typeof prAddressObject.organization !== _undefined) {\r\n                companyName = prAddressObject.organization;\r\n            }\r\n\r\n            let _address = prAddressObject.address;\r\n            if (!_address) {\r\n                _address = prAddressObject\r\n            }\r\n            if (typeof _address.line1 !== _undefined) {\r\n                line1 = _address.line1;\r\n            }\r\n\r\n            if (typeof _address.line2 !== _undefined) {\r\n                line2 = _address.line2;\r\n            }\r\n\r\n            if (typeof _address.city !== _undefined) {\r\n                city = _address.city;\r\n            }\r\n\r\n            if (typeof _address.postalCode !== _undefined) {\r\n                postalCode = _address.postalCode;\r\n            }\r\n\r\n            if (typeof _address.state !== _undefined) {\r\n                state = _address.state;\r\n            }\r\n\r\n            if (typeof _address.country !== _undefined) {\r\n                country = _address.country.toUpperCase();\r\n            }\r\n\r\n            let additionalAddressInfo = prAddressObject.additionalAddressInfo;\r\n            if(additionalAddressInfo) {\r\n                if (typeof additionalAddressInfo.division !== _undefined) {\r\n                    division = additionalAddressInfo.division;\r\n                }\r\n                if (typeof additionalAddressInfo.phoneticFirstName !== _undefined) {\r\n                    phoneticFirstName = additionalAddressInfo.phoneticFirstName;\r\n                }\r\n                if (typeof additionalAddressInfo.phoneticLastName !== _undefined) {\r\n                    phoneticLastName = additionalAddressInfo.phoneticLastName;\r\n                }\r\n            }\r\n\r\n            const address = {\r\n                \"id\": addressType,\r\n                \"name\": name,\r\n                \"firstName\": firstName,\r\n                \"lastName\": lastName,\r\n                \"line1\": line1,\r\n                \"line2\": line2,\r\n                \"phoneNumber\": phone,\r\n                \"city\": city,\r\n                \"countrySubdivision\": state,\r\n                \"postalCode\": postalCode,\r\n                \"country\": country,\r\n                \"emailAddress\": email,\r\n                \"phoneticFirstName\": phoneticFirstName,\r\n                \"phoneticLastName\": phoneticLastName,\r\n                \"companyName\": companyName,\r\n                \"division\": division,\r\n            };\r\n\r\n            return (address);\r\n\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @class ShopperApiCredentials\r\n * @classdesc The ShopperApiCredentials for confidential type key\r\n * @extends ShopperApi\r\n * @param {CheckoutJS} parent\r\n * @returns {Promise<ShopperApiCredentials>}\r\n * @category CommerceAPI\r\n */\r\nclass ShopperApiCredentials extends ShopperApi {\r\n\r\n    constructor(parent) {\r\n        super(parent, {\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {}\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Logs in with the specified reference ID.\r\n     * @param {string} dr_external_reference_id\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.AccessTokenObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.loginByReferenceId('12345678');\r\n     */\r\n    async loginByReferenceId(dr_external_reference_id, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n\r\n        const _params = {\r\n            grant_type:'client_credentials',\r\n            dr_external_reference_id:dr_external_reference_id || '',\r\n        };\r\n        const dr_session_token = (await _cjs[SHOPPERAPI].getSessionToken()) || '';\r\n        if(dr_session_token.length) {\r\n            _params['dr_session_token'] = dr_session_token;\r\n        }\r\n        return this.createOAuthToken(_params,params);\r\n    }\r\n\r\n    /**\r\n     * Logs in with the specified user ID.\r\n     * @param {string} dr_user_id\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.AccessTokenObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.loginByUserId('test@email.com');\r\n     */\r\n    async loginByUserId(dr_user_id, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n\r\n        const _params = {\r\n            grant_type:'client_credentials',\r\n            dr_user_id:dr_user_id || '',\r\n        };\r\n        const dr_session_token = (await _cjs[SHOPPERAPI].getSessionToken()) || '';\r\n        if(dr_session_token.length) {\r\n            _params['dr_session_token'] = dr_session_token;\r\n        }\r\n        return this.createOAuthToken(_params,params);\r\n    }\r\n\r\n    /**\r\n     * Logs in with the specified username and password.\r\n     * @param {string} username\r\n     * @param {string} password\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<ShopperApi.AccessTokenObject>}\r\n     * @example\r\n     * checkoutJS.shopperApi.login('test@email.com','password');\r\n     */\r\n    async login(username, password, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _params = {\r\n            grant_type: 'client_credentials',\r\n            username: username,\r\n            password: _cjs[UTIL].base64Encode(password)\r\n        };\r\n\r\n        const dr_session_token = (await _cjs[SHOPPERAPI].getSessionToken()) || '';\r\n        if (dr_session_token.length) {\r\n            _params['dr_session_token'] = dr_session_token;\r\n        }\r\n\r\n        return this.createOAuthToken(_params, params);\r\n    }\r\n}\r\n\r\nexport {ShopperApi,ShopperApiCredentials};\r\n","module.exports = require(\"axios\");","module.exports = require(\"parseurl\");","import {Payment,PaymentRequestPayload} from './payment';\r\nimport {_CHECKOUTJS, CONFIG, REQUESTPAYLOAD, UTIL, PAYMENTS, SHOPPERAPI} from \"../keywords\";\r\n\r\nconst name = 'klarnaCredit';\r\n\r\n/**\r\n * @class KlarnaCredit\r\n * @classdesc Klarna Credit\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {KlarnaCredit}\r\n * @category PaymentMethods\r\n */\r\nclass KlarnaCredit extends Payment{\r\n    constructor(parent,collection) {\r\n        super(parent,collection,name);\r\n        this[REQUESTPAYLOAD] =  new KlarnaCreditPaymentRequestPayload(parent,{}, name, this);\r\n    }\r\n}\r\n\r\n/**\r\n * @class KlarnaCreditPaymentRequestPayload\r\n * @classdesc The request payload for Klarna Credit.\r\n * @extends PaymentRequestPayload\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} paymentType\r\n * @returns {KlarnaCreditPaymentRequestPayload}\r\n * @category PaymentMethods\r\n */\r\nclass KlarnaCreditPaymentRequestPayload extends PaymentRequestPayload {\r\n\r\n    constructor(parent,collection, name, payment) {\r\n        super(parent,collection, name, payment);\r\n    }\r\n\r\n    async getShippingOwner(cartData) {\r\n        let address = cartData.cart.shippingAddress;\r\n        if(Object.keys(address).length===0 ) {\r\n            address = cartData.cart.billingAddress;\r\n        }\r\n        if(Object.keys(address).length > 0 ) {\r\n            return ({\r\n                recipient: (address.firstName || '') + \" \" + (address.lastName  || ''),\r\n                email: address.emailAddress || '',\r\n                phoneNumber: address.phoneNumber || '',\r\n                address: {\r\n                    line1: address.line1 || '',\r\n                    line2: address.line2 || '',\r\n                    city: address.city || '',\r\n                    state: address.countrySubdivision || '',\r\n                    postalCode: address.postalCode || '',\r\n                    country: address.country || ''\r\n                }\r\n            });\r\n        }else{\r\n            return ({});\r\n        }\r\n    }\r\n\r\n    async displayItems(cartData) {\r\n        //const _cjs = this[_CHECKOUTJS];\r\n        const lineItems = [];\r\n        if(cartData && cartData.cart.lineItems && cartData.cart.lineItems.lineItem) {\r\n            for (let i = 0; i < cartData.cart.lineItems.lineItem.length; i++) {\r\n                const lineItem = cartData.cart.lineItems.lineItem[i];\r\n                lineItems.push({\r\n                    name : lineItem.product.displayName,\r\n                    quantity : lineItem.quantity,\r\n                    unitAmount: lineItem.pricing.salePrice.value,\r\n                    sku: lineItem.product.sku,\r\n                    imageUrl: lineItem.product.thumbnailImage,\r\n                    taxRate: lineItem.pricing.taxRate\r\n                });\r\n            }\r\n        }\r\n        return (lineItems);\r\n    }\r\n\r\n    async createObject(cartData) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const owner = await _this.getOwner(cartData);\r\n        const shippingOptions = await _this.shippingOptions(cartData);\r\n        const displayItems = await _this.displayItems(cartData);\r\n        const returnUrl = await _this._payment.getReturnUrl();\r\n        const cancelUrl = await _this._payment.getCancelUrl();\r\n        let _type = _name;\r\n        const useRecurringPayment = await _util.useRecurringPayment(cartData);\r\n        if(useRecurringPayment && _config[PAYMENTS][_name].recurringName){\r\n            _type = _config[PAYMENTS][_name].recurringName;\r\n        }\r\n        const paymentRequestData = {\r\n            type:_type,\r\n            upstreamId: cartData.cart.id,\r\n            owner: owner,\r\n            amount: cartData.cart.pricing.orderTotal.value,\r\n            currency: _config.currency,\r\n        };\r\n\r\n        const custom = {\r\n            returnUrl: returnUrl,\r\n            cancelUrl: cancelUrl,\r\n        };\r\n\r\n        if(cartData && cartData.cart.paymentSession){\r\n            paymentRequestData['sessionId'] = cartData.cart.paymentSession.id;\r\n        }else{\r\n\r\n            _util.extend(custom, {\r\n                items: displayItems,\r\n                locale: _config.locale,\r\n                taxAmount: cartData.cart.pricing.tax.value,\r\n                discountAmount: cartData.cart.pricing.discount.value,\r\n            });\r\n\r\n            if (shippingOptions.length > 0) {\r\n                custom['shippingAmount'] = cartData.cart.pricing.shippingAndHandling.value;\r\n                const shippingOwner = await _this.getShippingOwner(cartData);\r\n                custom['shipping'] = shippingOwner;\r\n            }\r\n\r\n            const tokenInfo = await _shopperApi.getTokenInfo();\r\n            if(tokenInfo){\r\n                custom[\"accountId\"] = tokenInfo.userId;\r\n                custom[\"accountCreatedDate\"] = tokenInfo.createdOn;\r\n                custom[\"accountUpdatedDate\"] = tokenInfo.lastAccessed;\r\n            }\r\n\r\n            let hasPaidBefore = false;\r\n            const orders = await _shopperApi.getOrders();\r\n            if(orders && orders.orders && orders.orders.totalResults>0){\r\n                hasPaidBefore = true;\r\n            }\r\n            custom[\"hasPaidBefore\"] = hasPaidBefore;\r\n\r\n            let autoRenewal = false;\r\n            let subscriptionDescription = \"\";\r\n            cartData.cart.lineItems.lineItem.forEach((lineItem) => {\r\n                lineItem.product.customAttributes.attribute.forEach((attribute) => {\r\n                    if(attribute.name === \"subscriptionSource\") {\r\n                        subscriptionDescription = lineItem.product.displayName;\r\n                    }\r\n                    if(attribute.name === \"isAutomatic\" && attribute.value === \"true\") {\r\n                        autoRenewal = true;\r\n                    }\r\n                });\r\n            });\r\n            custom[\"autoRenewal\"] = autoRenewal;\r\n            custom[\"subscriptionDescription\"] = subscriptionDescription;\r\n\r\n            // \"subscriptionDescription\": \"New Sub\",\r\n            //     \"subscriptionStartDate\": \"2015-08-10T07:45:00Z\",\r\n            //     \"subscriptionEndDate\": \"2015-08-10T07:45:00Z\",\r\n            //     \"autoRenewal\": true,\r\n\r\n        }\r\n\r\n        paymentRequestData[_type] = custom;\r\n        _util.extend(paymentRequestData,_configPayment.source);\r\n        return (paymentRequestData);\r\n    }\r\n}\r\nexport {\r\n    KlarnaCredit,\r\n    KlarnaCreditPaymentRequestPayload,\r\n};\r\n","import {Payment,PaymentRequestPayload} from './payment';\r\nimport {_CHECKOUTJS, CONFIG, PAYMENTS, REQUESTPAYLOAD, UTIL} from \"../keywords\";\r\n\r\nconst name = 'alipay';\r\n\r\n/**\r\n * @class Alipay\r\n * @classdesc Alipay\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {PayPal}\r\n * @category PaymentMethods\r\n * @private\r\n */\r\nclass Alipay extends Payment{\r\n    constructor(parent,collection) {\r\n        super(parent,collection,name);\r\n        this[REQUESTPAYLOAD] =  new AlipayPaymentRequestPayload(parent,{}, name, this);\r\n    }\r\n}\r\n\r\n/**\r\n * @class AlipayPaymentRequestPayload\r\n * @classdesc The request payload for Alipay.\r\n * @extends PaymentRequestPayload\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} paymentType\r\n * @returns {AlipayPaymentRequestPayload}\r\n * @category PaymentMethods\r\n */\r\nclass AlipayPaymentRequestPayload extends PaymentRequestPayload {\r\n\r\n    constructor(parent,collection, name, payment) {\r\n        super(parent,collection, name, payment);\r\n    }\r\n\r\n    async displayItems(cartData) {\r\n        //const _cjs = this[_CHECKOUTJS];\r\n        const lineItems = [];\r\n        if(cartData && cartData.cart.lineItems && cartData.cart.lineItems.lineItem) {\r\n            for (let i = 0; i < cartData.cart.lineItems.lineItem.length; i++) {\r\n                const lineItem = cartData.cart.lineItems.lineItem[i];\r\n                lineItems.push({\r\n                    name : lineItem.product.displayName,\r\n                    quantity : lineItem.pricing.salePriceWithQuantity.value,\r\n                    unitAmount: lineItem.pricing.salePrice.value,\r\n                    sku: lineItem.product.sku,\r\n\r\n                });\r\n            }\r\n        }\r\n        return (lineItems);\r\n    }\r\n\r\n    async createObject(cartData) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _configPayment = _config[PAYMENTS][_name];\r\n        const owner = await this.getOwner(cartData);\r\n        const displayItems = await this.displayItems(cartData);\r\n        const returnUrl = await this._payment.getReturnUrl();\r\n        let _type = _name;\r\n        const useRecurringPayment = await _util.useRecurringPayment(cartData);\r\n        if(useRecurringPayment && _configPayment.recurringName){\r\n            _type = _configPayment.recurringName;\r\n        }\r\n        const paymentRequestData = {\r\n            type:_type,\r\n            upstreamId: cartData.cart.id,\r\n            owner: owner,\r\n            amount: cartData.cart.pricing.orderTotal.value,\r\n            currency: _cjs[CONFIG].currency,\r\n            [_type]: {\r\n                returnUrl: returnUrl,\r\n                items: displayItems,\r\n            }\r\n        };\r\n        if(cartData && cartData.cart.paymentSession){\r\n            paymentRequestData['sessionId'] = cartData.cart.paymentSession.id;\r\n        }\r\n        _util.extend(paymentRequestData,_configPayment.source);\r\n        return (paymentRequestData);\r\n    }\r\n}\r\nexport {\r\n    Alipay,\r\n    AlipayPaymentRequestPayload,\r\n};\r\n","import {Payment,PaymentRequestPayload} from './payment';\r\nimport {_CHECKOUTJS, CONFIG, PAYMENTS, REQUESTPAYLOAD, UTIL} from \"../keywords\";\r\nimport {extend} from \"../util\";\r\n\r\nconst name = 'msts';\r\n\r\n/**\r\n * @class Msts\r\n * @classdesc Msts\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {PayPal}\r\n * @category PaymentMethods\r\n * @private\r\n */\r\nclass Msts extends Payment{\r\n    constructor(parent,collection) {\r\n        super(parent,collection,name);\r\n        this[REQUESTPAYLOAD] =  new MstsPaymentRequestPayload(parent,{}, name, this);\r\n    }\r\n}\r\n\r\n/**\r\n * @class MstsPaymentRequestPayload\r\n * @classdesc The request payload for Msts.\r\n * @extends PaymentRequestPayload\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} paymentType\r\n * @returns {MstsPaymentRequestPayload}\r\n * @category PaymentMethods\r\n */\r\nclass MstsPaymentRequestPayload extends PaymentRequestPayload {\r\n\r\n    constructor(parent,collection, name, payment) {\r\n        super(parent,extend({\r\n            writableMethods: {\r\n                getPoNumber: true,\r\n                getNotes: true,\r\n            }\r\n        },collection), name, payment);\r\n    }\r\n\r\n    async createObject(cartData) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _configPayment = _config[PAYMENTS][_name];\r\n        const owner = await _this.getOwner(cartData);\r\n        const returnUrl = await _this._payment.getReturnUrl();\r\n        const cancelUrl = await _this._payment.getCancelUrl();\r\n        let _type = _name;\r\n        const useRecurringPayment = await _util.useRecurringPayment(cartData);\r\n        if(useRecurringPayment && _configPayment.recurringName){\r\n            _type = _configPayment.recurringName;\r\n        }\r\n        const poNumber = await _this.getPoNumber() || '';\r\n        const notes = await _this.getNotes() || '';\r\n        const paymentRequestData = {\r\n            type:_type,\r\n            upstreamId: cartData.cart.id,\r\n            owner: owner,\r\n            amount: cartData.cart.pricing.orderTotal.value,\r\n            currency: _cjs[CONFIG].currency,\r\n            [_type]: {\r\n                notes: notes,\r\n                poNumber: poNumber,\r\n                returnUrl: returnUrl,\r\n                cancelUrl: cancelUrl,\r\n            }\r\n        };\r\n        if(cartData && cartData.cart.paymentSession){\r\n            paymentRequestData['sessionId'] = cartData.cart.paymentSession.id;\r\n        }\r\n        _util.extend(paymentRequestData,_configPayment.source);\r\n        return (paymentRequestData);\r\n    }\r\n\r\n    async getPoNumber() {\r\n    }\r\n\r\n    async getNotes() {\r\n    }\r\n}\r\nexport {\r\n    Msts,\r\n    MstsPaymentRequestPayload,\r\n};\r\n","import {Payment,PaymentRequestPayload} from './payment';\r\nimport {_CHECKOUTJS, CONFIG, PAYMENTS, REQUESTPAYLOAD, UTIL} from \"../keywords\";\r\nimport {extend} from \"../util\";\r\n\r\nconst name = 'ccavenue';\r\n\r\n/**\r\n * @class Ccavenue\r\n * @classdesc Ccavenue\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {Ccavenue}\r\n * @category PaymentMethods\r\n * @private\r\n */\r\nclass Ccavenue extends Payment{\r\n    constructor(parent,collection) {\r\n        super(parent,collection,name);\r\n        this[REQUESTPAYLOAD] =  new CcavenuePaymentRequestPayload(parent,{}, name, this);\r\n    }\r\n}\r\n\r\n/**\r\n * @class CcavenuePaymentRequestPayload\r\n * @classdesc The request payload for Ccavenue.\r\n * @extends PaymentRequestPayload\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} paymentType\r\n * @returns {CcavenuePaymentRequestPayload}\r\n * @category PaymentMethods\r\n */\r\nclass CcavenuePaymentRequestPayload extends PaymentRequestPayload {\r\n    async createObject(cartData) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n        const _configPayment = _config[PAYMENTS][_name];\r\n        const owner = await _this.getOwner(cartData);\r\n        const returnUrl = await _this._payment.getReturnUrl();\r\n        const cancelUrl = await _this._payment.getCancelUrl();\r\n        let _type = _name;\r\n        const useRecurringPayment = await _util.useRecurringPayment(cartData);\r\n        if(useRecurringPayment && _configPayment.recurringName){\r\n            _type = _configPayment.recurringName;\r\n        }\r\n        const paymentRequestData = {\r\n            type:_type,\r\n            upstreamId: cartData.cart.id,\r\n            owner: owner,\r\n            amount: cartData.cart.pricing.orderTotal.value,\r\n            currency: _cjs[CONFIG].currency,\r\n            [_type]: {\r\n                returnUrl: returnUrl,\r\n                cancelUrl: cancelUrl,\r\n            }\r\n        };\r\n        if(cartData && cartData.cart.paymentSession){\r\n            paymentRequestData['sessionId'] = cartData.cart.paymentSession.id;\r\n        }\r\n        _util.extend(paymentRequestData,_configPayment.source);\r\n        return (paymentRequestData);\r\n    }\r\n}\r\nexport {\r\n    Ccavenue,\r\n    CcavenuePaymentRequestPayload,\r\n};\r\n","import {Payment,PaymentRequestPayload} from './payment';\r\nimport {_CHECKOUTJS, CONFIG, REQUESTPAYLOAD, UTIL, PAYMENTS, SHOPPERAPI} from \"../keywords\";\r\n\r\nconst name = 'dropin';\r\n\r\n/**\r\n * @class Dropin\r\n * @classdesc Dropin\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {Dropin}\r\n * @category PaymentMethods\r\n */\r\nclass Dropin extends Payment{\r\n    constructor(parent,collection) {\r\n        super(parent,collection,name);\r\n        this[REQUESTPAYLOAD] =  new DropinPaymentRequestPayload(parent,{}, name, this);\r\n    }\r\n}\r\n\r\n/**\r\n * @class DropinPaymentRequestPayload\r\n * @classdesc The request payload for Dropin.\r\n * @extends PaymentRequestPayload\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} paymentType\r\n * @returns {DropinPaymentRequestPayload}\r\n * @category PaymentMethods\r\n */\r\nclass DropinPaymentRequestPayload extends PaymentRequestPayload {\r\n\r\n    constructor(parent,collection, name, payment) {\r\n        super(parent,collection, name, payment);\r\n    }\r\n\r\n    async getShippingOwner(cartData) {\r\n        let address = cartData.cart.shippingAddress;\r\n        if(Object.keys(address).length===0 ) {\r\n            address = cartData.cart.billingAddress;\r\n        }\r\n        if(Object.keys(address).length > 0 ) {\r\n            return ({\r\n                recipient: (address.firstName || '') + \" \" + (address.lastName  || ''),\r\n                email: address.emailAddress || '',\r\n                phoneNumber: address.phoneNumber || '',\r\n                address: {\r\n                    line1: address.line1 || '',\r\n                    line2: address.line2 || '',\r\n                    city: address.city || '',\r\n                    state: address.countrySubdivision || '',\r\n                    postalCode: address.postalCode || '',\r\n                    country: address.country || ''\r\n                }\r\n            });\r\n        }else{\r\n            return ({});\r\n        }\r\n    }\r\n\r\n    async createObject(cartData) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const country = (!!cartData && !!cartData.cart.billingAddress.country) ? cartData.cart.billingAddress.country : _config.country;\r\n        const currency = (!!cartData && !!cartData.cart.pricing.orderTotal.currency) ? cartData.cart.pricing.orderTotal.currency : _config.currency;\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const owner = await _this.getOwner(cartData);\r\n        const total = await this.total(cartData);\r\n\r\n        const paymentRequestData = {\r\n            type: _name,\r\n            upstreamId: cartData.cart.id,\r\n            currency: currency,\r\n            amount: total.amount,\r\n            options: _configPayment.options,\r\n            billingAddress: owner,\r\n            paymentMethodConfiguration: {\r\n                style: _configPayment.style\r\n            }\r\n        };\r\n\r\n        if(cartData && cartData.cart.paymentSession){\r\n            paymentRequestData['sessionId'] = cartData.cart.paymentSession.id;\r\n        }else{\r\n            _configPayment.supported = false;\r\n        }\r\n        return (paymentRequestData);\r\n    }\r\n}\r\nexport {\r\n    Dropin,\r\n    DropinPaymentRequestPayload,\r\n};\r\n","import {Base} from \"../base\";\r\nimport {_CHECKOUTJS, CONFIG, DRJS, LOGGING, PAYMENT_SERVICE, UTIL} from \"../keywords\";\r\nimport {extend} from \"../util\";\r\n\r\nconst name = 'compliance';\r\n\r\nclass Compliance extends Base {\r\n    constructor(parent, collection, name = '') {\r\n        super(parent, extend({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                init: true,\r\n            }\r\n        }, collection), name);\r\n    }\r\n\r\n    async init() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n\r\n        const complianceElement = document.getElementById(_config.elements.compliance.elementId);\r\n        let compliance = await _util.getCache(name);\r\n        if (complianceElement != null && !compliance) {\r\n            const complianceOptions = {\r\n                compliance: {\r\n                    locale: _config.locale,\r\n                    entity: _config.entity.code,\r\n                }\r\n            };\r\n            complianceOptions.classes = _config.elements.compliance.classes;\r\n            compliance = _cjs.drjs.createElement(name, complianceOptions);\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createElement',\r\n                type: 'options',\r\n                payment: name,\r\n                options: complianceOptions,\r\n            });\r\n            compliance.mount(_config.elements.compliance.elementId);\r\n            await _util.setCache(name, compliance);\r\n\r\n            _cjs.on('entityUpdate', function (entityData) {\r\n                if (!entityData) {\r\n                    entityData = _config.entity;\r\n                }\r\n                complianceOptions.compliance.locale = _config.locale;\r\n                complianceOptions.compliance.entity = entityData.code;\r\n                compliance.update(complianceOptions);\r\n            });\r\n\r\n            Object.defineProperties(_cjs[PAYMENT_SERVICE], {\r\n                [name]: {\r\n                    writable: true,\r\n                    enumerable: true,\r\n                    configurable: false\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async destroy() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const compliance = await _util.getCache(name);\r\n        if (compliance) {\r\n            await compliance.destroy();\r\n            await _util.removeCache(name);\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    Compliance,\r\n};\r\n","import {StorefrontPayment} from \"../payment\";\r\nimport {Global} from \"../../util\";\r\nimport {\r\n    LOGGING,\r\n    _CHECKOUTJS,\r\n    DRJS,\r\n    CONFIG,\r\n    UTIL,\r\n    SHOPPERAPI,\r\n    PAYMENTS,\r\n    REQUESTPAYLOAD,\r\n    PAYMENT,\r\n    CARTDATA\r\n} from \"../../keywords\";\r\nimport {$} from \"../globalCommerce\";\r\n\r\nconst document = Global.document;\r\nconst name = 'creditCard';\r\n\r\n/**\r\n * @class CreditCardWeb\r\n * @classdesc Credit Card for web storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='creditCard'] - e.g. 'creditCard'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {CreditCardWeb}\r\n * @category PaymentMethods\r\n */\r\nclass CreditCardWeb extends StorefrontPayment {\r\n\r\n    constructor(parent, collection, _name, storefront) {\r\n        super(parent, collection, name, storefront);\r\n    }\r\n\r\n    async initPayment() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _configCreditCard = _cjs[CONFIG][PAYMENTS][name];\r\n        const _drjs = _cjs[DRJS];\r\n        const cardNumberElement = document.getElementById(_configCreditCard.elementId.cardNumber);\r\n        const cardExpirationElement = document.getElementById(_configCreditCard.elementId.cardExpiration);\r\n        const cardCvvElement = document.getElementById(_configCreditCard.elementId.cardCvv);\r\n        let creditCard = await _util.getCache(name);\r\n        if (cardNumberElement && cardExpirationElement && cardCvvElement) {\r\n            const options = {\r\n                style: _configCreditCard.style,\r\n                classes: _configCreditCard.classes,\r\n            };\r\n            creditCard = {\r\n                cardNumber: _drjs.createElement('cardnumber', options),\r\n                cardExpiration: _drjs.createElement('cardexpiration', options),\r\n                cardCVV: _drjs.createElement('cardcvv', options)\r\n            };\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createElement',\r\n                type: 'options',\r\n                payment: name,\r\n                options: options,\r\n            });\r\n            await _util.setCache(name, creditCard);\r\n\r\n            creditCard.cardNumber.mount(_configCreditCard.elementId.cardNumber);\r\n            creditCard.cardExpiration.mount(_configCreditCard.elementId.cardExpiration);\r\n            creditCard.cardCVV.mount(_configCreditCard.elementId.cardCvv);\r\n\r\n            _configCreditCard.show = true;\r\n            Object.defineProperty(_configCreditCard, 'element', {\r\n                value: creditCard,\r\n                enumerable: true,\r\n                configurable: false,\r\n                writable: true,\r\n            });\r\n            return creditCard;\r\n        }\r\n    }\r\n\r\n    async applySourceId() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const _name = this._name;\r\n        const _payment = await _util.getValue(PAYMENT) || {};\r\n        let cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        if (_cjs[CONFIG][PAYMENTS][name].show && (_payment.name !== _name || !_payment.result)) {\r\n            const sourceData = await _this[REQUESTPAYLOAD].createObject(cartData);\r\n            const creditCard = await _util.getCache(name);\r\n            const result = await _cjs[DRJS].createSource(creditCard.cardCVV, sourceData);\r\n            await _util.setValue(PAYMENT, {name: name, result: result});\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createSource',\r\n                type: 'options',\r\n                payment: _name,\r\n                options: result,\r\n            });\r\n            if (result.error) {\r\n                return Promise.reject(result);\r\n            } else if (result.source) {\r\n                const source = result.source;\r\n                await _shopperApi.applySourceToCart(source.id);\r\n                return source;\r\n            }\r\n        }\r\n    }\r\n\r\n    async validateElements() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        const _element = _configPayment.element;\r\n        if (_element && _element.cardnumber.parentNode && _element.cardexpiration.parentNode && _element.cardcvv.parentNode) {\r\n            return (\r\n                _configPayment.element.cardnumber.parentNode.classList.contains(_configPayment.classes.complete) &&\r\n                _configPayment.element.cardexpiration.parentNode.classList.contains(_configPayment.classes.complete) &&\r\n                _configPayment.element.cardcvv.parentNode.classList.contains(_configPayment.classes.complete)\r\n            );\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async destroy() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const creditCard = await _cjs[UTIL].getCache(name);\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        try {\r\n            if (creditCard) {\r\n                if (creditCard.cardNumber) {\r\n                    await creditCard.cardNumber.destroy();\r\n                }\r\n                if (creditCard.cardExpiration) {\r\n                    await creditCard.cardExpiration.destroy();\r\n                }\r\n                if (creditCard.cardCVV) {\r\n                    await creditCard.cardCVV.destroy();\r\n                }\r\n                await _cjs[UTIL].removeCache(name);\r\n            }\r\n            // eslint-disable-next-line no-empty\r\n        } catch (ex) {\r\n        }\r\n\r\n        _configPayment.show = false;\r\n        _configPayment.element = null;\r\n    }\r\n}\r\n\r\n/**\r\n * @class CreditCardGC\r\n * @classdesc Credit Card for Global Commerce storefronts.\r\n * @extends StorefrontPayment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @param {string} [paymentType='creditCard'] - e.g. 'creditCard'\r\n * @param {string} [storefrontType='storefront'] - e.g. 'storefront' / 'gC'\r\n * @returns {CreditCardGC}\r\n * @category PaymentMethods\r\n */\r\nclass CreditCardGC extends StorefrontPayment {\r\n\r\n    constructor(parent, collection) {\r\n        super(parent, collection, name, 'gC');\r\n    }\r\n\r\n    async initPayment() {\r\n        //const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _util = _cjs[UTIL];\r\n        const $paymentMethodID = $(\"#CreditCardMethod,#CurrencySpecificCreditCardMethod\");\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        if ($paymentMethodID.length) {\r\n            if (!_configPayment.remainElements) {\r\n                $('#ccNum').siblings('.infield-label').remove();\r\n                $('#ccNum,#ccMonth,#ccYear').each((index,item)=>{\r\n                    $(_cjs[CONFIG].selector.checkoutForm).prepend('<input type=\"hidden\" name=\"'+$(item).attr('name')+'\" />');\r\n                });\r\n                $('#ccNum').replaceWith($('<span/>').attr('id', _configPayment.mountElement.elements.cardnumber.id));\r\n                $('#ccMonth').replaceWith($('<span/>').attr('id', _configPayment.mountElement.elements.cardexpiration.id));\r\n                $('#cardSecurityCode').replaceWith($('<span/>').attr('id', _configPayment.mountElement.elements.cardcvv.id));\r\n                $('#ccYear').remove();\r\n            } else {\r\n                $('#ccNum').change(function () {\r\n                    if ($(this).val().indexOf('*') === -1) {\r\n                        $paymentMethodID.removeAttr('data-source-id');\r\n                        _util.setValue(PAYMENT, {name: _name});\r\n                    }\r\n                });\r\n            }\r\n            _configPayment.show = true;\r\n        }\r\n        const result = await _cjs[PAYMENTS][name].initPayment.call(this);\r\n\r\n        if (_configPayment.element && _configPayment.element.cardnumber) {\r\n            _configPayment.element.cardnumber.on('change', function () {\r\n                $paymentMethodID.removeAttr('data-source-id');\r\n                _util.setValue(PAYMENT, {name: _name});\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    async applySourceId(applyToCart = false) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _name = this._name;\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][_name];\r\n        const _util = _cjs[UTIL];\r\n        const _payment = await _cjs[UTIL].getValue(PAYMENT) || {};\r\n        if (\r\n            //!($('#ccNum').val().indexOf('*')!==-1 && $(_cjs[CONFIG].selector.checkoutForm).find(_cjs[CONFIG].selector.cloudPaySourceId).val()!=='')\r\n            _configPayment.show && (_payment.name !== _name || !_payment.result)\r\n        ) {\r\n            if (!_configPayment.remainElements) {\r\n                return await _cjs[PAYMENTS][_name].applySourceId.call(_this,applyToCart);\r\n            } else {\r\n                let sourceData = {};\r\n                const owner = await _cjs.gC.getBillingAddress();\r\n                const creditCard = await _this.getCreditCard();\r\n                sourceData = _util.extend(sourceData, {owner: owner});\r\n                sourceData = _util.extend(sourceData, creditCard);\r\n                const result = await _cjs.gC.createSourceToCloudPay(_name, sourceData);\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    async validateElements() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _configPayment = _cjs[CONFIG][PAYMENTS][name];\r\n        const _element = _configPayment.element;\r\n        if (_element && _element.cardnumber?.parentNode && _element.cardexpiration?.parentNode && _element.cardcvv?.parentNode) {\r\n            return (\r\n                _configPayment.element.cardnumber.parentNode.classList.contains(_configPayment.classes.complete) &&\r\n                _configPayment.element.cardexpiration.parentNode.classList.contains(_configPayment.classes.complete) &&\r\n                _configPayment.element.cardcvv.parentNode.classList.contains(_configPayment.classes.complete)\r\n            );\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async createPaymentInfo() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _name = this._name;\r\n        const $paymentMethodID = $(\"#CreditCardMethod,#CurrencySpecificCreditCardMethod,#dr_ExpandPaymentDetailsSwitchSolo\");\r\n        let _payment = (await _util.getValue(PAYMENT) || _cjs[CONFIG].cloudPayPayload);\r\n        $(\"#dr_switchSoloSelect\").remove(); //#billingNickDiv,#dr_ccMethodSelect,#dr_switchSoloSelect\r\n        $paymentMethodID.attr(\"data-type\", name);\r\n        if (_payment.type === name) {\r\n            $('#ccNum').val('************' + _payment.details.lastFourDigits);\r\n            $('#ccMonth').val(_payment.details.expirationMonth);\r\n            $('#ccYear').val(_payment.details.expirationYear);\r\n            $paymentMethodID.attr('data-source-id', _payment.id).trigger('click');\r\n        } else {\r\n\r\n            if (Object.keys(_payment).length === 0) {\r\n                _payment = (await _cjs[UTIL].getValue(PAYMENT) || {});\r\n            }\r\n            if (_payment && (_payment.type === _name || _payment.name === _name)) {\r\n                const source = (_payment && _payment.result && _payment.result.source) ? _payment.result.source : _payment;\r\n                if (source && source.id) {\r\n                    $paymentMethodID.attr('data-source-id', source.id);\r\n                }\r\n                $paymentMethodID.trigger('click');\r\n            }\r\n        }\r\n    }\r\n\r\n    async getCreditCard() {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        try {\r\n            const paymentRequestData = _this.createObject(cartData);\r\n            _util.extend(paymentRequestData,{\r\n                creditCard: {\r\n                    number: $('#ccNum').val(),\r\n                    expirationMonth: $('#ccMonth').val(),\r\n                    expirationYear: $('#ccYear').val(),\r\n                    cvv: $('#cardSecurityCode').val()\r\n                }\r\n            });\r\n        } catch (ex) {\r\n            return Promise.reject(ex);\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    CreditCardGC\r\n}\r\n","import {Base} from \"../base\";\r\nimport {_CHECKOUTJS, CONFIG, DRJS, LOGGING, PAYMENT_SERVICE, UTIL} from \"../keywords\";\r\nimport {extend} from \"../util\";\r\n\r\nconst name = 'offlinerefund';\r\n\r\nclass OfflineRefund extends Base {\r\n    constructor(parent, collection, name = '') {\r\n        super(parent, extend({\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {\r\n                init: true,\r\n                ready: true,\r\n                change: true,\r\n            }\r\n        }, collection), name);\r\n    }\r\n\r\n    async init(refundToken) {\r\n        const _this = this;\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _config = _cjs[CONFIG];\r\n\r\n        const offlineRefundElement = document.getElementById(_config.elements.offlineRefund.elementId);\r\n        let offlineRefund = await _util.getCache(name);\r\n        if (offlineRefundElement != null ) {\r\n            const offlineOptions = {\r\n                refundToken:refundToken\r\n            };\r\n            offlineOptions.style = _config.elements.offlineRefund.style;\r\n            offlineRefund = _cjs.drjs.createElement(name, offlineOptions);\r\n            _cjs.emit(LOGGING, {\r\n                id: _util.getTime(),\r\n                api: DRJS,\r\n                method: 'createElement',\r\n                type: 'options',\r\n                payment: name,\r\n                options: offlineOptions,\r\n            });\r\n            offlineRefund.mount(_config.elements.offlineRefund.elementId);\r\n            offlineRefund.on('ready', _this.ready);\r\n\r\n            offlineRefund.on('change', _this.change);\r\n            await _util.setCache(name, offlineRefund);\r\n\r\n            Object.defineProperties(_cjs[PAYMENT_SERVICE], {\r\n                [name]: {\r\n                    writable: true,\r\n                    enumerable: true,\r\n                    configurable: false\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    async destroy() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const offlineRefund = await _util.getCache(name);\r\n        if (offlineRefund) {\r\n            await offlineRefund.destroy();\r\n            await _util.removeCache(name);\r\n        }\r\n    }\r\n\r\n    async ready() {\r\n\r\n    }\r\n\r\n    async change() {\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    OfflineRefund,\r\n};\r\n","import {Base} from './base';\r\nimport {_CHECKOUTJS, CONFIG, UTIL, POST, GET, SHOPPERAPI, PAYMENT_SERVICE, CARTDATA} from \"./keywords\";\r\n\r\n/**\r\n * The owner data for the payment service.\r\n * @typedef OwnerDataObject\r\n * @memberOf PaymentService\r\n * @type {Object}\r\n * @property {Object} owner\r\n * @property {string} owner.firstName\r\n * @property {string} owner.lastName\r\n * @property {string} owner.email\r\n * @property {string} owner.phoneNumber\r\n * @property {string} [owner.organization]\r\n * @property {PaymentService.AddressDataObject} owner.address\r\n * @property {PaymentService.AdditionalAddressDataObject} [owner.additionalAddressInfo]\r\n * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/common-payment-objects#owner-object\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst OwnerDataObject = {};\r\n\r\n/**\r\n * The address data for the payment service.\r\n * @typedef AddressDataObject\r\n * @memberOf PaymentService\r\n * @type {Object}\r\n * @property {Object} address\r\n * @property {string} address.line1\r\n * @property {string} address.line2\r\n * @property {string} address.city\r\n * @property {string} address.state\r\n * @property {string} address.postalCode\r\n * @property {string} address.country\r\n * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/common-payment-objects#address-object\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst AddressDataObject = {};\r\n\r\n/**\r\n * The additional address data for the payment service.\r\n * @typedef AdditionalAddressDataObject\r\n * @memberOf PaymentService\r\n * @type {Object}\r\n * @property {Object} additionalAddressInfo\r\n * @property {string} additionalAddressInfo.division\r\n * @property {string} additionalAddressInfo.phoneticFirstName\r\n * @property {string} additionalAddressInfo.phoneticLastName\r\n * @see https://developers.digitalriver.com/payment-integrations/digitalriver.js/payment-methods/common-payment-objects#additional-address-information-object\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nconst AdditionalAddressDataObject = {};\r\n\r\nconst apiRequestUrlBase = \"https://api.digitalriver.com\";\r\n\r\n/**\r\n * @class PaymentService\r\n * @classdesc A collection of utilities for payment services.\r\n * @extends Base\r\n * @param {CheckoutJS} parent\r\n * @category Utility\r\n */\r\nclass PaymentService extends Base {\r\n\r\n    constructor(parent) {\r\n        super(parent, {\r\n            excludeMethods: {constructor: true},\r\n            writableMethods: {}\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Creates the payment source from the payment service.\r\n     * @param {PaymentRequestObject} data\r\n     * @param {ShopperApi.QueryParams} [params]\r\n     * @returns {Promise<PaymentSourceObject>}\r\n     * @example checkoutJS.paymentService.createSource(source);\r\n     */\r\n    async createSource(data, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const options = await _shopperApi.getAPIOption({authentication: true});\r\n        Object.assign(options.params, params);\r\n        const drjsApiKey = _config.drjsApiKey ? _config.drjsApiKey : _config.apiKey;\r\n        let token = 'bearer ' + drjsApiKey;\r\n        if (drjsApiKey.indexOf('_') === -1) {\r\n            token = 'Basic ' + _util.base64Encode(drjsApiKey);\r\n        }\r\n        options.headers['Authorization'] = token;\r\n        let _data = _util.extend(data);\r\n        const url = apiRequestUrlBase + \"/payments/sources/\"; //_cjs[CONFIG].apiRequestUrlBase + \"/payments/sources/\";\r\n        options.method = POST;\r\n        options.url = url;\r\n        options.data = _data;\r\n        options.api = PAYMENT_SERVICE;\r\n        options.callby = 'createSource';\r\n        return _util.APIRequest(options);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the payment source from the payment service.\r\n     * @param {string} sourceId\r\n     * @param {string} secret\r\n     * @returns {Promise<PaymentSourceObject>}\r\n     * @example checkoutJS.paymentService.retrieveSource('ffffffff-ffff-ffff-ffff-ffffffffffff',\"ffffffff-ffff-ffff-ffff-ffffffffffff_ffffffff-ffff-ffff-ffff-ffffffffffff\");\r\n     */\r\n    async retrieveSource(sourceId, secret) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const options = await _shopperApi.getAPIOption({authentication: true});\r\n        Object.assign(options.params, {\r\n            secret:secret\r\n        });\r\n        const drjsApiKey = _config.drjsApiKey ? _config.drjsApiKey : _config.apiKey;\r\n        let token = 'bearer ' + drjsApiKey;\r\n        if (drjsApiKey.indexOf('_') === -1) {\r\n            token = 'Basic ' + _util.base64Encode(drjsApiKey);\r\n        }\r\n        options.headers['Authorization'] = token;\r\n\r\n        const data = {};\r\n        const url = apiRequestUrlBase + \"/payments/sources/\" + sourceId || '';//_cjs[CONFIG].apiRequestUrlBase + \"/payments/sources/\" + sourceId || '';\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = PAYMENT_SERVICE;\r\n        options.callby = 'retrieveSource';\r\n        return _util.APIRequest(options);\r\n    }\r\n\r\n    async getPaymentMethods(secret, params) {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        const options = await _shopperApi.getAPIOption({authentication: true});\r\n        Object.assign(options.params, params);\r\n        if(cartData && cartData.cart.paymentSession && cartData.cart.paymentSession.id) {\r\n            Object.assign(options.params, {\r\n                sessionId:cartData.cart.paymentSession.id,\r\n                locale:_config.locale,\r\n            })\r\n        }\r\n        const drjsApiKey = _config.drjsApiKey ? _config.drjsApiKey : _config.apiKey;\r\n        let token = 'bearer ' + drjsApiKey;\r\n        if (drjsApiKey.indexOf('_') === -1) {\r\n            token = 'Basic ' + _util.base64Encode(drjsApiKey);\r\n        }\r\n        options.headers['Authorization'] = token;\r\n\r\n\r\n        const data = {};\r\n        const url = apiRequestUrlBase + \"/payments/payment-methods\";\r\n        options.method = GET;\r\n        options.url = url;\r\n        options.data = data;\r\n        options.api = 'paymentService';\r\n        options.callby = 'getPaymentMethods';\r\n        return _util.APIRequest(options);\r\n    }\r\n}\r\nexport {PaymentService};\r\n","import {ApplePay} from \"../payments/applePay\";\r\nimport {GooglePay} from \"../payments/googlePay\";\r\nimport {PayPal} from \"../payments/payPal\";\r\nimport {Payments, Payment} from \"../payments/payment\";\r\nimport {CONFIG, UTIL, PAYMENTS} from \"../keywords\";\r\n\r\nclass NodePayments extends Payments {\r\n    constructor(parent, collection) {\r\n        super(parent, collection);\r\n        return (async () => {\r\n            parent.payments = await this;\r\n            await parent.payments._createPayments(parent);\r\n            return this;\r\n        })();\r\n    }\r\n\r\n    async _createPayments(parent) {\r\n        const _cjs = parent;\r\n        for (let payment in _cjs[CONFIG][PAYMENTS]) {\r\n            if (!_cjs[CONFIG][PAYMENTS][payment].disable) {\r\n                try {\r\n                    switch (payment) {\r\n                        case 'applePay':\r\n                            _cjs[PAYMENTS][payment] = new ApplePay(_cjs);\r\n                            break;\r\n                        case 'googlePay':\r\n                            _cjs[PAYMENTS][payment] = new GooglePay(_cjs);\r\n                            break;\r\n                        // case 'directDebit':\r\n                        //     _cjs[PAYMENTS][payment] = new DirectDebit(_cjs);\r\n                        //     break;\r\n                        case 'payPal':\r\n                            _cjs[PAYMENTS][payment] = new PayPal(_cjs);\r\n                            break;\r\n                        default:\r\n                            _cjs[PAYMENTS][payment] = new Payment(_cjs,{},payment);\r\n                            break;\r\n                    }\r\n                    const prop = {};\r\n                    prop[payment] = {\r\n                        writable: true,\r\n                        enumerable:  _cjs[CONFIG][PAYMENTS][payment].enumerable!==false,\r\n                        configurable: false\r\n                    };\r\n                    Object.defineProperties(_cjs[PAYMENTS], prop);\r\n                }catch(ex){\r\n                    await _cjs[UTIL].errorMessage(ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    NodePayments\r\n};\r\n","import {Payment} from './payment';\r\n\r\nconst name = 'applePay';\r\n\r\n/**\r\n * @class ApplePay\r\n * @classdesc ApplePay desc\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {ApplePay}\r\n * @category PaymentMethods\r\n */\r\nclass ApplePay extends Payment{\r\n    constructor(parent,collection) {\r\n        super(parent,collection,name);\r\n    }\r\n}\r\n\r\nexport {ApplePay};\r\n","import {Payment} from './payment';\r\nimport {LOGGING, DRJS, _CHECKOUTJS, UTIL, SHOPPERAPI, UNDEFINED, FAIL_TO_APPLY_SOURCE} from '../keywords'\r\n\r\nconst name = 'googlePay';\r\n\r\n/**\r\n * @class GooglePay\r\n * @classdesc GooglePay desc\r\n * @extends Payment\r\n * @param {CheckoutJS} parent\r\n * @param {Base.BaseCollection} [collection]\r\n * @returns {GooglePay}\r\n * @category PaymentMethods\r\n */\r\nclass GooglePay extends Payment {\r\n    constructor(parent,collection) {\r\n        super(parent,collection,name);\r\n    }\r\n\r\n    async applySourceId() {\r\n        const _cjs = this[_CHECKOUTJS];\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        const event = arguments[0];\r\n        if (event) {\r\n            const source = event.source;\r\n            _cjs.emit(LOGGING,{\r\n                id: _util.getTime(),\r\n                api:DRJS,\r\n                method:'createSource',\r\n                type:'options',\r\n                payment: name,\r\n                options: source,\r\n            });\r\n            if (source && source.id) {\r\n                const address = await Promise.all([\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(Object.assign(event.billingAddress, event.contactInformation), 'billingAddress'),\r\n                    _shopperApi.convertPaymentRequestAddressToShopperApiAddress(event.shippingAddress, 'shippingAddress')\r\n                ]);\r\n\r\n                await _shopperApi.applyAddressToCart(address[0], address[1]);\r\n                const response = await _shopperApi.applySourceToCart(source.id);\r\n                if (response && response.cart && typeof response.cart.paymentMethod !== UNDEFINED) {\r\n                    return ([source, response]);\r\n                } else {\r\n                    return Promise.reject(FAIL_TO_APPLY_SOURCE);\r\n                }\r\n            } else if (event.error) {\r\n                return Promise.reject(event.error);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {GooglePay};\r\n","import {Config as DefaultConfig} from './config';\r\nimport {Global, Util} from './util';\r\nimport {LOGGING, DRJS, CONFIG, UTIL, SHOPPER, SHOPPERAPI, PAYMENTS, CJS, CARTDATA, PAYMENT_SERVICE} from './keywords';\r\nimport {BrowserUtil} from './browsers/browserUtil';\r\nimport {ShopperApi,ShopperApiCredentials} from './shopperApi';\r\nimport {PaymentService} from './paymentService';\r\nimport {Storefront} from './browsers/storefront';\r\nimport {GlobalCommerce} from './browsers/globalCommerce';\r\nimport {NodePayments} from './node/payment';\r\n\r\nclass CheckoutJS {\r\n    /**\r\n     * @class CheckoutJS\r\n     * @classdesc The main class of CheckoutJS.\r\n     * @param {module:Config|string} [config] - The default configuration for CheckoutJS.\r\n     * @param {Session} [session] - The user session object, e.g. sessionStorage for browsers, req.session for Express.\r\n     * @returns {Promise<CheckoutJS>}\r\n     * @throws Throws an error if the configuration is incorrect.\r\n     * @see {@tutorial class-diagram}\r\n     * @example var checkoutJS = await (new CheckoutJS({\r\n     *   \"apiKey\": \"c9f0ce6755214355b89ef8179687ffee\",\r\n     *   \"siteId\": \"stdtest2\",\r\n     *   \"currency\": \"USD\",\r\n     *   \"locale\": \"en_US\",\r\n     *   \"lang\": \"en\",\r\n     *   \"drjsApiKey\":\"pk_hc_60bdf4ec989f48088d3732ca1fa2518b\",\r\n     *   \"apiRequestUrlBase\":\"https://dispatch-cte.digitalriverws.net\",\r\n     *   \"payments\": {\r\n     *       \"applePay\": {\r\n     *       \"disable\": false\r\n     *     },\r\n     *     \"googlePay\": {\r\n     *       \"disable\": false\r\n     *     },\r\n     *     \"creditCard\": {\r\n     *       \"disable\": false\r\n     *     }\r\n     *   },\r\n     *   \"debug\": true\r\n     * });\r\n     */\r\n    constructor(config, session) {\r\n        const _this = this;\r\n        /**\r\n         * The unique ID of the CheckoutJS instance.\r\n         * @name id\r\n         * @type symbol\r\n         * @memberof CheckoutJS\r\n         * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\r\n         * @instance\r\n         * @readonly\r\n         * @example checkoutJS.id;\r\n         */\r\n        _this.id = Symbol(\"CheckoutJS\");\r\n\r\n        /**\r\n         * General utility functions.\r\n         * @name util\r\n         * @type Util|BrowserUtil\r\n         * @memberof CheckoutJS\r\n         * @see {@link Util} - for NodeModule\r\n         * @see {@link BrowserUtil} - for Browser\r\n         * @instance\r\n         * @readonly\r\n         * @example checkoutJS.util;\r\n         */\r\n        let _util = _this[UTIL] = new Util(_this,{},session);\r\n\r\n        /**\r\n         * Commerce API (Shopper API) wrapper functions.\r\n         * @name shopperApi\r\n         * @type ShopperApi|ShopperApiCredentials\r\n         * @memberof CheckoutJS\r\n         * @see {@link ShopperApi} (public)\r\n         * @see {@link ShopperApiCredentials} (confidential)\r\n         * @readonly\r\n         * @instance\r\n         * @example checkoutJS.shopperApi;\r\n         */\r\n        _this[SHOPPERAPI] = new ShopperApi(_this);\r\n\r\n        /**\r\n         * Payment services wrapper functions.\r\n         * @name paymentService\r\n         * @type PaymentService\r\n         * @memberof CheckoutJS\r\n         * @see PaymentService\r\n         * @readonly\r\n         * @instance\r\n         * @example checkoutJS.paymentService;\r\n\r\n         */\r\n        _this[PAYMENT_SERVICE] = new PaymentService(_this);\r\n\r\n        /**\r\n         * The configuration payload, which includes all settings and can be customized.\r\n         * @name config\r\n         * @type module:Config\r\n         * @memberof CheckoutJS\r\n         * @see module:Config\r\n         * @see {@link module:ConfigGC} - for Global Commerce hosted sites\r\n         * @instance\r\n         */\r\n        _this[CONFIG] = _this[UTIL].extend({}, DefaultConfig, (typeof config !== 'object')?{}:config);\r\n        let customize = {};\r\n        if (typeof Global.checkoutJS === 'object' && !(Global.checkoutJS instanceof CheckoutJS)) {\r\n            customize = Global.checkoutJS;\r\n        }\r\n\r\n        setEvent.call(_this);\r\n\r\n        /**\r\n         * This event will be triggered after the cart has been updated.\r\n         * @memberof CheckoutJS\r\n         * @event cartUpdated\r\n         * @param {ShopperApi.CartDataObject} cartData\r\n         * @category Events\r\n         * @example checkoutJS.on('cartUpdated',function(cartData){\r\n         *     console.dir(cartData);\r\n         * });\r\n         */\r\n        _this.on('cartUpdated', async function() {\r\n\r\n            const _this = this;\r\n            const cartData = await _util.getValue(CARTDATA);\r\n            if (cartData) {\r\n                _this[CONFIG].entity.code = cartData.cart.businessEntityCode;\r\n                const businessEntityCode = await _util.getValue('businessEntityCode');\r\n                if (businessEntityCode !== cartData.cart.businessEntityCode) {\r\n                    await legalUpdate.call(_this);\r\n                    await _util.setValue('businessEntityCode', cartData.cart.businessEntityCode);\r\n                    /**\r\n                     * The event will be triggered after the entity has been changed.\r\n                     * @memberof CheckoutJS\r\n                     * @event entityUpdate\r\n                     * @category Events\r\n                     * @example checkoutJS.on('entityUpdate',function(entity){\r\n                     *     console.dir(entity);\r\n                     * });\r\n                     */\r\n                    _this.emit('entityUpdate', await _this.getEntity());\r\n                    await _util.removeValue('DISCLOSURE');\r\n                }\r\n            }\r\n        },_this);\r\n\r\n        _this.on(LOGGING, function(log) {\r\n            const _this = this;\r\n            if(log.api===SHOPPERAPI || log.method === 'updateConfig') {\r\n                if(log.responseBody) {\r\n                    const key = [log.api, ':', log.method, \"(\", log.type.toUpperCase(), \")\"];\r\n                    _util.log(key.join(''), log.url || '', log.responseBody || '', log);\r\n                }\r\n            }else if(log.api===DRJS){\r\n                const key = [log.api, ':', log.method, \"(\", log.payment, \")\"];\r\n                _util.log(key.join(''), log.event || '', log);\r\n            }else{\r\n                const key = [log.api, ':', log.method];\r\n                _util.log(key.join(''), log);\r\n            }\r\n\r\n            if(_this[CONFIG].debug){\r\n                const logStr = JSON.stringify(log);\r\n                const url = _util.parseURL(_this[CONFIG].drUrl);\r\n                const newUrl = _util.format(_this[CONFIG].url.config, {\r\n                    domain: url.hostname,\r\n                    siteId: _this[CONFIG].siteId\r\n                });\r\n                const options = {\r\n                    params: {\r\n                        type: log.api,\r\n                        method: log.method\r\n                    },\r\n                    withCredentials: true\r\n                };\r\n                const data = Object.entries({\r\n                    log:logStr\r\n                })\r\n                    .map(([key, val]) => `${key}=${encodeURIComponent(JSON.stringify(val))}`)\r\n                    .join('&');\r\n                try {\r\n                    _util.axios.post(newUrl, data, options);\r\n                }catch(ex) {\r\n                    console.error(ex);\r\n                }\r\n            }\r\n        }.bind(_this));\r\n\r\n        /**\r\n         * Emit this event to re-render all payments.\r\n         * @memberof CheckoutJS\r\n         * @event initializePayments\r\n         * @returns {Promise}\r\n         * @category Events\r\n         * @example checkoutJS.emit('initializePayments');\r\n         */\r\n        _this.on(\"initializePayments\", async function(){\r\n            const _this = this;\r\n            if (_util.isBrowser) {\r\n                let _storefront = _this.storefront;\r\n                if (_util.isGCPage()) {\r\n                    _storefront = _this.gC;\r\n                }\r\n                if(_storefront) {\r\n                    await _storefront.initDigitalRiverJS();\r\n                    await _storefront._destroyPayments();\r\n                    return await _storefront._initPayments();\r\n                }\r\n                return Promise.resolve();\r\n            }\r\n            return Promise.resolve();\r\n        },_this);\r\n\r\n        /**\r\n         * Emit this event to destroy all payments.\r\n         * @memberof CheckoutJS\r\n         * @event destroyPayments\r\n         * @returns {Promise}\r\n         * @category Events\r\n         * @example checkoutJS.emit('destroyPayments');\r\n         */\r\n        _this.on(\"destroyPayments\", async function(){\r\n            const _this = this;\r\n            if (_util.isBrowser) {\r\n                let _storefront = _this.storefront;\r\n                if (_util.isGCPage()) {\r\n                    _storefront = _this.gC;\r\n                }\r\n                return await _storefront._destroyPayments();\r\n            }\r\n            return Promise.resolve();\r\n        },_this);\r\n\r\n        return (async () => {\r\n            const _defineProperties = {\r\n                \"sync\": {\r\n                    value: this.sync.bind(_this),\r\n                    writable: false,\r\n                    enumerable: false,\r\n                    configurable: false\r\n                },\r\n                \"updateLocaleAndCurrency\": {\r\n                    value: this.updateLocaleAndCurrency.bind(_this),\r\n                    writable: false,\r\n                    enumerable: false,\r\n                    configurable: false\r\n                }\r\n            };\r\n            if (_util.isBrowser) {\r\n                _util = _this[UTIL] = new BrowserUtil(_this,{},session);\r\n            }\r\n            _util.extend(_util, customize.util);\r\n\r\n            _defineProperties[UTIL] = {\r\n                value: _util,\r\n                writable: false,\r\n                enumerable: true,\r\n                configurable: false\r\n            };\r\n\r\n            const _cfg = await _util._initConfig(config);\r\n            if (_cfg) {\r\n                config = _cfg;\r\n            }\r\n            if (config && typeof config.apiKey === 'object' && config.apiKey.apiKey && typeof config.apiKey.apiKey === 'string' ) {\r\n                await _util.extend(config, config.apiKey);\r\n            }\r\n            if(typeof config == 'object') {\r\n                await _util.extend(_this[CONFIG], config);\r\n            }\r\n\r\n            if(_this[CONFIG].drUrl.length === 0){\r\n                const url = _util.parseURL(_this[CONFIG].url.config);\r\n                if(url.hostname){\r\n                    _this[CONFIG].drUrl = `https://${url.hostname}/`;\r\n                }\r\n            }\r\n            if(_this[CONFIG].apiKey.length === 0){\r\n                config = await updateConfig.call(_this);\r\n                _util.extend(_this[CONFIG],config);\r\n            }\r\n\r\n            _util.extend(_this[CONFIG], customize.config);\r\n\r\n            _defineProperties[\"config\"] = {\r\n                writable: true,\r\n                enumerable: true,\r\n                configurable: false\r\n            };\r\n\r\n            /**\r\n             * Emit this event to log to the console.\r\n             * @memberof CheckoutJS\r\n             * @event logging\r\n             * @category Events\r\n             * @example checkoutJS.on('logging',function(logs){\r\n             *     console.dir(logs);\r\n             * });\r\n             */\r\n            _this.emit(LOGGING,{\r\n                id: _util.getTime(),\r\n                api:CJS,\r\n                method:'loading',\r\n                requestParams: _util.extend({},_this[CONFIG],{template:\"\"})\r\n            });\r\n\r\n            await _util.setValue(CJS,_this.toJSON(true));\r\n            if (_util.isBrowser && _this[CONFIG].apiKey.length) {\r\n                /**\r\n                 * The Storefront instance.\r\n                 * @name storefront\r\n                 * @type Storefront\r\n                 * @memberof CheckoutJS\r\n                 * @see Storefront\r\n                 * @instance\r\n                 * @readonly\r\n                 */\r\n                const _storefront = await new Storefront(_this);\r\n                _this.storefront = _storefront;\r\n                await _storefront._createPayments(_this);\r\n                _storefront.initDigitalRiverJS().then();\r\n                _this.on('initializeElements',async function() {\r\n                    await _this.storefront.initCompliance();\r\n                });\r\n                if (_util.isGCPage()) {\r\n\r\n                    if(!_cfg.hasOwnProperty('isAuthenticated')) {\r\n                        await _this[SHOPPERAPI].getTokenInfo();\r\n                    }\r\n                    /**\r\n                     * The logic for payments and layouts on the checkout pages of Global Commerce (gC) hosted sites, which only exists on gC pages.\r\n                     * @name gC\r\n                     * @type GlobalCommerce\r\n                     * @memberof CheckoutJS\r\n                     * @see GlobalCommerce\r\n                     * @instance\r\n                     * @readonly\r\n                     * @example checkoutJS.gC;\r\n                     */\r\n                    const globalCommerce = await new GlobalCommerce(_this);\r\n                    _this.gC = globalCommerce;\r\n                    _util.extend(globalCommerce, customize['gC']);\r\n                    if (_this[CONFIG].init) {\r\n                        await globalCommerce.initPageLoad();\r\n                    }\r\n                    await globalCommerce._createPayments(_this);\r\n\r\n                    _defineProperties['gC'] = {\r\n                        writable: false,\r\n                        enumerable: true,\r\n                        configurable: false\r\n                    };\r\n\r\n                }\r\n\r\n                _defineProperties[\"storefront\"] = {\r\n                    writable: false,\r\n                    enumerable: true,\r\n                    configurable: false\r\n                };\r\n\r\n                _defineProperties[PAYMENTS] = {\r\n                    writable: false,\r\n                    enumerable: true,\r\n                    configurable: false\r\n                };\r\n\r\n                _defineProperties[SHOPPER] = {\r\n                    writable: false,\r\n                    enumerable: true,\r\n                    configurable: false\r\n                };\r\n\r\n            } else if (_util.isNode) {\r\n                await new NodePayments(_this);\r\n            }\r\n            if(_this[CONFIG].authUserName.length !== 0 && _this[CONFIG].authPassword.length !== 0 ){\r\n                _this[SHOPPERAPI] = new ShopperApiCredentials(_this);\r\n            }\r\n            _util.extend(_this[SHOPPERAPI], customize[SHOPPERAPI]);\r\n\r\n            _defineProperties[SHOPPERAPI] = {\r\n                value: _this[SHOPPERAPI],\r\n                writable: false,\r\n                enumerable: true,\r\n                configurable: false\r\n            };\r\n\r\n            Object.defineProperties(_this, _defineProperties);\r\n            _util.extend(_this, customize);\r\n\r\n            if(_util.isBrowser) {\r\n                _this.once('initializePageElement', async () => {\r\n                    await _this.emit(\"initializeElements\");\r\n                    await _this.emit(\"initializePayments\");\r\n                    await _this.emit(\"initializedPageElement\");\r\n                });\r\n\r\n                /**\r\n                 * This event will be triggered if the CheckoutJS elements and payments need to be initialized.\r\n                 * @memberof CheckoutJS\r\n                 * @event initializeElements\r\n                 * @category Events\r\n                 * @example checkoutJS.on('initializeElements',function(){\r\n                 *     console.log('CheckoutJS elements initialize');\r\n                 * })\r\n                 */\r\n                if (_this[CONFIG].init) {\r\n                    BrowserUtil.ready(async () => {\r\n                        await _this.emit('initializePageElement');\r\n                    });\r\n                }\r\n            }\r\n\r\n            /**\r\n             * This event will be triggered after the CheckoutJS instance has been initialized.\r\n             * @memberof CheckoutJS\r\n             * @event initialized\r\n             * @category Events\r\n             * @example checkoutJS.on('initialized',function(){\r\n             *     console.log('CheckoutJS is ready');\r\n             * })\r\n             */\r\n            await _this.emit('initialized', _this);\r\n\r\n            return _this;\r\n        })();\r\n    }\r\n\r\n    async getConfirmDisclosure() {\r\n        const _cjs = this;\r\n        const disclosure = await _cjs.getDisclosure();\r\n        return disclosure.confirmDisclosure?.localizedText;\r\n    }\r\n\r\n    async getAutorenewalPlanTerms() {\r\n        const _cjs = this;\r\n        const disclosure = await _cjs.getDisclosure();\r\n        return disclosure.autorenewalPlanTerms?.localizedText;\r\n    }\r\n\r\n    async hasAutorenewal() {\r\n        const _cjs = this;\r\n        const _util = _cjs[UTIL];\r\n        const _shopperApi = _cjs[SHOPPERAPI];\r\n        let autoRenewal = false;\r\n        const cartData = await _util.getValue(CARTDATA) || await _shopperApi.getCart();\r\n        if(cartData.cart.lineItems.lineItem) {\r\n            cartData.cart.lineItems.lineItem.forEach((lineItem) => {\r\n                lineItem.product.customAttributes.attribute.forEach((attribute) => {\r\n                    if (attribute.name === \"isAutomatic\" && attribute.value === \"true\") {\r\n                        autoRenewal = true;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        return autoRenewal;\r\n    }\r\n\r\n    async getDisclosure() {\r\n        const _cjs = this;\r\n        const _config = _cjs[CONFIG];\r\n        const _util = _cjs[UTIL];\r\n        if(_config.entity.code && _cjs.drjs)\r\n        {\r\n            let disclosure = await _util.getCache('DISCLOSURE'+_config.locale);\r\n            if(!disclosure) {\r\n                disclosure = _cjs.drjs.Compliance.getDetails(_config.entity.code, _config.locale);\r\n                await _util.setCache('DISCLOSURE'+_config.locale,disclosure);\r\n            }\r\n            return disclosure.disclosure;\r\n        }\r\n        return {};\r\n    }\r\n\r\n    getEntity() {\r\n        const _this = this;\r\n        return _this[CONFIG].entity;\r\n    }\r\n\r\n    /**\r\n     * Syncs local cart data and shopper data from Commerce API.\r\n     * @returns {Promise}\r\n     * @example checkoutJS.sync();\r\n     */\r\n    async sync() {\r\n        const _this = this;\r\n        const _util = _this[UTIL];\r\n        await Promise.all([\r\n            updateConfig.call(_this, true).then((config)=> {\r\n                _util.extend(_this[CONFIG], config);\r\n            }),\r\n            _this[SHOPPERAPI].getCart()\r\n        ]);\r\n        await _util.setValue(CJS,_this.toJSON(true));\r\n    }\r\n\r\n    /**\r\n     * Updates the locale and currency for the cart and shopper.\r\n     * @param {string} locale - The locale code, e.g. en_US.\r\n     * @param {string} currency - The currency code, e.g. USD.\r\n     * @returns {Promise}\r\n     * @example checkoutJS.updateLocaleAndCurrency('en_GB','GBP');\r\n     */\r\n    async updateLocaleAndCurrency(locale, currency) {\r\n        const _this = this;\r\n        const _util = _this[UTIL];\r\n        const _config = _this[CONFIG];\r\n        const _shopperApi = _this[SHOPPERAPI];\r\n        const data = {\r\n            locale: locale,\r\n            currency: currency\r\n        };\r\n        _this.drjs = null;\r\n        await _shopperApi.updateShopper({shopper: data});\r\n        await _shopperApi.getCart();\r\n        const force = (_config.locale !== locale || _config.currency !== currency);\r\n        _config.locale = locale;\r\n        _config.currency = currency;\r\n        const cfg = await updateConfig.call(_this, force);\r\n        if (cfg && typeof cfg.apiKey === 'object' && cfg.apiKey.apiKey && typeof cfg.apiKey.apiKey === 'string' ) {\r\n            _util.extend(cfg, cfg.apiKey);\r\n        }\r\n        _util.extend(_config,cfg);\r\n        await _this.emit(\"initializePayments\");\r\n        await _util.setValue(CJS,_this.toJSON(true));\r\n    }\r\n\r\n    /**\r\n     * Destroys the checkoutJS instance, including DigitalRiver.js payment elements and local shopper data.\r\n     * @returns {Promise<void>}\r\n     * @example checkoutJS.destroy();\r\n     * @readonly\r\n     */\r\n    async destroy() {\r\n        const _this = this;\r\n        await _this.emit('destroyPayments');\r\n        await _this[SHOPPER].destroy();\r\n        _this[CONFIG] = DefaultConfig;\r\n        //delete _this.gC;\r\n        //delete _this.util;\r\n        //delete _this.payments;\r\n        //delete _this.shopperApi;\r\n        //delete _this.drjs;\r\n    }\r\n\r\n    /**\r\n     * Serializes to a JSON object.\r\n     * @param {boolean} [deep=false] - Option to use deep cloning for JSON serializable types.\r\n     * @returns {{shopper:{},config:{}}}\r\n     * @example JSON.stringify(checkoutJS);\r\n     * @readonly\r\n     */\r\n    toJSON(deep) {\r\n        const _this = this;\r\n        const _shopper = _this[SHOPPER]?_this[SHOPPER].toJSON(deep):{};\r\n        return {\r\n            'shopper': _shopper,\r\n            'config': _this[CONFIG]\r\n        };\r\n    }\r\n}\r\n\r\nfunction setEvent() {\r\n    const _this = this;\r\n\r\n    const events = {};\r\n    const eventsObj = {};\r\n    const uniqueIds ={};\r\n\r\n    /**\r\n     * Attaches an event handler.\r\n     * @name on\r\n     * @memberOf CheckoutJS\r\n     * @param {string} event\r\n     * @param {Function} listener\r\n     * @param {Object} caller\r\n     * @returns {void}\r\n     * @instance\r\n     * @function on\r\n     * @readonly\r\n     * @example checkoutJS.on('initialized',function(){\r\n     *     console.log('initialized');\r\n     * },this);\r\n     */\r\n    _this.on = function (event, listener, caller ) {\r\n        if (typeof events[event] !== 'object') {\r\n            events[event] = [];\r\n            eventsObj[event] = [];\r\n        }\r\n        events[event].push(listener);\r\n        eventsObj[event].push(caller);\r\n    };\r\n\r\n    /**\r\n     * Removes an event handler.\r\n     * @name removeListener\r\n     * @memberOf CheckoutJS\r\n     * @param {string} event\r\n     * @param {Function} listener\r\n     * @returns {void}\r\n     * @instance\r\n     * @function removeListener\r\n     * @readonly\r\n     * @example\r\n     * function initialized(){ console.log('initialized'); };\r\n     * checkoutJS.on('initialized',initialized);\r\n     * checkoutJS.removeListener('initialized', initialized);\r\n     */\r\n    _this.removeListener = function (event, listener) {\r\n        let idx;\r\n        if (typeof events[event] === 'object') {\r\n            idx = events[event].indexOf(listener);\r\n\r\n            if (idx > -1) {\r\n                events[event].splice(idx, 1);\r\n                eventsObj[event].splice(idx, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Emits an event.\r\n     * @name emit\r\n     * @memberOf CheckoutJS\r\n     * @param {string} event - The event name.\r\n     * @returns {Promise<Object[]>}\r\n     * @instance\r\n     * @function emit\r\n     * @readonly\r\n     * @example checkoutJS.emit(\"initializePayments\");\r\n     */\r\n    _this.emit = function (event) {\r\n        let i, listeners, length, args = [].slice.call(arguments, 1), callers;\r\n\r\n        if (typeof events[event] === 'object') {\r\n            listeners = events[event].slice();\r\n            callers = eventsObj[event].slice();\r\n            length = listeners.length;\r\n            const promise = [];\r\n            for (i = 0; i < length; i++) {\r\n                let caller = callers[i];\r\n                if(!caller) caller = _this;\r\n                promise.push(listeners[i].apply(caller, args));\r\n            }\r\n            return Promise.all(promise);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Attaches an event and removes the event after it has fired, i.e. a one-time event.\r\n     * @name once\r\n     * @memberOf CheckoutJS\r\n     * @param {string} event\r\n     * @param {Function} listener\r\n     * @param {string} id\r\n     * @returns {void}\r\n     * @instance\r\n     * @function once\r\n     * @readonly\r\n     * @example checkoutJS.once('initialized',function(){\r\n     *     console.log('initialized');\r\n     * });\r\n     */\r\n    _this.once = function (event, listener, id) {\r\n        if(id) {\r\n            if(uniqueIds.hasOwnProperty(id)) return;\r\n            uniqueIds[id] = true;\r\n        }\r\n        _this.on(event, function g() {\r\n            _this.removeListener(event, g);\r\n            listener.apply(self, arguments);\r\n        })\r\n    };\r\n\r\n    Object.defineProperties(_this, {\r\n        \"on\": {\r\n            writable: false,\r\n            enumerable: false,\r\n            configurable: false\r\n        },\r\n        \"once\": {\r\n            writable: false,\r\n            enumerable: false,\r\n            configurable: false\r\n        },\r\n        \"emit\": {\r\n            writable: false,\r\n            enumerable: false,\r\n            configurable: false\r\n        },\r\n        \"removeListener\": {\r\n            writable: false,\r\n            enumerable: false,\r\n            configurable: false\r\n        }\r\n    });\r\n}\r\n\r\nasync function updateConfig(refresh) {\r\n    const _this = this;\r\n    const _config = _this[CONFIG];\r\n    const _util = _this[UTIL];\r\n    if(_config.drUrl.length!==0) {\r\n        const url = _util.parseURL(_config.drUrl);\r\n        const newUrl = _util.format(_config.url.config, {\r\n            domain: url.hostname,\r\n            siteId: _config.siteId\r\n        });\r\n        return await _util.updateConfig(newUrl, refresh);\r\n    }\r\n    return Promise.resolve(_config);\r\n}\r\n\r\nasync function legalUpdate() {\r\n    const _this = this;\r\n    const _config = _this[CONFIG];\r\n    const _cfg = await updateConfig.call(_this);\r\n    if (_cfg && _cfg.entity) {\r\n        _config.entity = _cfg.entity;\r\n    }\r\n    return Promise.resolve(_config.entity);\r\n}\r\n\r\nexport {CheckoutJS};\r\n"],"sourceRoot":""}
